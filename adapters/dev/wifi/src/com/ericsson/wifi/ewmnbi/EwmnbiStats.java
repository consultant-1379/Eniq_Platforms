// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ewmnbi_stats.proto

package com.ericsson.wifi.ewmnbi;

public final class EwmnbiStats {
  private EwmnbiStats() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface StatsBatchOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint64 timestamp = 1;
    boolean hasTimestamp();
    long getTimestamp();
    
    // optional .com.ericsson.wifi.ewmnbi.MoId moId = 2;
    boolean hasMoId();
    com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId getMoId();
    com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoIdOrBuilder getMoIdOrBuilder();
    
    // optional .com.ericsson.wifi.ewmnbi.NodeStats nodeStats = 3;
    boolean hasNodeStats();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats getNodeStats();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStatsOrBuilder getNodeStatsOrBuilder();
    
    // optional .com.ericsson.wifi.ewmnbi.CableModemStats cableModemStats = 4;
    boolean hasCableModemStats();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats getCableModemStats();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStatsOrBuilder getCableModemStatsOrBuilder();
    
    // repeated .com.ericsson.wifi.ewmnbi.CableModemDsChStats cableModemDsChStats = 5;
    java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats> 
        getCableModemDsChStatsList();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats getCableModemDsChStats(int index);
    int getCableModemDsChStatsCount();
    java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStatsOrBuilder> 
        getCableModemDsChStatsOrBuilderList();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStatsOrBuilder getCableModemDsChStatsOrBuilder(
        int index);
    
    // repeated .com.ericsson.wifi.ewmnbi.CableModemUsChStats cableModemUsChStats = 6;
    java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats> 
        getCableModemUsChStatsList();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats getCableModemUsChStats(int index);
    int getCableModemUsChStatsCount();
    java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStatsOrBuilder> 
        getCableModemUsChStatsOrBuilderList();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStatsOrBuilder getCableModemUsChStatsOrBuilder(
        int index);
    
    // repeated .com.ericsson.wifi.ewmnbi.TunnelStats tunnelStats = 7;
    java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats> 
        getTunnelStatsList();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats getTunnelStats(int index);
    int getTunnelStatsCount();
    java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStatsOrBuilder> 
        getTunnelStatsOrBuilderList();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStatsOrBuilder getTunnelStatsOrBuilder(
        int index);
    
    // repeated .com.ericsson.wifi.ewmnbi.WifiStats wifiStats = 8;
    java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats> 
        getWifiStatsList();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats getWifiStats(int index);
    int getWifiStatsCount();
    java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStatsOrBuilder> 
        getWifiStatsOrBuilderList();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStatsOrBuilder getWifiStatsOrBuilder(
        int index);
    
    // repeated .com.ericsson.wifi.ewmnbi.WlanStats wlanStats = 9;
    java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats> 
        getWlanStatsList();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats getWlanStats(int index);
    int getWlanStatsCount();
    java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStatsOrBuilder> 
        getWlanStatsOrBuilderList();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStatsOrBuilder getWlanStatsOrBuilder(
        int index);
    
    // repeated .com.ericsson.wifi.ewmnbi.MeshStats meshStats = 10;
    java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats> 
        getMeshStatsList();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats getMeshStats(int index);
    int getMeshStatsCount();
    java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStatsOrBuilder> 
        getMeshStatsOrBuilderList();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStatsOrBuilder getMeshStatsOrBuilder(
        int index);
    
    // repeated .com.ericsson.wifi.ewmnbi.EthernetStats ethernetStats = 11;
    java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats> 
        getEthernetStatsList();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats getEthernetStats(int index);
    int getEthernetStatsCount();
    java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStatsOrBuilder> 
        getEthernetStatsOrBuilderList();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStatsOrBuilder getEthernetStatsOrBuilder(
        int index);
    
    // optional .com.ericsson.wifi.ewmnbi.UsbModemStats usbModemStats = 12;
    boolean hasUsbModemStats();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats getUsbModemStats();
    com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStatsOrBuilder getUsbModemStatsOrBuilder();
  }
  public static final class StatsBatch extends
      com.google.protobuf.GeneratedMessage
      implements StatsBatchOrBuilder {
    // Use StatsBatch.newBuilder() to construct.
    private StatsBatch(Builder builder) {
      super(builder);
    }
    private StatsBatch(boolean noInit) {}
    
    private static final StatsBatch defaultInstance;
    public static StatsBatch getDefaultInstance() {
      return defaultInstance;
    }
    
    public StatsBatch getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_StatsBatch_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_StatsBatch_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint64 timestamp = 1;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getTimestamp() {
      return timestamp_;
    }
    
    // optional .com.ericsson.wifi.ewmnbi.MoId moId = 2;
    public static final int MOID_FIELD_NUMBER = 2;
    private com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId moId_;
    public boolean hasMoId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId getMoId() {
      return moId_;
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoIdOrBuilder getMoIdOrBuilder() {
      return moId_;
    }
    
    // optional .com.ericsson.wifi.ewmnbi.NodeStats nodeStats = 3;
    public static final int NODESTATS_FIELD_NUMBER = 3;
    private com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats nodeStats_;
    public boolean hasNodeStats() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats getNodeStats() {
      return nodeStats_;
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStatsOrBuilder getNodeStatsOrBuilder() {
      return nodeStats_;
    }
    
    // optional .com.ericsson.wifi.ewmnbi.CableModemStats cableModemStats = 4;
    public static final int CABLEMODEMSTATS_FIELD_NUMBER = 4;
    private com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats cableModemStats_;
    public boolean hasCableModemStats() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats getCableModemStats() {
      return cableModemStats_;
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStatsOrBuilder getCableModemStatsOrBuilder() {
      return cableModemStats_;
    }
    
    // repeated .com.ericsson.wifi.ewmnbi.CableModemDsChStats cableModemDsChStats = 5;
    public static final int CABLEMODEMDSCHSTATS_FIELD_NUMBER = 5;
    private java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats> cableModemDsChStats_;
    public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats> getCableModemDsChStatsList() {
      return cableModemDsChStats_;
    }
    public java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStatsOrBuilder> 
        getCableModemDsChStatsOrBuilderList() {
      return cableModemDsChStats_;
    }
    public int getCableModemDsChStatsCount() {
      return cableModemDsChStats_.size();
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats getCableModemDsChStats(int index) {
      return cableModemDsChStats_.get(index);
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStatsOrBuilder getCableModemDsChStatsOrBuilder(
        int index) {
      return cableModemDsChStats_.get(index);
    }
    
    // repeated .com.ericsson.wifi.ewmnbi.CableModemUsChStats cableModemUsChStats = 6;
    public static final int CABLEMODEMUSCHSTATS_FIELD_NUMBER = 6;
    private java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats> cableModemUsChStats_;
    public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats> getCableModemUsChStatsList() {
      return cableModemUsChStats_;
    }
    public java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStatsOrBuilder> 
        getCableModemUsChStatsOrBuilderList() {
      return cableModemUsChStats_;
    }
    public int getCableModemUsChStatsCount() {
      return cableModemUsChStats_.size();
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats getCableModemUsChStats(int index) {
      return cableModemUsChStats_.get(index);
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStatsOrBuilder getCableModemUsChStatsOrBuilder(
        int index) {
      return cableModemUsChStats_.get(index);
    }
    
    // repeated .com.ericsson.wifi.ewmnbi.TunnelStats tunnelStats = 7;
    public static final int TUNNELSTATS_FIELD_NUMBER = 7;
    private java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats> tunnelStats_;
    public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats> getTunnelStatsList() {
      return tunnelStats_;
    }
    public java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStatsOrBuilder> 
        getTunnelStatsOrBuilderList() {
      return tunnelStats_;
    }
    public int getTunnelStatsCount() {
      return tunnelStats_.size();
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats getTunnelStats(int index) {
      return tunnelStats_.get(index);
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStatsOrBuilder getTunnelStatsOrBuilder(
        int index) {
      return tunnelStats_.get(index);
    }
    
    // repeated .com.ericsson.wifi.ewmnbi.WifiStats wifiStats = 8;
    public static final int WIFISTATS_FIELD_NUMBER = 8;
    private java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats> wifiStats_;
    public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats> getWifiStatsList() {
      return wifiStats_;
    }
    public java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStatsOrBuilder> 
        getWifiStatsOrBuilderList() {
      return wifiStats_;
    }
    public int getWifiStatsCount() {
      return wifiStats_.size();
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats getWifiStats(int index) {
      return wifiStats_.get(index);
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStatsOrBuilder getWifiStatsOrBuilder(
        int index) {
      return wifiStats_.get(index);
    }
    
    // repeated .com.ericsson.wifi.ewmnbi.WlanStats wlanStats = 9;
    public static final int WLANSTATS_FIELD_NUMBER = 9;
    private java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats> wlanStats_;
    public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats> getWlanStatsList() {
      return wlanStats_;
    }
    public java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStatsOrBuilder> 
        getWlanStatsOrBuilderList() {
      return wlanStats_;
    }
    public int getWlanStatsCount() {
      return wlanStats_.size();
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats getWlanStats(int index) {
      return wlanStats_.get(index);
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStatsOrBuilder getWlanStatsOrBuilder(
        int index) {
      return wlanStats_.get(index);
    }
    
    // repeated .com.ericsson.wifi.ewmnbi.MeshStats meshStats = 10;
    public static final int MESHSTATS_FIELD_NUMBER = 10;
    private java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats> meshStats_;
    public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats> getMeshStatsList() {
      return meshStats_;
    }
    public java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStatsOrBuilder> 
        getMeshStatsOrBuilderList() {
      return meshStats_;
    }
    public int getMeshStatsCount() {
      return meshStats_.size();
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats getMeshStats(int index) {
      return meshStats_.get(index);
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStatsOrBuilder getMeshStatsOrBuilder(
        int index) {
      return meshStats_.get(index);
    }
    
    // repeated .com.ericsson.wifi.ewmnbi.EthernetStats ethernetStats = 11;
    public static final int ETHERNETSTATS_FIELD_NUMBER = 11;
    private java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats> ethernetStats_;
    public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats> getEthernetStatsList() {
      return ethernetStats_;
    }
    public java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStatsOrBuilder> 
        getEthernetStatsOrBuilderList() {
      return ethernetStats_;
    }
    public int getEthernetStatsCount() {
      return ethernetStats_.size();
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats getEthernetStats(int index) {
      return ethernetStats_.get(index);
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStatsOrBuilder getEthernetStatsOrBuilder(
        int index) {
      return ethernetStats_.get(index);
    }
    
    // optional .com.ericsson.wifi.ewmnbi.UsbModemStats usbModemStats = 12;
    public static final int USBMODEMSTATS_FIELD_NUMBER = 12;
    private com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats usbModemStats_;
    public boolean hasUsbModemStats() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats getUsbModemStats() {
      return usbModemStats_;
    }
    public com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStatsOrBuilder getUsbModemStatsOrBuilder() {
      return usbModemStats_;
    }
    
    private void initFields() {
      timestamp_ = 0L;
      moId_ = com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId.getDefaultInstance();
      nodeStats_ = com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.getDefaultInstance();
      cableModemStats_ = com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.getDefaultInstance();
      cableModemDsChStats_ = java.util.Collections.emptyList();
      cableModemUsChStats_ = java.util.Collections.emptyList();
      tunnelStats_ = java.util.Collections.emptyList();
      wifiStats_ = java.util.Collections.emptyList();
      wlanStats_ = java.util.Collections.emptyList();
      meshStats_ = java.util.Collections.emptyList();
      ethernetStats_ = java.util.Collections.emptyList();
      usbModemStats_ = com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, moId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, nodeStats_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, cableModemStats_);
      }
      for (int i = 0; i < cableModemDsChStats_.size(); i++) {
        output.writeMessage(5, cableModemDsChStats_.get(i));
      }
      for (int i = 0; i < cableModemUsChStats_.size(); i++) {
        output.writeMessage(6, cableModemUsChStats_.get(i));
      }
      for (int i = 0; i < tunnelStats_.size(); i++) {
        output.writeMessage(7, tunnelStats_.get(i));
      }
      for (int i = 0; i < wifiStats_.size(); i++) {
        output.writeMessage(8, wifiStats_.get(i));
      }
      for (int i = 0; i < wlanStats_.size(); i++) {
        output.writeMessage(9, wlanStats_.get(i));
      }
      for (int i = 0; i < meshStats_.size(); i++) {
        output.writeMessage(10, meshStats_.get(i));
      }
      for (int i = 0; i < ethernetStats_.size(); i++) {
        output.writeMessage(11, ethernetStats_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(12, usbModemStats_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, moId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, nodeStats_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cableModemStats_);
      }
      for (int i = 0; i < cableModemDsChStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, cableModemDsChStats_.get(i));
      }
      for (int i = 0; i < cableModemUsChStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, cableModemUsChStats_.get(i));
      }
      for (int i = 0; i < tunnelStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, tunnelStats_.get(i));
      }
      for (int i = 0; i < wifiStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, wifiStats_.get(i));
      }
      for (int i = 0; i < wlanStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, wlanStats_.get(i));
      }
      for (int i = 0; i < meshStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, meshStats_.get(i));
      }
      for (int i = 0; i < ethernetStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, ethernetStats_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, usbModemStats_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_StatsBatch_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_StatsBatch_fieldAccessorTable;
      }
      
      // Construct using com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMoIdFieldBuilder();
          getNodeStatsFieldBuilder();
          getCableModemStatsFieldBuilder();
          getCableModemDsChStatsFieldBuilder();
          getCableModemUsChStatsFieldBuilder();
          getTunnelStatsFieldBuilder();
          getWifiStatsFieldBuilder();
          getWlanStatsFieldBuilder();
          getMeshStatsFieldBuilder();
          getEthernetStatsFieldBuilder();
          getUsbModemStatsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (moIdBuilder_ == null) {
          moId_ = com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId.getDefaultInstance();
        } else {
          moIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (nodeStatsBuilder_ == null) {
          nodeStats_ = com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.getDefaultInstance();
        } else {
          nodeStatsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cableModemStatsBuilder_ == null) {
          cableModemStats_ = com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.getDefaultInstance();
        } else {
          cableModemStatsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (cableModemDsChStatsBuilder_ == null) {
          cableModemDsChStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          cableModemDsChStatsBuilder_.clear();
        }
        if (cableModemUsChStatsBuilder_ == null) {
          cableModemUsChStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          cableModemUsChStatsBuilder_.clear();
        }
        if (tunnelStatsBuilder_ == null) {
          tunnelStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          tunnelStatsBuilder_.clear();
        }
        if (wifiStatsBuilder_ == null) {
          wifiStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          wifiStatsBuilder_.clear();
        }
        if (wlanStatsBuilder_ == null) {
          wlanStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          wlanStatsBuilder_.clear();
        }
        if (meshStatsBuilder_ == null) {
          meshStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          meshStatsBuilder_.clear();
        }
        if (ethernetStatsBuilder_ == null) {
          ethernetStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          ethernetStatsBuilder_.clear();
        }
        if (usbModemStatsBuilder_ == null) {
          usbModemStats_ = com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.getDefaultInstance();
        } else {
          usbModemStatsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch.getDescriptor();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch getDefaultInstanceForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch.getDefaultInstance();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch build() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch buildPartial() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch result = new com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (moIdBuilder_ == null) {
          result.moId_ = moId_;
        } else {
          result.moId_ = moIdBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (nodeStatsBuilder_ == null) {
          result.nodeStats_ = nodeStats_;
        } else {
          result.nodeStats_ = nodeStatsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (cableModemStatsBuilder_ == null) {
          result.cableModemStats_ = cableModemStats_;
        } else {
          result.cableModemStats_ = cableModemStatsBuilder_.build();
        }
        if (cableModemDsChStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            cableModemDsChStats_ = java.util.Collections.unmodifiableList(cableModemDsChStats_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.cableModemDsChStats_ = cableModemDsChStats_;
        } else {
          result.cableModemDsChStats_ = cableModemDsChStatsBuilder_.build();
        }
        if (cableModemUsChStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            cableModemUsChStats_ = java.util.Collections.unmodifiableList(cableModemUsChStats_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.cableModemUsChStats_ = cableModemUsChStats_;
        } else {
          result.cableModemUsChStats_ = cableModemUsChStatsBuilder_.build();
        }
        if (tunnelStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            tunnelStats_ = java.util.Collections.unmodifiableList(tunnelStats_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.tunnelStats_ = tunnelStats_;
        } else {
          result.tunnelStats_ = tunnelStatsBuilder_.build();
        }
        if (wifiStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            wifiStats_ = java.util.Collections.unmodifiableList(wifiStats_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.wifiStats_ = wifiStats_;
        } else {
          result.wifiStats_ = wifiStatsBuilder_.build();
        }
        if (wlanStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            wlanStats_ = java.util.Collections.unmodifiableList(wlanStats_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.wlanStats_ = wlanStats_;
        } else {
          result.wlanStats_ = wlanStatsBuilder_.build();
        }
        if (meshStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            meshStats_ = java.util.Collections.unmodifiableList(meshStats_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.meshStats_ = meshStats_;
        } else {
          result.meshStats_ = meshStatsBuilder_.build();
        }
        if (ethernetStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            ethernetStats_ = java.util.Collections.unmodifiableList(ethernetStats_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.ethernetStats_ = ethernetStats_;
        } else {
          result.ethernetStats_ = ethernetStatsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000010;
        }
        if (usbModemStatsBuilder_ == null) {
          result.usbModemStats_ = usbModemStats_;
        } else {
          result.usbModemStats_ = usbModemStatsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch) {
          return mergeFrom((com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch other) {
        if (other == com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasMoId()) {
          mergeMoId(other.getMoId());
        }
        if (other.hasNodeStats()) {
          mergeNodeStats(other.getNodeStats());
        }
        if (other.hasCableModemStats()) {
          mergeCableModemStats(other.getCableModemStats());
        }
        if (cableModemDsChStatsBuilder_ == null) {
          if (!other.cableModemDsChStats_.isEmpty()) {
            if (cableModemDsChStats_.isEmpty()) {
              cableModemDsChStats_ = other.cableModemDsChStats_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCableModemDsChStatsIsMutable();
              cableModemDsChStats_.addAll(other.cableModemDsChStats_);
            }
            onChanged();
          }
        } else {
          if (!other.cableModemDsChStats_.isEmpty()) {
            if (cableModemDsChStatsBuilder_.isEmpty()) {
              cableModemDsChStatsBuilder_.dispose();
              cableModemDsChStatsBuilder_ = null;
              cableModemDsChStats_ = other.cableModemDsChStats_;
              bitField0_ = (bitField0_ & ~0x00000010);
              cableModemDsChStatsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCableModemDsChStatsFieldBuilder() : null;
            } else {
              cableModemDsChStatsBuilder_.addAllMessages(other.cableModemDsChStats_);
            }
          }
        }
        if (cableModemUsChStatsBuilder_ == null) {
          if (!other.cableModemUsChStats_.isEmpty()) {
            if (cableModemUsChStats_.isEmpty()) {
              cableModemUsChStats_ = other.cableModemUsChStats_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureCableModemUsChStatsIsMutable();
              cableModemUsChStats_.addAll(other.cableModemUsChStats_);
            }
            onChanged();
          }
        } else {
          if (!other.cableModemUsChStats_.isEmpty()) {
            if (cableModemUsChStatsBuilder_.isEmpty()) {
              cableModemUsChStatsBuilder_.dispose();
              cableModemUsChStatsBuilder_ = null;
              cableModemUsChStats_ = other.cableModemUsChStats_;
              bitField0_ = (bitField0_ & ~0x00000020);
              cableModemUsChStatsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCableModemUsChStatsFieldBuilder() : null;
            } else {
              cableModemUsChStatsBuilder_.addAllMessages(other.cableModemUsChStats_);
            }
          }
        }
        if (tunnelStatsBuilder_ == null) {
          if (!other.tunnelStats_.isEmpty()) {
            if (tunnelStats_.isEmpty()) {
              tunnelStats_ = other.tunnelStats_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureTunnelStatsIsMutable();
              tunnelStats_.addAll(other.tunnelStats_);
            }
            onChanged();
          }
        } else {
          if (!other.tunnelStats_.isEmpty()) {
            if (tunnelStatsBuilder_.isEmpty()) {
              tunnelStatsBuilder_.dispose();
              tunnelStatsBuilder_ = null;
              tunnelStats_ = other.tunnelStats_;
              bitField0_ = (bitField0_ & ~0x00000040);
              tunnelStatsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTunnelStatsFieldBuilder() : null;
            } else {
              tunnelStatsBuilder_.addAllMessages(other.tunnelStats_);
            }
          }
        }
        if (wifiStatsBuilder_ == null) {
          if (!other.wifiStats_.isEmpty()) {
            if (wifiStats_.isEmpty()) {
              wifiStats_ = other.wifiStats_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureWifiStatsIsMutable();
              wifiStats_.addAll(other.wifiStats_);
            }
            onChanged();
          }
        } else {
          if (!other.wifiStats_.isEmpty()) {
            if (wifiStatsBuilder_.isEmpty()) {
              wifiStatsBuilder_.dispose();
              wifiStatsBuilder_ = null;
              wifiStats_ = other.wifiStats_;
              bitField0_ = (bitField0_ & ~0x00000080);
              wifiStatsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWifiStatsFieldBuilder() : null;
            } else {
              wifiStatsBuilder_.addAllMessages(other.wifiStats_);
            }
          }
        }
        if (wlanStatsBuilder_ == null) {
          if (!other.wlanStats_.isEmpty()) {
            if (wlanStats_.isEmpty()) {
              wlanStats_ = other.wlanStats_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureWlanStatsIsMutable();
              wlanStats_.addAll(other.wlanStats_);
            }
            onChanged();
          }
        } else {
          if (!other.wlanStats_.isEmpty()) {
            if (wlanStatsBuilder_.isEmpty()) {
              wlanStatsBuilder_.dispose();
              wlanStatsBuilder_ = null;
              wlanStats_ = other.wlanStats_;
              bitField0_ = (bitField0_ & ~0x00000100);
              wlanStatsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWlanStatsFieldBuilder() : null;
            } else {
              wlanStatsBuilder_.addAllMessages(other.wlanStats_);
            }
          }
        }
        if (meshStatsBuilder_ == null) {
          if (!other.meshStats_.isEmpty()) {
            if (meshStats_.isEmpty()) {
              meshStats_ = other.meshStats_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureMeshStatsIsMutable();
              meshStats_.addAll(other.meshStats_);
            }
            onChanged();
          }
        } else {
          if (!other.meshStats_.isEmpty()) {
            if (meshStatsBuilder_.isEmpty()) {
              meshStatsBuilder_.dispose();
              meshStatsBuilder_ = null;
              meshStats_ = other.meshStats_;
              bitField0_ = (bitField0_ & ~0x00000200);
              meshStatsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMeshStatsFieldBuilder() : null;
            } else {
              meshStatsBuilder_.addAllMessages(other.meshStats_);
            }
          }
        }
        if (ethernetStatsBuilder_ == null) {
          if (!other.ethernetStats_.isEmpty()) {
            if (ethernetStats_.isEmpty()) {
              ethernetStats_ = other.ethernetStats_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureEthernetStatsIsMutable();
              ethernetStats_.addAll(other.ethernetStats_);
            }
            onChanged();
          }
        } else {
          if (!other.ethernetStats_.isEmpty()) {
            if (ethernetStatsBuilder_.isEmpty()) {
              ethernetStatsBuilder_.dispose();
              ethernetStatsBuilder_ = null;
              ethernetStats_ = other.ethernetStats_;
              bitField0_ = (bitField0_ & ~0x00000400);
              ethernetStatsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEthernetStatsFieldBuilder() : null;
            } else {
              ethernetStatsBuilder_.addAllMessages(other.ethernetStats_);
            }
          }
        }
        if (other.hasUsbModemStats()) {
          mergeUsbModemStats(other.getUsbModemStats());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readUInt64();
              break;
            }
            case 18: {
              com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId.Builder subBuilder = com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId.newBuilder();
              if (hasMoId()) {
                subBuilder.mergeFrom(getMoId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMoId(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.Builder subBuilder = com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.newBuilder();
              if (hasNodeStats()) {
                subBuilder.mergeFrom(getNodeStats());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNodeStats(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.Builder subBuilder = com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.newBuilder();
              if (hasCableModemStats()) {
                subBuilder.mergeFrom(getCableModemStats());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCableModemStats(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.Builder subBuilder = com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCableModemDsChStats(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.Builder subBuilder = com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCableModemUsChStats(subBuilder.buildPartial());
              break;
            }
            case 58: {
              com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.Builder subBuilder = com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTunnelStats(subBuilder.buildPartial());
              break;
            }
            case 66: {
              com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.Builder subBuilder = com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addWifiStats(subBuilder.buildPartial());
              break;
            }
            case 74: {
              com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.Builder subBuilder = com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addWlanStats(subBuilder.buildPartial());
              break;
            }
            case 82: {
              com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.Builder subBuilder = com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMeshStats(subBuilder.buildPartial());
              break;
            }
            case 90: {
              com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.Builder subBuilder = com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEthernetStats(subBuilder.buildPartial());
              break;
            }
            case 98: {
              com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.Builder subBuilder = com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.newBuilder();
              if (hasUsbModemStats()) {
                subBuilder.mergeFrom(getUsbModemStats());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUsbModemStats(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint64 timestamp = 1;
      private long timestamp_ ;
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getTimestamp() {
        return timestamp_;
      }
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        onChanged();
        return this;
      }
      
      // optional .com.ericsson.wifi.ewmnbi.MoId moId = 2;
      private com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId moId_ = com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId, com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId.Builder, com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoIdOrBuilder> moIdBuilder_;
      public boolean hasMoId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId getMoId() {
        if (moIdBuilder_ == null) {
          return moId_;
        } else {
          return moIdBuilder_.getMessage();
        }
      }
      public Builder setMoId(com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId value) {
        if (moIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          moId_ = value;
          onChanged();
        } else {
          moIdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setMoId(
          com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId.Builder builderForValue) {
        if (moIdBuilder_ == null) {
          moId_ = builderForValue.build();
          onChanged();
        } else {
          moIdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeMoId(com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId value) {
        if (moIdBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              moId_ != com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId.getDefaultInstance()) {
            moId_ =
              com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId.newBuilder(moId_).mergeFrom(value).buildPartial();
          } else {
            moId_ = value;
          }
          onChanged();
        } else {
          moIdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearMoId() {
        if (moIdBuilder_ == null) {
          moId_ = com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId.getDefaultInstance();
          onChanged();
        } else {
          moIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId.Builder getMoIdBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMoIdFieldBuilder().getBuilder();
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoIdOrBuilder getMoIdOrBuilder() {
        if (moIdBuilder_ != null) {
          return moIdBuilder_.getMessageOrBuilder();
        } else {
          return moId_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId, com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId.Builder, com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoIdOrBuilder> 
          getMoIdFieldBuilder() {
        if (moIdBuilder_ == null) {
          moIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId, com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoId.Builder, com.ericsson.wifi.ewmnbi.EwmnbiCommon.MoIdOrBuilder>(
                  moId_,
                  getParentForChildren(),
                  isClean());
          moId_ = null;
        }
        return moIdBuilder_;
      }
      
      // optional .com.ericsson.wifi.ewmnbi.NodeStats nodeStats = 3;
      private com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats nodeStats_ = com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStatsOrBuilder> nodeStatsBuilder_;
      public boolean hasNodeStats() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats getNodeStats() {
        if (nodeStatsBuilder_ == null) {
          return nodeStats_;
        } else {
          return nodeStatsBuilder_.getMessage();
        }
      }
      public Builder setNodeStats(com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats value) {
        if (nodeStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeStats_ = value;
          onChanged();
        } else {
          nodeStatsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setNodeStats(
          com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.Builder builderForValue) {
        if (nodeStatsBuilder_ == null) {
          nodeStats_ = builderForValue.build();
          onChanged();
        } else {
          nodeStatsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeNodeStats(com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats value) {
        if (nodeStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              nodeStats_ != com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.getDefaultInstance()) {
            nodeStats_ =
              com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.newBuilder(nodeStats_).mergeFrom(value).buildPartial();
          } else {
            nodeStats_ = value;
          }
          onChanged();
        } else {
          nodeStatsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearNodeStats() {
        if (nodeStatsBuilder_ == null) {
          nodeStats_ = com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.getDefaultInstance();
          onChanged();
        } else {
          nodeStatsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.Builder getNodeStatsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getNodeStatsFieldBuilder().getBuilder();
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStatsOrBuilder getNodeStatsOrBuilder() {
        if (nodeStatsBuilder_ != null) {
          return nodeStatsBuilder_.getMessageOrBuilder();
        } else {
          return nodeStats_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStatsOrBuilder> 
          getNodeStatsFieldBuilder() {
        if (nodeStatsBuilder_ == null) {
          nodeStatsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStatsOrBuilder>(
                  nodeStats_,
                  getParentForChildren(),
                  isClean());
          nodeStats_ = null;
        }
        return nodeStatsBuilder_;
      }
      
      // optional .com.ericsson.wifi.ewmnbi.CableModemStats cableModemStats = 4;
      private com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats cableModemStats_ = com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStatsOrBuilder> cableModemStatsBuilder_;
      public boolean hasCableModemStats() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats getCableModemStats() {
        if (cableModemStatsBuilder_ == null) {
          return cableModemStats_;
        } else {
          return cableModemStatsBuilder_.getMessage();
        }
      }
      public Builder setCableModemStats(com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats value) {
        if (cableModemStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cableModemStats_ = value;
          onChanged();
        } else {
          cableModemStatsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setCableModemStats(
          com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.Builder builderForValue) {
        if (cableModemStatsBuilder_ == null) {
          cableModemStats_ = builderForValue.build();
          onChanged();
        } else {
          cableModemStatsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeCableModemStats(com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats value) {
        if (cableModemStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              cableModemStats_ != com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.getDefaultInstance()) {
            cableModemStats_ =
              com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.newBuilder(cableModemStats_).mergeFrom(value).buildPartial();
          } else {
            cableModemStats_ = value;
          }
          onChanged();
        } else {
          cableModemStatsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearCableModemStats() {
        if (cableModemStatsBuilder_ == null) {
          cableModemStats_ = com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.getDefaultInstance();
          onChanged();
        } else {
          cableModemStatsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.Builder getCableModemStatsBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCableModemStatsFieldBuilder().getBuilder();
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStatsOrBuilder getCableModemStatsOrBuilder() {
        if (cableModemStatsBuilder_ != null) {
          return cableModemStatsBuilder_.getMessageOrBuilder();
        } else {
          return cableModemStats_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStatsOrBuilder> 
          getCableModemStatsFieldBuilder() {
        if (cableModemStatsBuilder_ == null) {
          cableModemStatsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStatsOrBuilder>(
                  cableModemStats_,
                  getParentForChildren(),
                  isClean());
          cableModemStats_ = null;
        }
        return cableModemStatsBuilder_;
      }
      
      // repeated .com.ericsson.wifi.ewmnbi.CableModemDsChStats cableModemDsChStats = 5;
      private java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats> cableModemDsChStats_ =
        java.util.Collections.emptyList();
      private void ensureCableModemDsChStatsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cableModemDsChStats_ = new java.util.ArrayList<com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats>(cableModemDsChStats_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStatsOrBuilder> cableModemDsChStatsBuilder_;
      
      public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats> getCableModemDsChStatsList() {
        if (cableModemDsChStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cableModemDsChStats_);
        } else {
          return cableModemDsChStatsBuilder_.getMessageList();
        }
      }
      public int getCableModemDsChStatsCount() {
        if (cableModemDsChStatsBuilder_ == null) {
          return cableModemDsChStats_.size();
        } else {
          return cableModemDsChStatsBuilder_.getCount();
        }
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats getCableModemDsChStats(int index) {
        if (cableModemDsChStatsBuilder_ == null) {
          return cableModemDsChStats_.get(index);
        } else {
          return cableModemDsChStatsBuilder_.getMessage(index);
        }
      }
      public Builder setCableModemDsChStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats value) {
        if (cableModemDsChStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCableModemDsChStatsIsMutable();
          cableModemDsChStats_.set(index, value);
          onChanged();
        } else {
          cableModemDsChStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCableModemDsChStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.Builder builderForValue) {
        if (cableModemDsChStatsBuilder_ == null) {
          ensureCableModemDsChStatsIsMutable();
          cableModemDsChStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          cableModemDsChStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCableModemDsChStats(com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats value) {
        if (cableModemDsChStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCableModemDsChStatsIsMutable();
          cableModemDsChStats_.add(value);
          onChanged();
        } else {
          cableModemDsChStatsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCableModemDsChStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats value) {
        if (cableModemDsChStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCableModemDsChStatsIsMutable();
          cableModemDsChStats_.add(index, value);
          onChanged();
        } else {
          cableModemDsChStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCableModemDsChStats(
          com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.Builder builderForValue) {
        if (cableModemDsChStatsBuilder_ == null) {
          ensureCableModemDsChStatsIsMutable();
          cableModemDsChStats_.add(builderForValue.build());
          onChanged();
        } else {
          cableModemDsChStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCableModemDsChStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.Builder builderForValue) {
        if (cableModemDsChStatsBuilder_ == null) {
          ensureCableModemDsChStatsIsMutable();
          cableModemDsChStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          cableModemDsChStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCableModemDsChStats(
          java.lang.Iterable<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats> values) {
        if (cableModemDsChStatsBuilder_ == null) {
          ensureCableModemDsChStatsIsMutable();
          super.addAll(values, cableModemDsChStats_);
          onChanged();
        } else {
          cableModemDsChStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCableModemDsChStats() {
        if (cableModemDsChStatsBuilder_ == null) {
          cableModemDsChStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          cableModemDsChStatsBuilder_.clear();
        }
        return this;
      }
      public Builder removeCableModemDsChStats(int index) {
        if (cableModemDsChStatsBuilder_ == null) {
          ensureCableModemDsChStatsIsMutable();
          cableModemDsChStats_.remove(index);
          onChanged();
        } else {
          cableModemDsChStatsBuilder_.remove(index);
        }
        return this;
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.Builder getCableModemDsChStatsBuilder(
          int index) {
        return getCableModemDsChStatsFieldBuilder().getBuilder(index);
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStatsOrBuilder getCableModemDsChStatsOrBuilder(
          int index) {
        if (cableModemDsChStatsBuilder_ == null) {
          return cableModemDsChStats_.get(index);  } else {
          return cableModemDsChStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStatsOrBuilder> 
           getCableModemDsChStatsOrBuilderList() {
        if (cableModemDsChStatsBuilder_ != null) {
          return cableModemDsChStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cableModemDsChStats_);
        }
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.Builder addCableModemDsChStatsBuilder() {
        return getCableModemDsChStatsFieldBuilder().addBuilder(
            com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.getDefaultInstance());
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.Builder addCableModemDsChStatsBuilder(
          int index) {
        return getCableModemDsChStatsFieldBuilder().addBuilder(
            index, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.getDefaultInstance());
      }
      public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.Builder> 
           getCableModemDsChStatsBuilderList() {
        return getCableModemDsChStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStatsOrBuilder> 
          getCableModemDsChStatsFieldBuilder() {
        if (cableModemDsChStatsBuilder_ == null) {
          cableModemDsChStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStatsOrBuilder>(
                  cableModemDsChStats_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          cableModemDsChStats_ = null;
        }
        return cableModemDsChStatsBuilder_;
      }
      
      // repeated .com.ericsson.wifi.ewmnbi.CableModemUsChStats cableModemUsChStats = 6;
      private java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats> cableModemUsChStats_ =
        java.util.Collections.emptyList();
      private void ensureCableModemUsChStatsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          cableModemUsChStats_ = new java.util.ArrayList<com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats>(cableModemUsChStats_);
          bitField0_ |= 0x00000020;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStatsOrBuilder> cableModemUsChStatsBuilder_;
      
      public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats> getCableModemUsChStatsList() {
        if (cableModemUsChStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cableModemUsChStats_);
        } else {
          return cableModemUsChStatsBuilder_.getMessageList();
        }
      }
      public int getCableModemUsChStatsCount() {
        if (cableModemUsChStatsBuilder_ == null) {
          return cableModemUsChStats_.size();
        } else {
          return cableModemUsChStatsBuilder_.getCount();
        }
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats getCableModemUsChStats(int index) {
        if (cableModemUsChStatsBuilder_ == null) {
          return cableModemUsChStats_.get(index);
        } else {
          return cableModemUsChStatsBuilder_.getMessage(index);
        }
      }
      public Builder setCableModemUsChStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats value) {
        if (cableModemUsChStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCableModemUsChStatsIsMutable();
          cableModemUsChStats_.set(index, value);
          onChanged();
        } else {
          cableModemUsChStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCableModemUsChStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.Builder builderForValue) {
        if (cableModemUsChStatsBuilder_ == null) {
          ensureCableModemUsChStatsIsMutable();
          cableModemUsChStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          cableModemUsChStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCableModemUsChStats(com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats value) {
        if (cableModemUsChStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCableModemUsChStatsIsMutable();
          cableModemUsChStats_.add(value);
          onChanged();
        } else {
          cableModemUsChStatsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCableModemUsChStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats value) {
        if (cableModemUsChStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCableModemUsChStatsIsMutable();
          cableModemUsChStats_.add(index, value);
          onChanged();
        } else {
          cableModemUsChStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCableModemUsChStats(
          com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.Builder builderForValue) {
        if (cableModemUsChStatsBuilder_ == null) {
          ensureCableModemUsChStatsIsMutable();
          cableModemUsChStats_.add(builderForValue.build());
          onChanged();
        } else {
          cableModemUsChStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCableModemUsChStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.Builder builderForValue) {
        if (cableModemUsChStatsBuilder_ == null) {
          ensureCableModemUsChStatsIsMutable();
          cableModemUsChStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          cableModemUsChStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCableModemUsChStats(
          java.lang.Iterable<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats> values) {
        if (cableModemUsChStatsBuilder_ == null) {
          ensureCableModemUsChStatsIsMutable();
          super.addAll(values, cableModemUsChStats_);
          onChanged();
        } else {
          cableModemUsChStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCableModemUsChStats() {
        if (cableModemUsChStatsBuilder_ == null) {
          cableModemUsChStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          cableModemUsChStatsBuilder_.clear();
        }
        return this;
      }
      public Builder removeCableModemUsChStats(int index) {
        if (cableModemUsChStatsBuilder_ == null) {
          ensureCableModemUsChStatsIsMutable();
          cableModemUsChStats_.remove(index);
          onChanged();
        } else {
          cableModemUsChStatsBuilder_.remove(index);
        }
        return this;
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.Builder getCableModemUsChStatsBuilder(
          int index) {
        return getCableModemUsChStatsFieldBuilder().getBuilder(index);
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStatsOrBuilder getCableModemUsChStatsOrBuilder(
          int index) {
        if (cableModemUsChStatsBuilder_ == null) {
          return cableModemUsChStats_.get(index);  } else {
          return cableModemUsChStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStatsOrBuilder> 
           getCableModemUsChStatsOrBuilderList() {
        if (cableModemUsChStatsBuilder_ != null) {
          return cableModemUsChStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cableModemUsChStats_);
        }
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.Builder addCableModemUsChStatsBuilder() {
        return getCableModemUsChStatsFieldBuilder().addBuilder(
            com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.getDefaultInstance());
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.Builder addCableModemUsChStatsBuilder(
          int index) {
        return getCableModemUsChStatsFieldBuilder().addBuilder(
            index, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.getDefaultInstance());
      }
      public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.Builder> 
           getCableModemUsChStatsBuilderList() {
        return getCableModemUsChStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStatsOrBuilder> 
          getCableModemUsChStatsFieldBuilder() {
        if (cableModemUsChStatsBuilder_ == null) {
          cableModemUsChStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStatsOrBuilder>(
                  cableModemUsChStats_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          cableModemUsChStats_ = null;
        }
        return cableModemUsChStatsBuilder_;
      }
      
      // repeated .com.ericsson.wifi.ewmnbi.TunnelStats tunnelStats = 7;
      private java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats> tunnelStats_ =
        java.util.Collections.emptyList();
      private void ensureTunnelStatsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          tunnelStats_ = new java.util.ArrayList<com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats>(tunnelStats_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStatsOrBuilder> tunnelStatsBuilder_;
      
      public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats> getTunnelStatsList() {
        if (tunnelStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tunnelStats_);
        } else {
          return tunnelStatsBuilder_.getMessageList();
        }
      }
      public int getTunnelStatsCount() {
        if (tunnelStatsBuilder_ == null) {
          return tunnelStats_.size();
        } else {
          return tunnelStatsBuilder_.getCount();
        }
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats getTunnelStats(int index) {
        if (tunnelStatsBuilder_ == null) {
          return tunnelStats_.get(index);
        } else {
          return tunnelStatsBuilder_.getMessage(index);
        }
      }
      public Builder setTunnelStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats value) {
        if (tunnelStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTunnelStatsIsMutable();
          tunnelStats_.set(index, value);
          onChanged();
        } else {
          tunnelStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setTunnelStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.Builder builderForValue) {
        if (tunnelStatsBuilder_ == null) {
          ensureTunnelStatsIsMutable();
          tunnelStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          tunnelStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addTunnelStats(com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats value) {
        if (tunnelStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTunnelStatsIsMutable();
          tunnelStats_.add(value);
          onChanged();
        } else {
          tunnelStatsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addTunnelStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats value) {
        if (tunnelStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTunnelStatsIsMutable();
          tunnelStats_.add(index, value);
          onChanged();
        } else {
          tunnelStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addTunnelStats(
          com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.Builder builderForValue) {
        if (tunnelStatsBuilder_ == null) {
          ensureTunnelStatsIsMutable();
          tunnelStats_.add(builderForValue.build());
          onChanged();
        } else {
          tunnelStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addTunnelStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.Builder builderForValue) {
        if (tunnelStatsBuilder_ == null) {
          ensureTunnelStatsIsMutable();
          tunnelStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          tunnelStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllTunnelStats(
          java.lang.Iterable<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats> values) {
        if (tunnelStatsBuilder_ == null) {
          ensureTunnelStatsIsMutable();
          super.addAll(values, tunnelStats_);
          onChanged();
        } else {
          tunnelStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearTunnelStats() {
        if (tunnelStatsBuilder_ == null) {
          tunnelStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          tunnelStatsBuilder_.clear();
        }
        return this;
      }
      public Builder removeTunnelStats(int index) {
        if (tunnelStatsBuilder_ == null) {
          ensureTunnelStatsIsMutable();
          tunnelStats_.remove(index);
          onChanged();
        } else {
          tunnelStatsBuilder_.remove(index);
        }
        return this;
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.Builder getTunnelStatsBuilder(
          int index) {
        return getTunnelStatsFieldBuilder().getBuilder(index);
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStatsOrBuilder getTunnelStatsOrBuilder(
          int index) {
        if (tunnelStatsBuilder_ == null) {
          return tunnelStats_.get(index);  } else {
          return tunnelStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStatsOrBuilder> 
           getTunnelStatsOrBuilderList() {
        if (tunnelStatsBuilder_ != null) {
          return tunnelStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tunnelStats_);
        }
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.Builder addTunnelStatsBuilder() {
        return getTunnelStatsFieldBuilder().addBuilder(
            com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.getDefaultInstance());
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.Builder addTunnelStatsBuilder(
          int index) {
        return getTunnelStatsFieldBuilder().addBuilder(
            index, com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.getDefaultInstance());
      }
      public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.Builder> 
           getTunnelStatsBuilderList() {
        return getTunnelStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStatsOrBuilder> 
          getTunnelStatsFieldBuilder() {
        if (tunnelStatsBuilder_ == null) {
          tunnelStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStatsOrBuilder>(
                  tunnelStats_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          tunnelStats_ = null;
        }
        return tunnelStatsBuilder_;
      }
      
      // repeated .com.ericsson.wifi.ewmnbi.WifiStats wifiStats = 8;
      private java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats> wifiStats_ =
        java.util.Collections.emptyList();
      private void ensureWifiStatsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          wifiStats_ = new java.util.ArrayList<com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats>(wifiStats_);
          bitField0_ |= 0x00000080;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStatsOrBuilder> wifiStatsBuilder_;
      
      public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats> getWifiStatsList() {
        if (wifiStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(wifiStats_);
        } else {
          return wifiStatsBuilder_.getMessageList();
        }
      }
      public int getWifiStatsCount() {
        if (wifiStatsBuilder_ == null) {
          return wifiStats_.size();
        } else {
          return wifiStatsBuilder_.getCount();
        }
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats getWifiStats(int index) {
        if (wifiStatsBuilder_ == null) {
          return wifiStats_.get(index);
        } else {
          return wifiStatsBuilder_.getMessage(index);
        }
      }
      public Builder setWifiStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats value) {
        if (wifiStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWifiStatsIsMutable();
          wifiStats_.set(index, value);
          onChanged();
        } else {
          wifiStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setWifiStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.Builder builderForValue) {
        if (wifiStatsBuilder_ == null) {
          ensureWifiStatsIsMutable();
          wifiStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          wifiStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addWifiStats(com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats value) {
        if (wifiStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWifiStatsIsMutable();
          wifiStats_.add(value);
          onChanged();
        } else {
          wifiStatsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addWifiStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats value) {
        if (wifiStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWifiStatsIsMutable();
          wifiStats_.add(index, value);
          onChanged();
        } else {
          wifiStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addWifiStats(
          com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.Builder builderForValue) {
        if (wifiStatsBuilder_ == null) {
          ensureWifiStatsIsMutable();
          wifiStats_.add(builderForValue.build());
          onChanged();
        } else {
          wifiStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addWifiStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.Builder builderForValue) {
        if (wifiStatsBuilder_ == null) {
          ensureWifiStatsIsMutable();
          wifiStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          wifiStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllWifiStats(
          java.lang.Iterable<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats> values) {
        if (wifiStatsBuilder_ == null) {
          ensureWifiStatsIsMutable();
          super.addAll(values, wifiStats_);
          onChanged();
        } else {
          wifiStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearWifiStats() {
        if (wifiStatsBuilder_ == null) {
          wifiStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          wifiStatsBuilder_.clear();
        }
        return this;
      }
      public Builder removeWifiStats(int index) {
        if (wifiStatsBuilder_ == null) {
          ensureWifiStatsIsMutable();
          wifiStats_.remove(index);
          onChanged();
        } else {
          wifiStatsBuilder_.remove(index);
        }
        return this;
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.Builder getWifiStatsBuilder(
          int index) {
        return getWifiStatsFieldBuilder().getBuilder(index);
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStatsOrBuilder getWifiStatsOrBuilder(
          int index) {
        if (wifiStatsBuilder_ == null) {
          return wifiStats_.get(index);  } else {
          return wifiStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStatsOrBuilder> 
           getWifiStatsOrBuilderList() {
        if (wifiStatsBuilder_ != null) {
          return wifiStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(wifiStats_);
        }
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.Builder addWifiStatsBuilder() {
        return getWifiStatsFieldBuilder().addBuilder(
            com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.getDefaultInstance());
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.Builder addWifiStatsBuilder(
          int index) {
        return getWifiStatsFieldBuilder().addBuilder(
            index, com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.getDefaultInstance());
      }
      public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.Builder> 
           getWifiStatsBuilderList() {
        return getWifiStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStatsOrBuilder> 
          getWifiStatsFieldBuilder() {
        if (wifiStatsBuilder_ == null) {
          wifiStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStatsOrBuilder>(
                  wifiStats_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          wifiStats_ = null;
        }
        return wifiStatsBuilder_;
      }
      
      // repeated .com.ericsson.wifi.ewmnbi.WlanStats wlanStats = 9;
      private java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats> wlanStats_ =
        java.util.Collections.emptyList();
      private void ensureWlanStatsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          wlanStats_ = new java.util.ArrayList<com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats>(wlanStats_);
          bitField0_ |= 0x00000100;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStatsOrBuilder> wlanStatsBuilder_;
      
      public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats> getWlanStatsList() {
        if (wlanStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(wlanStats_);
        } else {
          return wlanStatsBuilder_.getMessageList();
        }
      }
      public int getWlanStatsCount() {
        if (wlanStatsBuilder_ == null) {
          return wlanStats_.size();
        } else {
          return wlanStatsBuilder_.getCount();
        }
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats getWlanStats(int index) {
        if (wlanStatsBuilder_ == null) {
          return wlanStats_.get(index);
        } else {
          return wlanStatsBuilder_.getMessage(index);
        }
      }
      public Builder setWlanStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats value) {
        if (wlanStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWlanStatsIsMutable();
          wlanStats_.set(index, value);
          onChanged();
        } else {
          wlanStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setWlanStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.Builder builderForValue) {
        if (wlanStatsBuilder_ == null) {
          ensureWlanStatsIsMutable();
          wlanStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          wlanStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addWlanStats(com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats value) {
        if (wlanStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWlanStatsIsMutable();
          wlanStats_.add(value);
          onChanged();
        } else {
          wlanStatsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addWlanStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats value) {
        if (wlanStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWlanStatsIsMutable();
          wlanStats_.add(index, value);
          onChanged();
        } else {
          wlanStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addWlanStats(
          com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.Builder builderForValue) {
        if (wlanStatsBuilder_ == null) {
          ensureWlanStatsIsMutable();
          wlanStats_.add(builderForValue.build());
          onChanged();
        } else {
          wlanStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addWlanStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.Builder builderForValue) {
        if (wlanStatsBuilder_ == null) {
          ensureWlanStatsIsMutable();
          wlanStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          wlanStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllWlanStats(
          java.lang.Iterable<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats> values) {
        if (wlanStatsBuilder_ == null) {
          ensureWlanStatsIsMutable();
          super.addAll(values, wlanStats_);
          onChanged();
        } else {
          wlanStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearWlanStats() {
        if (wlanStatsBuilder_ == null) {
          wlanStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          wlanStatsBuilder_.clear();
        }
        return this;
      }
      public Builder removeWlanStats(int index) {
        if (wlanStatsBuilder_ == null) {
          ensureWlanStatsIsMutable();
          wlanStats_.remove(index);
          onChanged();
        } else {
          wlanStatsBuilder_.remove(index);
        }
        return this;
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.Builder getWlanStatsBuilder(
          int index) {
        return getWlanStatsFieldBuilder().getBuilder(index);
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStatsOrBuilder getWlanStatsOrBuilder(
          int index) {
        if (wlanStatsBuilder_ == null) {
          return wlanStats_.get(index);  } else {
          return wlanStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStatsOrBuilder> 
           getWlanStatsOrBuilderList() {
        if (wlanStatsBuilder_ != null) {
          return wlanStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(wlanStats_);
        }
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.Builder addWlanStatsBuilder() {
        return getWlanStatsFieldBuilder().addBuilder(
            com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.getDefaultInstance());
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.Builder addWlanStatsBuilder(
          int index) {
        return getWlanStatsFieldBuilder().addBuilder(
            index, com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.getDefaultInstance());
      }
      public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.Builder> 
           getWlanStatsBuilderList() {
        return getWlanStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStatsOrBuilder> 
          getWlanStatsFieldBuilder() {
        if (wlanStatsBuilder_ == null) {
          wlanStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStatsOrBuilder>(
                  wlanStats_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          wlanStats_ = null;
        }
        return wlanStatsBuilder_;
      }
      
      // repeated .com.ericsson.wifi.ewmnbi.MeshStats meshStats = 10;
      private java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats> meshStats_ =
        java.util.Collections.emptyList();
      private void ensureMeshStatsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          meshStats_ = new java.util.ArrayList<com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats>(meshStats_);
          bitField0_ |= 0x00000200;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStatsOrBuilder> meshStatsBuilder_;
      
      public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats> getMeshStatsList() {
        if (meshStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(meshStats_);
        } else {
          return meshStatsBuilder_.getMessageList();
        }
      }
      public int getMeshStatsCount() {
        if (meshStatsBuilder_ == null) {
          return meshStats_.size();
        } else {
          return meshStatsBuilder_.getCount();
        }
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats getMeshStats(int index) {
        if (meshStatsBuilder_ == null) {
          return meshStats_.get(index);
        } else {
          return meshStatsBuilder_.getMessage(index);
        }
      }
      public Builder setMeshStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats value) {
        if (meshStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeshStatsIsMutable();
          meshStats_.set(index, value);
          onChanged();
        } else {
          meshStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setMeshStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.Builder builderForValue) {
        if (meshStatsBuilder_ == null) {
          ensureMeshStatsIsMutable();
          meshStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          meshStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addMeshStats(com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats value) {
        if (meshStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeshStatsIsMutable();
          meshStats_.add(value);
          onChanged();
        } else {
          meshStatsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addMeshStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats value) {
        if (meshStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeshStatsIsMutable();
          meshStats_.add(index, value);
          onChanged();
        } else {
          meshStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addMeshStats(
          com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.Builder builderForValue) {
        if (meshStatsBuilder_ == null) {
          ensureMeshStatsIsMutable();
          meshStats_.add(builderForValue.build());
          onChanged();
        } else {
          meshStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addMeshStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.Builder builderForValue) {
        if (meshStatsBuilder_ == null) {
          ensureMeshStatsIsMutable();
          meshStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          meshStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllMeshStats(
          java.lang.Iterable<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats> values) {
        if (meshStatsBuilder_ == null) {
          ensureMeshStatsIsMutable();
          super.addAll(values, meshStats_);
          onChanged();
        } else {
          meshStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearMeshStats() {
        if (meshStatsBuilder_ == null) {
          meshStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          meshStatsBuilder_.clear();
        }
        return this;
      }
      public Builder removeMeshStats(int index) {
        if (meshStatsBuilder_ == null) {
          ensureMeshStatsIsMutable();
          meshStats_.remove(index);
          onChanged();
        } else {
          meshStatsBuilder_.remove(index);
        }
        return this;
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.Builder getMeshStatsBuilder(
          int index) {
        return getMeshStatsFieldBuilder().getBuilder(index);
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStatsOrBuilder getMeshStatsOrBuilder(
          int index) {
        if (meshStatsBuilder_ == null) {
          return meshStats_.get(index);  } else {
          return meshStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStatsOrBuilder> 
           getMeshStatsOrBuilderList() {
        if (meshStatsBuilder_ != null) {
          return meshStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(meshStats_);
        }
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.Builder addMeshStatsBuilder() {
        return getMeshStatsFieldBuilder().addBuilder(
            com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.getDefaultInstance());
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.Builder addMeshStatsBuilder(
          int index) {
        return getMeshStatsFieldBuilder().addBuilder(
            index, com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.getDefaultInstance());
      }
      public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.Builder> 
           getMeshStatsBuilderList() {
        return getMeshStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStatsOrBuilder> 
          getMeshStatsFieldBuilder() {
        if (meshStatsBuilder_ == null) {
          meshStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStatsOrBuilder>(
                  meshStats_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          meshStats_ = null;
        }
        return meshStatsBuilder_;
      }
      
      // repeated .com.ericsson.wifi.ewmnbi.EthernetStats ethernetStats = 11;
      private java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats> ethernetStats_ =
        java.util.Collections.emptyList();
      private void ensureEthernetStatsIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          ethernetStats_ = new java.util.ArrayList<com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats>(ethernetStats_);
          bitField0_ |= 0x00000400;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStatsOrBuilder> ethernetStatsBuilder_;
      
      public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats> getEthernetStatsList() {
        if (ethernetStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ethernetStats_);
        } else {
          return ethernetStatsBuilder_.getMessageList();
        }
      }
      public int getEthernetStatsCount() {
        if (ethernetStatsBuilder_ == null) {
          return ethernetStats_.size();
        } else {
          return ethernetStatsBuilder_.getCount();
        }
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats getEthernetStats(int index) {
        if (ethernetStatsBuilder_ == null) {
          return ethernetStats_.get(index);
        } else {
          return ethernetStatsBuilder_.getMessage(index);
        }
      }
      public Builder setEthernetStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats value) {
        if (ethernetStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEthernetStatsIsMutable();
          ethernetStats_.set(index, value);
          onChanged();
        } else {
          ethernetStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setEthernetStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.Builder builderForValue) {
        if (ethernetStatsBuilder_ == null) {
          ensureEthernetStatsIsMutable();
          ethernetStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          ethernetStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addEthernetStats(com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats value) {
        if (ethernetStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEthernetStatsIsMutable();
          ethernetStats_.add(value);
          onChanged();
        } else {
          ethernetStatsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addEthernetStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats value) {
        if (ethernetStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEthernetStatsIsMutable();
          ethernetStats_.add(index, value);
          onChanged();
        } else {
          ethernetStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addEthernetStats(
          com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.Builder builderForValue) {
        if (ethernetStatsBuilder_ == null) {
          ensureEthernetStatsIsMutable();
          ethernetStats_.add(builderForValue.build());
          onChanged();
        } else {
          ethernetStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addEthernetStats(
          int index, com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.Builder builderForValue) {
        if (ethernetStatsBuilder_ == null) {
          ensureEthernetStatsIsMutable();
          ethernetStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          ethernetStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllEthernetStats(
          java.lang.Iterable<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats> values) {
        if (ethernetStatsBuilder_ == null) {
          ensureEthernetStatsIsMutable();
          super.addAll(values, ethernetStats_);
          onChanged();
        } else {
          ethernetStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearEthernetStats() {
        if (ethernetStatsBuilder_ == null) {
          ethernetStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          ethernetStatsBuilder_.clear();
        }
        return this;
      }
      public Builder removeEthernetStats(int index) {
        if (ethernetStatsBuilder_ == null) {
          ensureEthernetStatsIsMutable();
          ethernetStats_.remove(index);
          onChanged();
        } else {
          ethernetStatsBuilder_.remove(index);
        }
        return this;
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.Builder getEthernetStatsBuilder(
          int index) {
        return getEthernetStatsFieldBuilder().getBuilder(index);
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStatsOrBuilder getEthernetStatsOrBuilder(
          int index) {
        if (ethernetStatsBuilder_ == null) {
          return ethernetStats_.get(index);  } else {
          return ethernetStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStatsOrBuilder> 
           getEthernetStatsOrBuilderList() {
        if (ethernetStatsBuilder_ != null) {
          return ethernetStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ethernetStats_);
        }
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.Builder addEthernetStatsBuilder() {
        return getEthernetStatsFieldBuilder().addBuilder(
            com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.getDefaultInstance());
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.Builder addEthernetStatsBuilder(
          int index) {
        return getEthernetStatsFieldBuilder().addBuilder(
            index, com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.getDefaultInstance());
      }
      public java.util.List<com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.Builder> 
           getEthernetStatsBuilderList() {
        return getEthernetStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStatsOrBuilder> 
          getEthernetStatsFieldBuilder() {
        if (ethernetStatsBuilder_ == null) {
          ethernetStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStatsOrBuilder>(
                  ethernetStats_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          ethernetStats_ = null;
        }
        return ethernetStatsBuilder_;
      }
      
      // optional .com.ericsson.wifi.ewmnbi.UsbModemStats usbModemStats = 12;
      private com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats usbModemStats_ = com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStatsOrBuilder> usbModemStatsBuilder_;
      public boolean hasUsbModemStats() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats getUsbModemStats() {
        if (usbModemStatsBuilder_ == null) {
          return usbModemStats_;
        } else {
          return usbModemStatsBuilder_.getMessage();
        }
      }
      public Builder setUsbModemStats(com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats value) {
        if (usbModemStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          usbModemStats_ = value;
          onChanged();
        } else {
          usbModemStatsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder setUsbModemStats(
          com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.Builder builderForValue) {
        if (usbModemStatsBuilder_ == null) {
          usbModemStats_ = builderForValue.build();
          onChanged();
        } else {
          usbModemStatsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder mergeUsbModemStats(com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats value) {
        if (usbModemStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              usbModemStats_ != com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.getDefaultInstance()) {
            usbModemStats_ =
              com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.newBuilder(usbModemStats_).mergeFrom(value).buildPartial();
          } else {
            usbModemStats_ = value;
          }
          onChanged();
        } else {
          usbModemStatsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder clearUsbModemStats() {
        if (usbModemStatsBuilder_ == null) {
          usbModemStats_ = com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.getDefaultInstance();
          onChanged();
        } else {
          usbModemStatsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.Builder getUsbModemStatsBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getUsbModemStatsFieldBuilder().getBuilder();
      }
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStatsOrBuilder getUsbModemStatsOrBuilder() {
        if (usbModemStatsBuilder_ != null) {
          return usbModemStatsBuilder_.getMessageOrBuilder();
        } else {
          return usbModemStats_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStatsOrBuilder> 
          getUsbModemStatsFieldBuilder() {
        if (usbModemStatsBuilder_ == null) {
          usbModemStatsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats, com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.Builder, com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStatsOrBuilder>(
                  usbModemStats_,
                  getParentForChildren(),
                  isClean());
          usbModemStats_ = null;
        }
        return usbModemStatsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:com.ericsson.wifi.ewmnbi.StatsBatch)
    }
    
    static {
      defaultInstance = new StatsBatch(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.ericsson.wifi.ewmnbi.StatsBatch)
  }
  
  public interface NodeStatsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 criticalAlarmCount = 1;
    boolean hasCriticalAlarmCount();
    int getCriticalAlarmCount();
    
    // optional uint32 majorAlarmCount = 2;
    boolean hasMajorAlarmCount();
    int getMajorAlarmCount();
    
    // optional uint32 minorAlarmCount = 3;
    boolean hasMinorAlarmCount();
    int getMinorAlarmCount();
    
    // optional uint32 warningAlarmCount = 4;
    boolean hasWarningAlarmCount();
    int getWarningAlarmCount();
    
    // optional uint32 roundTripDelayMin = 5;
    boolean hasRoundTripDelayMin();
    int getRoundTripDelayMin();
    
    // optional uint32 roundTripDelayMax = 6;
    boolean hasRoundTripDelayMax();
    int getRoundTripDelayMax();
    
    // optional uint32 roundTripDelayAvg = 7;
    boolean hasRoundTripDelayAvg();
    int getRoundTripDelayAvg();
    
    // optional uint32 cpuUsageMax = 8;
    boolean hasCpuUsageMax();
    int getCpuUsageMax();
    
    // optional uint32 cpuUsageAvg = 9;
    boolean hasCpuUsageAvg();
    int getCpuUsageAvg();
    
    // optional uint32 memUsageMax = 10;
    boolean hasMemUsageMax();
    int getMemUsageMax();
    
    // optional uint32 memUsageAvg = 11;
    boolean hasMemUsageAvg();
    int getMemUsageAvg();
  }
  public static final class NodeStats extends
      com.google.protobuf.GeneratedMessage
      implements NodeStatsOrBuilder {
    // Use NodeStats.newBuilder() to construct.
    private NodeStats(Builder builder) {
      super(builder);
    }
    private NodeStats(boolean noInit) {}
    
    private static final NodeStats defaultInstance;
    public static NodeStats getDefaultInstance() {
      return defaultInstance;
    }
    
    public NodeStats getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_NodeStats_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_NodeStats_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 criticalAlarmCount = 1;
    public static final int CRITICALALARMCOUNT_FIELD_NUMBER = 1;
    private int criticalAlarmCount_;
    public boolean hasCriticalAlarmCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getCriticalAlarmCount() {
      return criticalAlarmCount_;
    }
    
    // optional uint32 majorAlarmCount = 2;
    public static final int MAJORALARMCOUNT_FIELD_NUMBER = 2;
    private int majorAlarmCount_;
    public boolean hasMajorAlarmCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getMajorAlarmCount() {
      return majorAlarmCount_;
    }
    
    // optional uint32 minorAlarmCount = 3;
    public static final int MINORALARMCOUNT_FIELD_NUMBER = 3;
    private int minorAlarmCount_;
    public boolean hasMinorAlarmCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getMinorAlarmCount() {
      return minorAlarmCount_;
    }
    
    // optional uint32 warningAlarmCount = 4;
    public static final int WARNINGALARMCOUNT_FIELD_NUMBER = 4;
    private int warningAlarmCount_;
    public boolean hasWarningAlarmCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getWarningAlarmCount() {
      return warningAlarmCount_;
    }
    
    // optional uint32 roundTripDelayMin = 5;
    public static final int ROUNDTRIPDELAYMIN_FIELD_NUMBER = 5;
    private int roundTripDelayMin_;
    public boolean hasRoundTripDelayMin() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getRoundTripDelayMin() {
      return roundTripDelayMin_;
    }
    
    // optional uint32 roundTripDelayMax = 6;
    public static final int ROUNDTRIPDELAYMAX_FIELD_NUMBER = 6;
    private int roundTripDelayMax_;
    public boolean hasRoundTripDelayMax() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getRoundTripDelayMax() {
      return roundTripDelayMax_;
    }
    
    // optional uint32 roundTripDelayAvg = 7;
    public static final int ROUNDTRIPDELAYAVG_FIELD_NUMBER = 7;
    private int roundTripDelayAvg_;
    public boolean hasRoundTripDelayAvg() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getRoundTripDelayAvg() {
      return roundTripDelayAvg_;
    }
    
    // optional uint32 cpuUsageMax = 8;
    public static final int CPUUSAGEMAX_FIELD_NUMBER = 8;
    private int cpuUsageMax_;
    public boolean hasCpuUsageMax() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getCpuUsageMax() {
      return cpuUsageMax_;
    }
    
    // optional uint32 cpuUsageAvg = 9;
    public static final int CPUUSAGEAVG_FIELD_NUMBER = 9;
    private int cpuUsageAvg_;
    public boolean hasCpuUsageAvg() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getCpuUsageAvg() {
      return cpuUsageAvg_;
    }
    
    // optional uint32 memUsageMax = 10;
    public static final int MEMUSAGEMAX_FIELD_NUMBER = 10;
    private int memUsageMax_;
    public boolean hasMemUsageMax() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getMemUsageMax() {
      return memUsageMax_;
    }
    
    // optional uint32 memUsageAvg = 11;
    public static final int MEMUSAGEAVG_FIELD_NUMBER = 11;
    private int memUsageAvg_;
    public boolean hasMemUsageAvg() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getMemUsageAvg() {
      return memUsageAvg_;
    }
    
    private void initFields() {
      criticalAlarmCount_ = 0;
      majorAlarmCount_ = 0;
      minorAlarmCount_ = 0;
      warningAlarmCount_ = 0;
      roundTripDelayMin_ = 0;
      roundTripDelayMax_ = 0;
      roundTripDelayAvg_ = 0;
      cpuUsageMax_ = 0;
      cpuUsageAvg_ = 0;
      memUsageMax_ = 0;
      memUsageAvg_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, criticalAlarmCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, majorAlarmCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, minorAlarmCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, warningAlarmCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, roundTripDelayMin_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, roundTripDelayMax_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, roundTripDelayAvg_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, cpuUsageMax_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, cpuUsageAvg_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, memUsageMax_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, memUsageAvg_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, criticalAlarmCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, majorAlarmCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, minorAlarmCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, warningAlarmCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, roundTripDelayMin_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, roundTripDelayMax_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, roundTripDelayAvg_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, cpuUsageMax_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, cpuUsageAvg_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, memUsageMax_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, memUsageAvg_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_NodeStats_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_NodeStats_fieldAccessorTable;
      }
      
      // Construct using com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        criticalAlarmCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        majorAlarmCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        minorAlarmCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        warningAlarmCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        roundTripDelayMin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        roundTripDelayMax_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        roundTripDelayAvg_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        cpuUsageMax_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        cpuUsageAvg_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        memUsageMax_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        memUsageAvg_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.getDescriptor();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats getDefaultInstanceForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.getDefaultInstance();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats build() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats buildPartial() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats result = new com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.criticalAlarmCount_ = criticalAlarmCount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.majorAlarmCount_ = majorAlarmCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.minorAlarmCount_ = minorAlarmCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.warningAlarmCount_ = warningAlarmCount_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.roundTripDelayMin_ = roundTripDelayMin_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.roundTripDelayMax_ = roundTripDelayMax_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.roundTripDelayAvg_ = roundTripDelayAvg_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.cpuUsageMax_ = cpuUsageMax_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.cpuUsageAvg_ = cpuUsageAvg_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.memUsageMax_ = memUsageMax_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.memUsageAvg_ = memUsageAvg_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats) {
          return mergeFrom((com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats other) {
        if (other == com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.getDefaultInstance()) return this;
        if (other.hasCriticalAlarmCount()) {
          setCriticalAlarmCount(other.getCriticalAlarmCount());
        }
        if (other.hasMajorAlarmCount()) {
          setMajorAlarmCount(other.getMajorAlarmCount());
        }
        if (other.hasMinorAlarmCount()) {
          setMinorAlarmCount(other.getMinorAlarmCount());
        }
        if (other.hasWarningAlarmCount()) {
          setWarningAlarmCount(other.getWarningAlarmCount());
        }
        if (other.hasRoundTripDelayMin()) {
          setRoundTripDelayMin(other.getRoundTripDelayMin());
        }
        if (other.hasRoundTripDelayMax()) {
          setRoundTripDelayMax(other.getRoundTripDelayMax());
        }
        if (other.hasRoundTripDelayAvg()) {
          setRoundTripDelayAvg(other.getRoundTripDelayAvg());
        }
        if (other.hasCpuUsageMax()) {
          setCpuUsageMax(other.getCpuUsageMax());
        }
        if (other.hasCpuUsageAvg()) {
          setCpuUsageAvg(other.getCpuUsageAvg());
        }
        if (other.hasMemUsageMax()) {
          setMemUsageMax(other.getMemUsageMax());
        }
        if (other.hasMemUsageAvg()) {
          setMemUsageAvg(other.getMemUsageAvg());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              criticalAlarmCount_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              majorAlarmCount_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              minorAlarmCount_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              warningAlarmCount_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              roundTripDelayMin_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              roundTripDelayMax_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              roundTripDelayAvg_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              cpuUsageMax_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              cpuUsageAvg_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              memUsageMax_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              memUsageAvg_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 criticalAlarmCount = 1;
      private int criticalAlarmCount_ ;
      public boolean hasCriticalAlarmCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getCriticalAlarmCount() {
        return criticalAlarmCount_;
      }
      public Builder setCriticalAlarmCount(int value) {
        bitField0_ |= 0x00000001;
        criticalAlarmCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearCriticalAlarmCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        criticalAlarmCount_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 majorAlarmCount = 2;
      private int majorAlarmCount_ ;
      public boolean hasMajorAlarmCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getMajorAlarmCount() {
        return majorAlarmCount_;
      }
      public Builder setMajorAlarmCount(int value) {
        bitField0_ |= 0x00000002;
        majorAlarmCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearMajorAlarmCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        majorAlarmCount_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 minorAlarmCount = 3;
      private int minorAlarmCount_ ;
      public boolean hasMinorAlarmCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getMinorAlarmCount() {
        return minorAlarmCount_;
      }
      public Builder setMinorAlarmCount(int value) {
        bitField0_ |= 0x00000004;
        minorAlarmCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearMinorAlarmCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        minorAlarmCount_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 warningAlarmCount = 4;
      private int warningAlarmCount_ ;
      public boolean hasWarningAlarmCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getWarningAlarmCount() {
        return warningAlarmCount_;
      }
      public Builder setWarningAlarmCount(int value) {
        bitField0_ |= 0x00000008;
        warningAlarmCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearWarningAlarmCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        warningAlarmCount_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 roundTripDelayMin = 5;
      private int roundTripDelayMin_ ;
      public boolean hasRoundTripDelayMin() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getRoundTripDelayMin() {
        return roundTripDelayMin_;
      }
      public Builder setRoundTripDelayMin(int value) {
        bitField0_ |= 0x00000010;
        roundTripDelayMin_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoundTripDelayMin() {
        bitField0_ = (bitField0_ & ~0x00000010);
        roundTripDelayMin_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 roundTripDelayMax = 6;
      private int roundTripDelayMax_ ;
      public boolean hasRoundTripDelayMax() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRoundTripDelayMax() {
        return roundTripDelayMax_;
      }
      public Builder setRoundTripDelayMax(int value) {
        bitField0_ |= 0x00000020;
        roundTripDelayMax_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoundTripDelayMax() {
        bitField0_ = (bitField0_ & ~0x00000020);
        roundTripDelayMax_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 roundTripDelayAvg = 7;
      private int roundTripDelayAvg_ ;
      public boolean hasRoundTripDelayAvg() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getRoundTripDelayAvg() {
        return roundTripDelayAvg_;
      }
      public Builder setRoundTripDelayAvg(int value) {
        bitField0_ |= 0x00000040;
        roundTripDelayAvg_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoundTripDelayAvg() {
        bitField0_ = (bitField0_ & ~0x00000040);
        roundTripDelayAvg_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 cpuUsageMax = 8;
      private int cpuUsageMax_ ;
      public boolean hasCpuUsageMax() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getCpuUsageMax() {
        return cpuUsageMax_;
      }
      public Builder setCpuUsageMax(int value) {
        bitField0_ |= 0x00000080;
        cpuUsageMax_ = value;
        onChanged();
        return this;
      }
      public Builder clearCpuUsageMax() {
        bitField0_ = (bitField0_ & ~0x00000080);
        cpuUsageMax_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 cpuUsageAvg = 9;
      private int cpuUsageAvg_ ;
      public boolean hasCpuUsageAvg() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getCpuUsageAvg() {
        return cpuUsageAvg_;
      }
      public Builder setCpuUsageAvg(int value) {
        bitField0_ |= 0x00000100;
        cpuUsageAvg_ = value;
        onChanged();
        return this;
      }
      public Builder clearCpuUsageAvg() {
        bitField0_ = (bitField0_ & ~0x00000100);
        cpuUsageAvg_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 memUsageMax = 10;
      private int memUsageMax_ ;
      public boolean hasMemUsageMax() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getMemUsageMax() {
        return memUsageMax_;
      }
      public Builder setMemUsageMax(int value) {
        bitField0_ |= 0x00000200;
        memUsageMax_ = value;
        onChanged();
        return this;
      }
      public Builder clearMemUsageMax() {
        bitField0_ = (bitField0_ & ~0x00000200);
        memUsageMax_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 memUsageAvg = 11;
      private int memUsageAvg_ ;
      public boolean hasMemUsageAvg() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getMemUsageAvg() {
        return memUsageAvg_;
      }
      public Builder setMemUsageAvg(int value) {
        bitField0_ |= 0x00000400;
        memUsageAvg_ = value;
        onChanged();
        return this;
      }
      public Builder clearMemUsageAvg() {
        bitField0_ = (bitField0_ & ~0x00000400);
        memUsageAvg_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.ericsson.wifi.ewmnbi.NodeStats)
    }
    
    static {
      defaultInstance = new NodeStats(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.ericsson.wifi.ewmnbi.NodeStats)
  }
  
  public interface CableModemStatsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 cmIndex = 1;
    boolean hasCmIndex();
    int getCmIndex();
    
    // optional uint32 uas = 2;
    boolean hasUas();
    int getUas();
    
    // optional uint32 resets = 3;
    boolean hasResets();
    int getResets();
    
    // optional uint32 downEvents = 4;
    boolean hasDownEvents();
    int getDownEvents();
  }
  public static final class CableModemStats extends
      com.google.protobuf.GeneratedMessage
      implements CableModemStatsOrBuilder {
    // Use CableModemStats.newBuilder() to construct.
    private CableModemStats(Builder builder) {
      super(builder);
    }
    private CableModemStats(boolean noInit) {}
    
    private static final CableModemStats defaultInstance;
    public static CableModemStats getDefaultInstance() {
      return defaultInstance;
    }
    
    public CableModemStats getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_CableModemStats_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_CableModemStats_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 cmIndex = 1;
    public static final int CMINDEX_FIELD_NUMBER = 1;
    private int cmIndex_;
    public boolean hasCmIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getCmIndex() {
      return cmIndex_;
    }
    
    // optional uint32 uas = 2;
    public static final int UAS_FIELD_NUMBER = 2;
    private int uas_;
    public boolean hasUas() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getUas() {
      return uas_;
    }
    
    // optional uint32 resets = 3;
    public static final int RESETS_FIELD_NUMBER = 3;
    private int resets_;
    public boolean hasResets() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getResets() {
      return resets_;
    }
    
    // optional uint32 downEvents = 4;
    public static final int DOWNEVENTS_FIELD_NUMBER = 4;
    private int downEvents_;
    public boolean hasDownEvents() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getDownEvents() {
      return downEvents_;
    }
    
    private void initFields() {
      cmIndex_ = 0;
      uas_ = 0;
      resets_ = 0;
      downEvents_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, cmIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, uas_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, resets_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, downEvents_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, cmIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, uas_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, resets_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, downEvents_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_CableModemStats_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_CableModemStats_fieldAccessorTable;
      }
      
      // Construct using com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        cmIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        uas_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        resets_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        downEvents_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.getDescriptor();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats getDefaultInstanceForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.getDefaultInstance();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats build() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats buildPartial() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats result = new com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cmIndex_ = cmIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.uas_ = uas_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.resets_ = resets_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.downEvents_ = downEvents_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats) {
          return mergeFrom((com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats other) {
        if (other == com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.getDefaultInstance()) return this;
        if (other.hasCmIndex()) {
          setCmIndex(other.getCmIndex());
        }
        if (other.hasUas()) {
          setUas(other.getUas());
        }
        if (other.hasResets()) {
          setResets(other.getResets());
        }
        if (other.hasDownEvents()) {
          setDownEvents(other.getDownEvents());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cmIndex_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              uas_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              resets_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              downEvents_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 cmIndex = 1;
      private int cmIndex_ ;
      public boolean hasCmIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getCmIndex() {
        return cmIndex_;
      }
      public Builder setCmIndex(int value) {
        bitField0_ |= 0x00000001;
        cmIndex_ = value;
        onChanged();
        return this;
      }
      public Builder clearCmIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cmIndex_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 uas = 2;
      private int uas_ ;
      public boolean hasUas() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getUas() {
        return uas_;
      }
      public Builder setUas(int value) {
        bitField0_ |= 0x00000002;
        uas_ = value;
        onChanged();
        return this;
      }
      public Builder clearUas() {
        bitField0_ = (bitField0_ & ~0x00000002);
        uas_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 resets = 3;
      private int resets_ ;
      public boolean hasResets() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getResets() {
        return resets_;
      }
      public Builder setResets(int value) {
        bitField0_ |= 0x00000004;
        resets_ = value;
        onChanged();
        return this;
      }
      public Builder clearResets() {
        bitField0_ = (bitField0_ & ~0x00000004);
        resets_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 downEvents = 4;
      private int downEvents_ ;
      public boolean hasDownEvents() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getDownEvents() {
        return downEvents_;
      }
      public Builder setDownEvents(int value) {
        bitField0_ |= 0x00000008;
        downEvents_ = value;
        onChanged();
        return this;
      }
      public Builder clearDownEvents() {
        bitField0_ = (bitField0_ & ~0x00000008);
        downEvents_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.ericsson.wifi.ewmnbi.CableModemStats)
    }
    
    static {
      defaultInstance = new CableModemStats(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.ericsson.wifi.ewmnbi.CableModemStats)
  }
  
  public interface CableModemDsChStatsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 cmIndex = 1;
    boolean hasCmIndex();
    int getCmIndex();
    
    // optional uint32 channel = 2;
    boolean hasChannel();
    int getChannel();
    
    // optional float rxPowerMin = 3;
    boolean hasRxPowerMin();
    float getRxPowerMin();
    
    // optional float rxPowerMax = 4;
    boolean hasRxPowerMax();
    float getRxPowerMax();
    
    // optional float rxPowerAvg = 5;
    boolean hasRxPowerAvg();
    float getRxPowerAvg();
    
    // optional float snrMin = 6;
    boolean hasSnrMin();
    float getSnrMin();
    
    // optional float snrMax = 7;
    boolean hasSnrMax();
    float getSnrMax();
    
    // optional float snrAvg = 8;
    boolean hasSnrAvg();
    float getSnrAvg();
    
    // optional float ucer = 9;
    boolean hasUcer();
    float getUcer();
    
    // optional float ccer = 10;
    boolean hasCcer();
    float getCcer();
    
    // optional float cer = 11;
    boolean hasCer();
    float getCer();
  }
  public static final class CableModemDsChStats extends
      com.google.protobuf.GeneratedMessage
      implements CableModemDsChStatsOrBuilder {
    // Use CableModemDsChStats.newBuilder() to construct.
    private CableModemDsChStats(Builder builder) {
      super(builder);
    }
    private CableModemDsChStats(boolean noInit) {}
    
    private static final CableModemDsChStats defaultInstance;
    public static CableModemDsChStats getDefaultInstance() {
      return defaultInstance;
    }
    
    public CableModemDsChStats getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_CableModemDsChStats_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_CableModemDsChStats_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 cmIndex = 1;
    public static final int CMINDEX_FIELD_NUMBER = 1;
    private int cmIndex_;
    public boolean hasCmIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getCmIndex() {
      return cmIndex_;
    }
    
    // optional uint32 channel = 2;
    public static final int CHANNEL_FIELD_NUMBER = 2;
    private int channel_;
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getChannel() {
      return channel_;
    }
    
    // optional float rxPowerMin = 3;
    public static final int RXPOWERMIN_FIELD_NUMBER = 3;
    private float rxPowerMin_;
    public boolean hasRxPowerMin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getRxPowerMin() {
      return rxPowerMin_;
    }
    
    // optional float rxPowerMax = 4;
    public static final int RXPOWERMAX_FIELD_NUMBER = 4;
    private float rxPowerMax_;
    public boolean hasRxPowerMax() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getRxPowerMax() {
      return rxPowerMax_;
    }
    
    // optional float rxPowerAvg = 5;
    public static final int RXPOWERAVG_FIELD_NUMBER = 5;
    private float rxPowerAvg_;
    public boolean hasRxPowerAvg() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public float getRxPowerAvg() {
      return rxPowerAvg_;
    }
    
    // optional float snrMin = 6;
    public static final int SNRMIN_FIELD_NUMBER = 6;
    private float snrMin_;
    public boolean hasSnrMin() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public float getSnrMin() {
      return snrMin_;
    }
    
    // optional float snrMax = 7;
    public static final int SNRMAX_FIELD_NUMBER = 7;
    private float snrMax_;
    public boolean hasSnrMax() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public float getSnrMax() {
      return snrMax_;
    }
    
    // optional float snrAvg = 8;
    public static final int SNRAVG_FIELD_NUMBER = 8;
    private float snrAvg_;
    public boolean hasSnrAvg() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public float getSnrAvg() {
      return snrAvg_;
    }
    
    // optional float ucer = 9;
    public static final int UCER_FIELD_NUMBER = 9;
    private float ucer_;
    public boolean hasUcer() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public float getUcer() {
      return ucer_;
    }
    
    // optional float ccer = 10;
    public static final int CCER_FIELD_NUMBER = 10;
    private float ccer_;
    public boolean hasCcer() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public float getCcer() {
      return ccer_;
    }
    
    // optional float cer = 11;
    public static final int CER_FIELD_NUMBER = 11;
    private float cer_;
    public boolean hasCer() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public float getCer() {
      return cer_;
    }
    
    private void initFields() {
      cmIndex_ = 0;
      channel_ = 0;
      rxPowerMin_ = 0F;
      rxPowerMax_ = 0F;
      rxPowerAvg_ = 0F;
      snrMin_ = 0F;
      snrMax_ = 0F;
      snrAvg_ = 0F;
      ucer_ = 0F;
      ccer_ = 0F;
      cer_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, cmIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, rxPowerMin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, rxPowerMax_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, rxPowerAvg_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, snrMin_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, snrMax_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, snrAvg_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, ucer_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, ccer_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, cer_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, cmIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, rxPowerMin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, rxPowerMax_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, rxPowerAvg_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, snrMin_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, snrMax_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, snrAvg_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, ucer_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, ccer_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, cer_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_CableModemDsChStats_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_CableModemDsChStats_fieldAccessorTable;
      }
      
      // Construct using com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        cmIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rxPowerMin_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        rxPowerMax_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        rxPowerAvg_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        snrMin_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        snrMax_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        snrAvg_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        ucer_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        ccer_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        cer_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.getDescriptor();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats getDefaultInstanceForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.getDefaultInstance();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats build() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats buildPartial() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats result = new com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cmIndex_ = cmIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rxPowerMin_ = rxPowerMin_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rxPowerMax_ = rxPowerMax_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rxPowerAvg_ = rxPowerAvg_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.snrMin_ = snrMin_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.snrMax_ = snrMax_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.snrAvg_ = snrAvg_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.ucer_ = ucer_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.ccer_ = ccer_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.cer_ = cer_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats) {
          return mergeFrom((com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats other) {
        if (other == com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.getDefaultInstance()) return this;
        if (other.hasCmIndex()) {
          setCmIndex(other.getCmIndex());
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasRxPowerMin()) {
          setRxPowerMin(other.getRxPowerMin());
        }
        if (other.hasRxPowerMax()) {
          setRxPowerMax(other.getRxPowerMax());
        }
        if (other.hasRxPowerAvg()) {
          setRxPowerAvg(other.getRxPowerAvg());
        }
        if (other.hasSnrMin()) {
          setSnrMin(other.getSnrMin());
        }
        if (other.hasSnrMax()) {
          setSnrMax(other.getSnrMax());
        }
        if (other.hasSnrAvg()) {
          setSnrAvg(other.getSnrAvg());
        }
        if (other.hasUcer()) {
          setUcer(other.getUcer());
        }
        if (other.hasCcer()) {
          setCcer(other.getCcer());
        }
        if (other.hasCer()) {
          setCer(other.getCer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cmIndex_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channel_ = input.readUInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              rxPowerMin_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              rxPowerMax_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              rxPowerAvg_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              snrMin_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              snrMax_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              snrAvg_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              ucer_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              ccer_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              cer_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 cmIndex = 1;
      private int cmIndex_ ;
      public boolean hasCmIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getCmIndex() {
        return cmIndex_;
      }
      public Builder setCmIndex(int value) {
        bitField0_ |= 0x00000001;
        cmIndex_ = value;
        onChanged();
        return this;
      }
      public Builder clearCmIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cmIndex_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 channel = 2;
      private int channel_ ;
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getChannel() {
        return channel_;
      }
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000002;
        channel_ = value;
        onChanged();
        return this;
      }
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = 0;
        onChanged();
        return this;
      }
      
      // optional float rxPowerMin = 3;
      private float rxPowerMin_ ;
      public boolean hasRxPowerMin() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getRxPowerMin() {
        return rxPowerMin_;
      }
      public Builder setRxPowerMin(float value) {
        bitField0_ |= 0x00000004;
        rxPowerMin_ = value;
        onChanged();
        return this;
      }
      public Builder clearRxPowerMin() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rxPowerMin_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float rxPowerMax = 4;
      private float rxPowerMax_ ;
      public boolean hasRxPowerMax() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getRxPowerMax() {
        return rxPowerMax_;
      }
      public Builder setRxPowerMax(float value) {
        bitField0_ |= 0x00000008;
        rxPowerMax_ = value;
        onChanged();
        return this;
      }
      public Builder clearRxPowerMax() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rxPowerMax_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float rxPowerAvg = 5;
      private float rxPowerAvg_ ;
      public boolean hasRxPowerAvg() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getRxPowerAvg() {
        return rxPowerAvg_;
      }
      public Builder setRxPowerAvg(float value) {
        bitField0_ |= 0x00000010;
        rxPowerAvg_ = value;
        onChanged();
        return this;
      }
      public Builder clearRxPowerAvg() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rxPowerAvg_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float snrMin = 6;
      private float snrMin_ ;
      public boolean hasSnrMin() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public float getSnrMin() {
        return snrMin_;
      }
      public Builder setSnrMin(float value) {
        bitField0_ |= 0x00000020;
        snrMin_ = value;
        onChanged();
        return this;
      }
      public Builder clearSnrMin() {
        bitField0_ = (bitField0_ & ~0x00000020);
        snrMin_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float snrMax = 7;
      private float snrMax_ ;
      public boolean hasSnrMax() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public float getSnrMax() {
        return snrMax_;
      }
      public Builder setSnrMax(float value) {
        bitField0_ |= 0x00000040;
        snrMax_ = value;
        onChanged();
        return this;
      }
      public Builder clearSnrMax() {
        bitField0_ = (bitField0_ & ~0x00000040);
        snrMax_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float snrAvg = 8;
      private float snrAvg_ ;
      public boolean hasSnrAvg() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public float getSnrAvg() {
        return snrAvg_;
      }
      public Builder setSnrAvg(float value) {
        bitField0_ |= 0x00000080;
        snrAvg_ = value;
        onChanged();
        return this;
      }
      public Builder clearSnrAvg() {
        bitField0_ = (bitField0_ & ~0x00000080);
        snrAvg_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float ucer = 9;
      private float ucer_ ;
      public boolean hasUcer() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public float getUcer() {
        return ucer_;
      }
      public Builder setUcer(float value) {
        bitField0_ |= 0x00000100;
        ucer_ = value;
        onChanged();
        return this;
      }
      public Builder clearUcer() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ucer_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float ccer = 10;
      private float ccer_ ;
      public boolean hasCcer() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public float getCcer() {
        return ccer_;
      }
      public Builder setCcer(float value) {
        bitField0_ |= 0x00000200;
        ccer_ = value;
        onChanged();
        return this;
      }
      public Builder clearCcer() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ccer_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float cer = 11;
      private float cer_ ;
      public boolean hasCer() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public float getCer() {
        return cer_;
      }
      public Builder setCer(float value) {
        bitField0_ |= 0x00000400;
        cer_ = value;
        onChanged();
        return this;
      }
      public Builder clearCer() {
        bitField0_ = (bitField0_ & ~0x00000400);
        cer_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.ericsson.wifi.ewmnbi.CableModemDsChStats)
    }
    
    static {
      defaultInstance = new CableModemDsChStats(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.ericsson.wifi.ewmnbi.CableModemDsChStats)
  }
  
  public interface CableModemUsChStatsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 cmIndex = 1;
    boolean hasCmIndex();
    int getCmIndex();
    
    // optional uint32 channel = 2;
    boolean hasChannel();
    int getChannel();
    
    // optional float txPowerMin = 3;
    boolean hasTxPowerMin();
    float getTxPowerMin();
    
    // optional float txPowerMax = 4;
    boolean hasTxPowerMax();
    float getTxPowerMax();
    
    // optional float txPowerAvg = 5;
    boolean hasTxPowerAvg();
    float getTxPowerAvg();
    
    // optional uint32 t3Timeouts = 6;
    boolean hasT3Timeouts();
    int getT3Timeouts();
    
    // optional uint32 t4Timeouts = 7;
    boolean hasT4Timeouts();
    int getT4Timeouts();
  }
  public static final class CableModemUsChStats extends
      com.google.protobuf.GeneratedMessage
      implements CableModemUsChStatsOrBuilder {
    // Use CableModemUsChStats.newBuilder() to construct.
    private CableModemUsChStats(Builder builder) {
      super(builder);
    }
    private CableModemUsChStats(boolean noInit) {}
    
    private static final CableModemUsChStats defaultInstance;
    public static CableModemUsChStats getDefaultInstance() {
      return defaultInstance;
    }
    
    public CableModemUsChStats getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_CableModemUsChStats_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_CableModemUsChStats_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 cmIndex = 1;
    public static final int CMINDEX_FIELD_NUMBER = 1;
    private int cmIndex_;
    public boolean hasCmIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getCmIndex() {
      return cmIndex_;
    }
    
    // optional uint32 channel = 2;
    public static final int CHANNEL_FIELD_NUMBER = 2;
    private int channel_;
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getChannel() {
      return channel_;
    }
    
    // optional float txPowerMin = 3;
    public static final int TXPOWERMIN_FIELD_NUMBER = 3;
    private float txPowerMin_;
    public boolean hasTxPowerMin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getTxPowerMin() {
      return txPowerMin_;
    }
    
    // optional float txPowerMax = 4;
    public static final int TXPOWERMAX_FIELD_NUMBER = 4;
    private float txPowerMax_;
    public boolean hasTxPowerMax() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getTxPowerMax() {
      return txPowerMax_;
    }
    
    // optional float txPowerAvg = 5;
    public static final int TXPOWERAVG_FIELD_NUMBER = 5;
    private float txPowerAvg_;
    public boolean hasTxPowerAvg() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public float getTxPowerAvg() {
      return txPowerAvg_;
    }
    
    // optional uint32 t3Timeouts = 6;
    public static final int T3TIMEOUTS_FIELD_NUMBER = 6;
    private int t3Timeouts_;
    public boolean hasT3Timeouts() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getT3Timeouts() {
      return t3Timeouts_;
    }
    
    // optional uint32 t4Timeouts = 7;
    public static final int T4TIMEOUTS_FIELD_NUMBER = 7;
    private int t4Timeouts_;
    public boolean hasT4Timeouts() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getT4Timeouts() {
      return t4Timeouts_;
    }
    
    private void initFields() {
      cmIndex_ = 0;
      channel_ = 0;
      txPowerMin_ = 0F;
      txPowerMax_ = 0F;
      txPowerAvg_ = 0F;
      t3Timeouts_ = 0;
      t4Timeouts_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, cmIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, txPowerMin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, txPowerMax_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, txPowerAvg_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, t3Timeouts_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, t4Timeouts_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, cmIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, txPowerMin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, txPowerMax_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, txPowerAvg_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, t3Timeouts_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, t4Timeouts_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_CableModemUsChStats_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_CableModemUsChStats_fieldAccessorTable;
      }
      
      // Construct using com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        cmIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        txPowerMin_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        txPowerMax_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        txPowerAvg_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        t3Timeouts_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        t4Timeouts_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.getDescriptor();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats getDefaultInstanceForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.getDefaultInstance();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats build() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats buildPartial() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats result = new com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cmIndex_ = cmIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.txPowerMin_ = txPowerMin_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.txPowerMax_ = txPowerMax_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.txPowerAvg_ = txPowerAvg_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.t3Timeouts_ = t3Timeouts_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.t4Timeouts_ = t4Timeouts_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats) {
          return mergeFrom((com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats other) {
        if (other == com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.getDefaultInstance()) return this;
        if (other.hasCmIndex()) {
          setCmIndex(other.getCmIndex());
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasTxPowerMin()) {
          setTxPowerMin(other.getTxPowerMin());
        }
        if (other.hasTxPowerMax()) {
          setTxPowerMax(other.getTxPowerMax());
        }
        if (other.hasTxPowerAvg()) {
          setTxPowerAvg(other.getTxPowerAvg());
        }
        if (other.hasT3Timeouts()) {
          setT3Timeouts(other.getT3Timeouts());
        }
        if (other.hasT4Timeouts()) {
          setT4Timeouts(other.getT4Timeouts());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cmIndex_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channel_ = input.readUInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              txPowerMin_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              txPowerMax_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              txPowerAvg_ = input.readFloat();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              t3Timeouts_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              t4Timeouts_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 cmIndex = 1;
      private int cmIndex_ ;
      public boolean hasCmIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getCmIndex() {
        return cmIndex_;
      }
      public Builder setCmIndex(int value) {
        bitField0_ |= 0x00000001;
        cmIndex_ = value;
        onChanged();
        return this;
      }
      public Builder clearCmIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cmIndex_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 channel = 2;
      private int channel_ ;
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getChannel() {
        return channel_;
      }
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000002;
        channel_ = value;
        onChanged();
        return this;
      }
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = 0;
        onChanged();
        return this;
      }
      
      // optional float txPowerMin = 3;
      private float txPowerMin_ ;
      public boolean hasTxPowerMin() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getTxPowerMin() {
        return txPowerMin_;
      }
      public Builder setTxPowerMin(float value) {
        bitField0_ |= 0x00000004;
        txPowerMin_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxPowerMin() {
        bitField0_ = (bitField0_ & ~0x00000004);
        txPowerMin_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float txPowerMax = 4;
      private float txPowerMax_ ;
      public boolean hasTxPowerMax() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getTxPowerMax() {
        return txPowerMax_;
      }
      public Builder setTxPowerMax(float value) {
        bitField0_ |= 0x00000008;
        txPowerMax_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxPowerMax() {
        bitField0_ = (bitField0_ & ~0x00000008);
        txPowerMax_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float txPowerAvg = 5;
      private float txPowerAvg_ ;
      public boolean hasTxPowerAvg() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getTxPowerAvg() {
        return txPowerAvg_;
      }
      public Builder setTxPowerAvg(float value) {
        bitField0_ |= 0x00000010;
        txPowerAvg_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxPowerAvg() {
        bitField0_ = (bitField0_ & ~0x00000010);
        txPowerAvg_ = 0F;
        onChanged();
        return this;
      }
      
      // optional uint32 t3Timeouts = 6;
      private int t3Timeouts_ ;
      public boolean hasT3Timeouts() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getT3Timeouts() {
        return t3Timeouts_;
      }
      public Builder setT3Timeouts(int value) {
        bitField0_ |= 0x00000020;
        t3Timeouts_ = value;
        onChanged();
        return this;
      }
      public Builder clearT3Timeouts() {
        bitField0_ = (bitField0_ & ~0x00000020);
        t3Timeouts_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 t4Timeouts = 7;
      private int t4Timeouts_ ;
      public boolean hasT4Timeouts() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getT4Timeouts() {
        return t4Timeouts_;
      }
      public Builder setT4Timeouts(int value) {
        bitField0_ |= 0x00000040;
        t4Timeouts_ = value;
        onChanged();
        return this;
      }
      public Builder clearT4Timeouts() {
        bitField0_ = (bitField0_ & ~0x00000040);
        t4Timeouts_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.ericsson.wifi.ewmnbi.CableModemUsChStats)
    }
    
    static {
      defaultInstance = new CableModemUsChStats(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.ericsson.wifi.ewmnbi.CableModemUsChStats)
  }
  
  public interface TunnelStatsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 tunnelEngine = 1;
    boolean hasTunnelEngine();
    int getTunnelEngine();
    
    // optional uint32 tunnel = 2;
    boolean hasTunnel();
    int getTunnel();
    
    // optional uint32 uas = 3;
    boolean hasUas();
    int getUas();
    
    // optional uint32 rxPkts = 4;
    boolean hasRxPkts();
    int getRxPkts();
    
    // optional uint32 txPkts = 5;
    boolean hasTxPkts();
    int getTxPkts();
    
    // optional uint32 rxMBytes = 6;
    boolean hasRxMBytes();
    int getRxMBytes();
    
    // optional uint32 txMBytes = 7;
    boolean hasTxMBytes();
    int getTxMBytes();
    
    // optional uint32 rxBcastPkts = 8;
    boolean hasRxBcastPkts();
    int getRxBcastPkts();
    
    // optional uint32 txBcastPkts = 9;
    boolean hasTxBcastPkts();
    int getTxBcastPkts();
    
    // optional uint32 txOverLimit = 10;
    boolean hasTxOverLimit();
    int getTxOverLimit();
    
    // optional uint32 echoLossRate = 11;
    boolean hasEchoLossRate();
    int getEchoLossRate();
    
    // optional uint32 downEvents = 12;
    boolean hasDownEvents();
    int getDownEvents();
  }
  public static final class TunnelStats extends
      com.google.protobuf.GeneratedMessage
      implements TunnelStatsOrBuilder {
    // Use TunnelStats.newBuilder() to construct.
    private TunnelStats(Builder builder) {
      super(builder);
    }
    private TunnelStats(boolean noInit) {}
    
    private static final TunnelStats defaultInstance;
    public static TunnelStats getDefaultInstance() {
      return defaultInstance;
    }
    
    public TunnelStats getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_TunnelStats_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_TunnelStats_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 tunnelEngine = 1;
    public static final int TUNNELENGINE_FIELD_NUMBER = 1;
    private int tunnelEngine_;
    public boolean hasTunnelEngine() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getTunnelEngine() {
      return tunnelEngine_;
    }
    
    // optional uint32 tunnel = 2;
    public static final int TUNNEL_FIELD_NUMBER = 2;
    private int tunnel_;
    public boolean hasTunnel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getTunnel() {
      return tunnel_;
    }
    
    // optional uint32 uas = 3;
    public static final int UAS_FIELD_NUMBER = 3;
    private int uas_;
    public boolean hasUas() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getUas() {
      return uas_;
    }
    
    // optional uint32 rxPkts = 4;
    public static final int RXPKTS_FIELD_NUMBER = 4;
    private int rxPkts_;
    public boolean hasRxPkts() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getRxPkts() {
      return rxPkts_;
    }
    
    // optional uint32 txPkts = 5;
    public static final int TXPKTS_FIELD_NUMBER = 5;
    private int txPkts_;
    public boolean hasTxPkts() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getTxPkts() {
      return txPkts_;
    }
    
    // optional uint32 rxMBytes = 6;
    public static final int RXMBYTES_FIELD_NUMBER = 6;
    private int rxMBytes_;
    public boolean hasRxMBytes() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getRxMBytes() {
      return rxMBytes_;
    }
    
    // optional uint32 txMBytes = 7;
    public static final int TXMBYTES_FIELD_NUMBER = 7;
    private int txMBytes_;
    public boolean hasTxMBytes() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getTxMBytes() {
      return txMBytes_;
    }
    
    // optional uint32 rxBcastPkts = 8;
    public static final int RXBCASTPKTS_FIELD_NUMBER = 8;
    private int rxBcastPkts_;
    public boolean hasRxBcastPkts() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getRxBcastPkts() {
      return rxBcastPkts_;
    }
    
    // optional uint32 txBcastPkts = 9;
    public static final int TXBCASTPKTS_FIELD_NUMBER = 9;
    private int txBcastPkts_;
    public boolean hasTxBcastPkts() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getTxBcastPkts() {
      return txBcastPkts_;
    }
    
    // optional uint32 txOverLimit = 10;
    public static final int TXOVERLIMIT_FIELD_NUMBER = 10;
    private int txOverLimit_;
    public boolean hasTxOverLimit() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getTxOverLimit() {
      return txOverLimit_;
    }
    
    // optional uint32 echoLossRate = 11;
    public static final int ECHOLOSSRATE_FIELD_NUMBER = 11;
    private int echoLossRate_;
    public boolean hasEchoLossRate() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getEchoLossRate() {
      return echoLossRate_;
    }
    
    // optional uint32 downEvents = 12;
    public static final int DOWNEVENTS_FIELD_NUMBER = 12;
    private int downEvents_;
    public boolean hasDownEvents() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getDownEvents() {
      return downEvents_;
    }
    
    private void initFields() {
      tunnelEngine_ = 0;
      tunnel_ = 0;
      uas_ = 0;
      rxPkts_ = 0;
      txPkts_ = 0;
      rxMBytes_ = 0;
      txMBytes_ = 0;
      rxBcastPkts_ = 0;
      txBcastPkts_ = 0;
      txOverLimit_ = 0;
      echoLossRate_ = 0;
      downEvents_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tunnelEngine_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tunnel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, uas_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, rxPkts_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, txPkts_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, rxMBytes_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, txMBytes_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, rxBcastPkts_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, txBcastPkts_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, txOverLimit_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, echoLossRate_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, downEvents_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tunnelEngine_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tunnel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, uas_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, rxPkts_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, txPkts_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, rxMBytes_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, txMBytes_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, rxBcastPkts_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, txBcastPkts_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, txOverLimit_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, echoLossRate_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, downEvents_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_TunnelStats_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_TunnelStats_fieldAccessorTable;
      }
      
      // Construct using com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        tunnelEngine_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tunnel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        uas_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        rxPkts_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        txPkts_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        rxMBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        txMBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        rxBcastPkts_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        txBcastPkts_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        txOverLimit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        echoLossRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        downEvents_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.getDescriptor();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats getDefaultInstanceForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.getDefaultInstance();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats build() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats buildPartial() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats result = new com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tunnelEngine_ = tunnelEngine_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tunnel_ = tunnel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.uas_ = uas_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rxPkts_ = rxPkts_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.txPkts_ = txPkts_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rxMBytes_ = rxMBytes_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.txMBytes_ = txMBytes_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.rxBcastPkts_ = rxBcastPkts_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.txBcastPkts_ = txBcastPkts_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.txOverLimit_ = txOverLimit_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.echoLossRate_ = echoLossRate_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.downEvents_ = downEvents_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats) {
          return mergeFrom((com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats other) {
        if (other == com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.getDefaultInstance()) return this;
        if (other.hasTunnelEngine()) {
          setTunnelEngine(other.getTunnelEngine());
        }
        if (other.hasTunnel()) {
          setTunnel(other.getTunnel());
        }
        if (other.hasUas()) {
          setUas(other.getUas());
        }
        if (other.hasRxPkts()) {
          setRxPkts(other.getRxPkts());
        }
        if (other.hasTxPkts()) {
          setTxPkts(other.getTxPkts());
        }
        if (other.hasRxMBytes()) {
          setRxMBytes(other.getRxMBytes());
        }
        if (other.hasTxMBytes()) {
          setTxMBytes(other.getTxMBytes());
        }
        if (other.hasRxBcastPkts()) {
          setRxBcastPkts(other.getRxBcastPkts());
        }
        if (other.hasTxBcastPkts()) {
          setTxBcastPkts(other.getTxBcastPkts());
        }
        if (other.hasTxOverLimit()) {
          setTxOverLimit(other.getTxOverLimit());
        }
        if (other.hasEchoLossRate()) {
          setEchoLossRate(other.getEchoLossRate());
        }
        if (other.hasDownEvents()) {
          setDownEvents(other.getDownEvents());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tunnelEngine_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tunnel_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              uas_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              rxPkts_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              txPkts_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              rxMBytes_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              txMBytes_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              rxBcastPkts_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              txBcastPkts_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              txOverLimit_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              echoLossRate_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              downEvents_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 tunnelEngine = 1;
      private int tunnelEngine_ ;
      public boolean hasTunnelEngine() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getTunnelEngine() {
        return tunnelEngine_;
      }
      public Builder setTunnelEngine(int value) {
        bitField0_ |= 0x00000001;
        tunnelEngine_ = value;
        onChanged();
        return this;
      }
      public Builder clearTunnelEngine() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tunnelEngine_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 tunnel = 2;
      private int tunnel_ ;
      public boolean hasTunnel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getTunnel() {
        return tunnel_;
      }
      public Builder setTunnel(int value) {
        bitField0_ |= 0x00000002;
        tunnel_ = value;
        onChanged();
        return this;
      }
      public Builder clearTunnel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tunnel_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 uas = 3;
      private int uas_ ;
      public boolean hasUas() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getUas() {
        return uas_;
      }
      public Builder setUas(int value) {
        bitField0_ |= 0x00000004;
        uas_ = value;
        onChanged();
        return this;
      }
      public Builder clearUas() {
        bitField0_ = (bitField0_ & ~0x00000004);
        uas_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 rxPkts = 4;
      private int rxPkts_ ;
      public boolean hasRxPkts() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getRxPkts() {
        return rxPkts_;
      }
      public Builder setRxPkts(int value) {
        bitField0_ |= 0x00000008;
        rxPkts_ = value;
        onChanged();
        return this;
      }
      public Builder clearRxPkts() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rxPkts_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 txPkts = 5;
      private int txPkts_ ;
      public boolean hasTxPkts() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getTxPkts() {
        return txPkts_;
      }
      public Builder setTxPkts(int value) {
        bitField0_ |= 0x00000010;
        txPkts_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxPkts() {
        bitField0_ = (bitField0_ & ~0x00000010);
        txPkts_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 rxMBytes = 6;
      private int rxMBytes_ ;
      public boolean hasRxMBytes() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRxMBytes() {
        return rxMBytes_;
      }
      public Builder setRxMBytes(int value) {
        bitField0_ |= 0x00000020;
        rxMBytes_ = value;
        onChanged();
        return this;
      }
      public Builder clearRxMBytes() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rxMBytes_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 txMBytes = 7;
      private int txMBytes_ ;
      public boolean hasTxMBytes() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getTxMBytes() {
        return txMBytes_;
      }
      public Builder setTxMBytes(int value) {
        bitField0_ |= 0x00000040;
        txMBytes_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxMBytes() {
        bitField0_ = (bitField0_ & ~0x00000040);
        txMBytes_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 rxBcastPkts = 8;
      private int rxBcastPkts_ ;
      public boolean hasRxBcastPkts() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getRxBcastPkts() {
        return rxBcastPkts_;
      }
      public Builder setRxBcastPkts(int value) {
        bitField0_ |= 0x00000080;
        rxBcastPkts_ = value;
        onChanged();
        return this;
      }
      public Builder clearRxBcastPkts() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rxBcastPkts_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 txBcastPkts = 9;
      private int txBcastPkts_ ;
      public boolean hasTxBcastPkts() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getTxBcastPkts() {
        return txBcastPkts_;
      }
      public Builder setTxBcastPkts(int value) {
        bitField0_ |= 0x00000100;
        txBcastPkts_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxBcastPkts() {
        bitField0_ = (bitField0_ & ~0x00000100);
        txBcastPkts_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 txOverLimit = 10;
      private int txOverLimit_ ;
      public boolean hasTxOverLimit() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getTxOverLimit() {
        return txOverLimit_;
      }
      public Builder setTxOverLimit(int value) {
        bitField0_ |= 0x00000200;
        txOverLimit_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxOverLimit() {
        bitField0_ = (bitField0_ & ~0x00000200);
        txOverLimit_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 echoLossRate = 11;
      private int echoLossRate_ ;
      public boolean hasEchoLossRate() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getEchoLossRate() {
        return echoLossRate_;
      }
      public Builder setEchoLossRate(int value) {
        bitField0_ |= 0x00000400;
        echoLossRate_ = value;
        onChanged();
        return this;
      }
      public Builder clearEchoLossRate() {
        bitField0_ = (bitField0_ & ~0x00000400);
        echoLossRate_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 downEvents = 12;
      private int downEvents_ ;
      public boolean hasDownEvents() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getDownEvents() {
        return downEvents_;
      }
      public Builder setDownEvents(int value) {
        bitField0_ |= 0x00000800;
        downEvents_ = value;
        onChanged();
        return this;
      }
      public Builder clearDownEvents() {
        bitField0_ = (bitField0_ & ~0x00000800);
        downEvents_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.ericsson.wifi.ewmnbi.TunnelStats)
    }
    
    static {
      defaultInstance = new TunnelStats(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.ericsson.wifi.ewmnbi.TunnelStats)
  }
  
  public interface WifiStatsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 slot = 1;
    boolean hasSlot();
    int getSlot();
    
    // optional uint32 port = 2;
    boolean hasPort();
    int getPort();
    
    // optional uint32 rxMBytes = 3;
    boolean hasRxMBytes();
    int getRxMBytes();
    
    // optional uint32 txMBytes = 4;
    boolean hasTxMBytes();
    int getTxMBytes();
    
    // optional uint32 accessTxErrorRate = 5;
    boolean hasAccessTxErrorRate();
    int getAccessTxErrorRate();
    
    // optional uint32 accessRxErrorRate = 6;
    boolean hasAccessRxErrorRate();
    int getAccessRxErrorRate();
    
    // optional uint32 accessRxDuplicateFrameRate = 7;
    boolean hasAccessRxDuplicateFrameRate();
    int getAccessRxDuplicateFrameRate();
    
    // optional uint32 accessRxLowModulationRate = 8;
    boolean hasAccessRxLowModulationRate();
    int getAccessRxLowModulationRate();
    
    // optional float noiseFloorMin = 9;
    boolean hasNoiseFloorMin();
    float getNoiseFloorMin();
    
    // optional float noiseFloorMax = 10;
    boolean hasNoiseFloorMax();
    float getNoiseFloorMax();
    
    // optional float noiseFloorAvg = 11;
    boolean hasNoiseFloorAvg();
    float getNoiseFloorAvg();
    
    // optional uint32 uniqueMacs = 12;
    boolean hasUniqueMacs();
    int getUniqueMacs();
    
    // optional uint32 associationCount = 13;
    boolean hasAssociationCount();
    int getAssociationCount();
    
    // optional uint32 sessionCount = 14;
    boolean hasSessionCount();
    int getSessionCount();
    
    // optional uint32 minuteCount = 15;
    boolean hasMinuteCount();
    int getMinuteCount();
    
    // optional uint32 chBusynessTot = 16;
    boolean hasChBusynessTot();
    int getChBusynessTot();
    
    // optional uint32 chBusynessNoise = 17;
    boolean hasChBusynessNoise();
    int getChBusynessNoise();
    
    // optional uint32 chBusynessNonLocal = 18;
    boolean hasChBusynessNonLocal();
    int getChBusynessNonLocal();
    
    // optional float wmos = 19;
    boolean hasWmos();
    float getWmos();
  }
  public static final class WifiStats extends
      com.google.protobuf.GeneratedMessage
      implements WifiStatsOrBuilder {
    // Use WifiStats.newBuilder() to construct.
    private WifiStats(Builder builder) {
      super(builder);
    }
    private WifiStats(boolean noInit) {}
    
    private static final WifiStats defaultInstance;
    public static WifiStats getDefaultInstance() {
      return defaultInstance;
    }
    
    public WifiStats getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_WifiStats_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_WifiStats_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 slot = 1;
    public static final int SLOT_FIELD_NUMBER = 1;
    private int slot_;
    public boolean hasSlot() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSlot() {
      return slot_;
    }
    
    // optional uint32 port = 2;
    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    public boolean hasPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPort() {
      return port_;
    }
    
    // optional uint32 rxMBytes = 3;
    public static final int RXMBYTES_FIELD_NUMBER = 3;
    private int rxMBytes_;
    public boolean hasRxMBytes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getRxMBytes() {
      return rxMBytes_;
    }
    
    // optional uint32 txMBytes = 4;
    public static final int TXMBYTES_FIELD_NUMBER = 4;
    private int txMBytes_;
    public boolean hasTxMBytes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getTxMBytes() {
      return txMBytes_;
    }
    
    // optional uint32 accessTxErrorRate = 5;
    public static final int ACCESSTXERRORRATE_FIELD_NUMBER = 5;
    private int accessTxErrorRate_;
    public boolean hasAccessTxErrorRate() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getAccessTxErrorRate() {
      return accessTxErrorRate_;
    }
    
    // optional uint32 accessRxErrorRate = 6;
    public static final int ACCESSRXERRORRATE_FIELD_NUMBER = 6;
    private int accessRxErrorRate_;
    public boolean hasAccessRxErrorRate() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getAccessRxErrorRate() {
      return accessRxErrorRate_;
    }
    
    // optional uint32 accessRxDuplicateFrameRate = 7;
    public static final int ACCESSRXDUPLICATEFRAMERATE_FIELD_NUMBER = 7;
    private int accessRxDuplicateFrameRate_;
    public boolean hasAccessRxDuplicateFrameRate() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getAccessRxDuplicateFrameRate() {
      return accessRxDuplicateFrameRate_;
    }
    
    // optional uint32 accessRxLowModulationRate = 8;
    public static final int ACCESSRXLOWMODULATIONRATE_FIELD_NUMBER = 8;
    private int accessRxLowModulationRate_;
    public boolean hasAccessRxLowModulationRate() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getAccessRxLowModulationRate() {
      return accessRxLowModulationRate_;
    }
    
    // optional float noiseFloorMin = 9;
    public static final int NOISEFLOORMIN_FIELD_NUMBER = 9;
    private float noiseFloorMin_;
    public boolean hasNoiseFloorMin() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public float getNoiseFloorMin() {
      return noiseFloorMin_;
    }
    
    // optional float noiseFloorMax = 10;
    public static final int NOISEFLOORMAX_FIELD_NUMBER = 10;
    private float noiseFloorMax_;
    public boolean hasNoiseFloorMax() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public float getNoiseFloorMax() {
      return noiseFloorMax_;
    }
    
    // optional float noiseFloorAvg = 11;
    public static final int NOISEFLOORAVG_FIELD_NUMBER = 11;
    private float noiseFloorAvg_;
    public boolean hasNoiseFloorAvg() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public float getNoiseFloorAvg() {
      return noiseFloorAvg_;
    }
    
    // optional uint32 uniqueMacs = 12;
    public static final int UNIQUEMACS_FIELD_NUMBER = 12;
    private int uniqueMacs_;
    public boolean hasUniqueMacs() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getUniqueMacs() {
      return uniqueMacs_;
    }
    
    // optional uint32 associationCount = 13;
    public static final int ASSOCIATIONCOUNT_FIELD_NUMBER = 13;
    private int associationCount_;
    public boolean hasAssociationCount() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getAssociationCount() {
      return associationCount_;
    }
    
    // optional uint32 sessionCount = 14;
    public static final int SESSIONCOUNT_FIELD_NUMBER = 14;
    private int sessionCount_;
    public boolean hasSessionCount() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public int getSessionCount() {
      return sessionCount_;
    }
    
    // optional uint32 minuteCount = 15;
    public static final int MINUTECOUNT_FIELD_NUMBER = 15;
    private int minuteCount_;
    public boolean hasMinuteCount() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public int getMinuteCount() {
      return minuteCount_;
    }
    
    // optional uint32 chBusynessTot = 16;
    public static final int CHBUSYNESSTOT_FIELD_NUMBER = 16;
    private int chBusynessTot_;
    public boolean hasChBusynessTot() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getChBusynessTot() {
      return chBusynessTot_;
    }
    
    // optional uint32 chBusynessNoise = 17;
    public static final int CHBUSYNESSNOISE_FIELD_NUMBER = 17;
    private int chBusynessNoise_;
    public boolean hasChBusynessNoise() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public int getChBusynessNoise() {
      return chBusynessNoise_;
    }
    
    // optional uint32 chBusynessNonLocal = 18;
    public static final int CHBUSYNESSNONLOCAL_FIELD_NUMBER = 18;
    private int chBusynessNonLocal_;
    public boolean hasChBusynessNonLocal() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public int getChBusynessNonLocal() {
      return chBusynessNonLocal_;
    }
    
    // optional float wmos = 19;
    public static final int WMOS_FIELD_NUMBER = 19;
    private float wmos_;
    public boolean hasWmos() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public float getWmos() {
      return wmos_;
    }
    
    private void initFields() {
      slot_ = 0;
      port_ = 0;
      rxMBytes_ = 0;
      txMBytes_ = 0;
      accessTxErrorRate_ = 0;
      accessRxErrorRate_ = 0;
      accessRxDuplicateFrameRate_ = 0;
      accessRxLowModulationRate_ = 0;
      noiseFloorMin_ = 0F;
      noiseFloorMax_ = 0F;
      noiseFloorAvg_ = 0F;
      uniqueMacs_ = 0;
      associationCount_ = 0;
      sessionCount_ = 0;
      minuteCount_ = 0;
      chBusynessTot_ = 0;
      chBusynessNoise_ = 0;
      chBusynessNonLocal_ = 0;
      wmos_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, slot_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, port_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, rxMBytes_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, txMBytes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, accessTxErrorRate_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, accessRxErrorRate_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, accessRxDuplicateFrameRate_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, accessRxLowModulationRate_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, noiseFloorMin_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, noiseFloorMax_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, noiseFloorAvg_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, uniqueMacs_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(13, associationCount_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(14, sessionCount_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(15, minuteCount_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(16, chBusynessTot_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(17, chBusynessNoise_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(18, chBusynessNonLocal_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeFloat(19, wmos_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, slot_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, port_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, rxMBytes_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, txMBytes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, accessTxErrorRate_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, accessRxErrorRate_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, accessRxDuplicateFrameRate_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, accessRxLowModulationRate_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, noiseFloorMin_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, noiseFloorMax_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, noiseFloorAvg_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, uniqueMacs_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, associationCount_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, sessionCount_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, minuteCount_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, chBusynessTot_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, chBusynessNoise_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, chBusynessNonLocal_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(19, wmos_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_WifiStats_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_WifiStats_fieldAccessorTable;
      }
      
      // Construct using com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        slot_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rxMBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        txMBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        accessTxErrorRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        accessRxErrorRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        accessRxDuplicateFrameRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        accessRxLowModulationRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        noiseFloorMin_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        noiseFloorMax_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        noiseFloorAvg_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        uniqueMacs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        associationCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        sessionCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        minuteCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        chBusynessTot_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        chBusynessNoise_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        chBusynessNonLocal_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        wmos_ = 0F;
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.getDescriptor();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats getDefaultInstanceForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.getDefaultInstance();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats build() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats buildPartial() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats result = new com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.slot_ = slot_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rxMBytes_ = rxMBytes_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.txMBytes_ = txMBytes_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.accessTxErrorRate_ = accessTxErrorRate_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.accessRxErrorRate_ = accessRxErrorRate_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.accessRxDuplicateFrameRate_ = accessRxDuplicateFrameRate_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.accessRxLowModulationRate_ = accessRxLowModulationRate_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.noiseFloorMin_ = noiseFloorMin_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.noiseFloorMax_ = noiseFloorMax_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.noiseFloorAvg_ = noiseFloorAvg_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.uniqueMacs_ = uniqueMacs_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.associationCount_ = associationCount_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.sessionCount_ = sessionCount_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.minuteCount_ = minuteCount_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.chBusynessTot_ = chBusynessTot_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.chBusynessNoise_ = chBusynessNoise_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.chBusynessNonLocal_ = chBusynessNonLocal_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.wmos_ = wmos_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats) {
          return mergeFrom((com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats other) {
        if (other == com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.getDefaultInstance()) return this;
        if (other.hasSlot()) {
          setSlot(other.getSlot());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasRxMBytes()) {
          setRxMBytes(other.getRxMBytes());
        }
        if (other.hasTxMBytes()) {
          setTxMBytes(other.getTxMBytes());
        }
        if (other.hasAccessTxErrorRate()) {
          setAccessTxErrorRate(other.getAccessTxErrorRate());
        }
        if (other.hasAccessRxErrorRate()) {
          setAccessRxErrorRate(other.getAccessRxErrorRate());
        }
        if (other.hasAccessRxDuplicateFrameRate()) {
          setAccessRxDuplicateFrameRate(other.getAccessRxDuplicateFrameRate());
        }
        if (other.hasAccessRxLowModulationRate()) {
          setAccessRxLowModulationRate(other.getAccessRxLowModulationRate());
        }
        if (other.hasNoiseFloorMin()) {
          setNoiseFloorMin(other.getNoiseFloorMin());
        }
        if (other.hasNoiseFloorMax()) {
          setNoiseFloorMax(other.getNoiseFloorMax());
        }
        if (other.hasNoiseFloorAvg()) {
          setNoiseFloorAvg(other.getNoiseFloorAvg());
        }
        if (other.hasUniqueMacs()) {
          setUniqueMacs(other.getUniqueMacs());
        }
        if (other.hasAssociationCount()) {
          setAssociationCount(other.getAssociationCount());
        }
        if (other.hasSessionCount()) {
          setSessionCount(other.getSessionCount());
        }
        if (other.hasMinuteCount()) {
          setMinuteCount(other.getMinuteCount());
        }
        if (other.hasChBusynessTot()) {
          setChBusynessTot(other.getChBusynessTot());
        }
        if (other.hasChBusynessNoise()) {
          setChBusynessNoise(other.getChBusynessNoise());
        }
        if (other.hasChBusynessNonLocal()) {
          setChBusynessNonLocal(other.getChBusynessNonLocal());
        }
        if (other.hasWmos()) {
          setWmos(other.getWmos());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              slot_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              port_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rxMBytes_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              txMBytes_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              accessTxErrorRate_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              accessRxErrorRate_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              accessRxDuplicateFrameRate_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              accessRxLowModulationRate_ = input.readUInt32();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              noiseFloorMin_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              noiseFloorMax_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              noiseFloorAvg_ = input.readFloat();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              uniqueMacs_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              associationCount_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              sessionCount_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              minuteCount_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              chBusynessTot_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              chBusynessNoise_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              chBusynessNonLocal_ = input.readUInt32();
              break;
            }
            case 157: {
              bitField0_ |= 0x00040000;
              wmos_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 slot = 1;
      private int slot_ ;
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSlot() {
        return slot_;
      }
      public Builder setSlot(int value) {
        bitField0_ |= 0x00000001;
        slot_ = value;
        onChanged();
        return this;
      }
      public Builder clearSlot() {
        bitField0_ = (bitField0_ & ~0x00000001);
        slot_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 port = 2;
      private int port_ ;
      public boolean hasPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPort() {
        return port_;
      }
      public Builder setPort(int value) {
        bitField0_ |= 0x00000002;
        port_ = value;
        onChanged();
        return this;
      }
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 rxMBytes = 3;
      private int rxMBytes_ ;
      public boolean hasRxMBytes() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getRxMBytes() {
        return rxMBytes_;
      }
      public Builder setRxMBytes(int value) {
        bitField0_ |= 0x00000004;
        rxMBytes_ = value;
        onChanged();
        return this;
      }
      public Builder clearRxMBytes() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rxMBytes_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 txMBytes = 4;
      private int txMBytes_ ;
      public boolean hasTxMBytes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getTxMBytes() {
        return txMBytes_;
      }
      public Builder setTxMBytes(int value) {
        bitField0_ |= 0x00000008;
        txMBytes_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxMBytes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        txMBytes_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 accessTxErrorRate = 5;
      private int accessTxErrorRate_ ;
      public boolean hasAccessTxErrorRate() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getAccessTxErrorRate() {
        return accessTxErrorRate_;
      }
      public Builder setAccessTxErrorRate(int value) {
        bitField0_ |= 0x00000010;
        accessTxErrorRate_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccessTxErrorRate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        accessTxErrorRate_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 accessRxErrorRate = 6;
      private int accessRxErrorRate_ ;
      public boolean hasAccessRxErrorRate() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getAccessRxErrorRate() {
        return accessRxErrorRate_;
      }
      public Builder setAccessRxErrorRate(int value) {
        bitField0_ |= 0x00000020;
        accessRxErrorRate_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccessRxErrorRate() {
        bitField0_ = (bitField0_ & ~0x00000020);
        accessRxErrorRate_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 accessRxDuplicateFrameRate = 7;
      private int accessRxDuplicateFrameRate_ ;
      public boolean hasAccessRxDuplicateFrameRate() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getAccessRxDuplicateFrameRate() {
        return accessRxDuplicateFrameRate_;
      }
      public Builder setAccessRxDuplicateFrameRate(int value) {
        bitField0_ |= 0x00000040;
        accessRxDuplicateFrameRate_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccessRxDuplicateFrameRate() {
        bitField0_ = (bitField0_ & ~0x00000040);
        accessRxDuplicateFrameRate_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 accessRxLowModulationRate = 8;
      private int accessRxLowModulationRate_ ;
      public boolean hasAccessRxLowModulationRate() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getAccessRxLowModulationRate() {
        return accessRxLowModulationRate_;
      }
      public Builder setAccessRxLowModulationRate(int value) {
        bitField0_ |= 0x00000080;
        accessRxLowModulationRate_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccessRxLowModulationRate() {
        bitField0_ = (bitField0_ & ~0x00000080);
        accessRxLowModulationRate_ = 0;
        onChanged();
        return this;
      }
      
      // optional float noiseFloorMin = 9;
      private float noiseFloorMin_ ;
      public boolean hasNoiseFloorMin() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public float getNoiseFloorMin() {
        return noiseFloorMin_;
      }
      public Builder setNoiseFloorMin(float value) {
        bitField0_ |= 0x00000100;
        noiseFloorMin_ = value;
        onChanged();
        return this;
      }
      public Builder clearNoiseFloorMin() {
        bitField0_ = (bitField0_ & ~0x00000100);
        noiseFloorMin_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float noiseFloorMax = 10;
      private float noiseFloorMax_ ;
      public boolean hasNoiseFloorMax() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public float getNoiseFloorMax() {
        return noiseFloorMax_;
      }
      public Builder setNoiseFloorMax(float value) {
        bitField0_ |= 0x00000200;
        noiseFloorMax_ = value;
        onChanged();
        return this;
      }
      public Builder clearNoiseFloorMax() {
        bitField0_ = (bitField0_ & ~0x00000200);
        noiseFloorMax_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float noiseFloorAvg = 11;
      private float noiseFloorAvg_ ;
      public boolean hasNoiseFloorAvg() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public float getNoiseFloorAvg() {
        return noiseFloorAvg_;
      }
      public Builder setNoiseFloorAvg(float value) {
        bitField0_ |= 0x00000400;
        noiseFloorAvg_ = value;
        onChanged();
        return this;
      }
      public Builder clearNoiseFloorAvg() {
        bitField0_ = (bitField0_ & ~0x00000400);
        noiseFloorAvg_ = 0F;
        onChanged();
        return this;
      }
      
      // optional uint32 uniqueMacs = 12;
      private int uniqueMacs_ ;
      public boolean hasUniqueMacs() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getUniqueMacs() {
        return uniqueMacs_;
      }
      public Builder setUniqueMacs(int value) {
        bitField0_ |= 0x00000800;
        uniqueMacs_ = value;
        onChanged();
        return this;
      }
      public Builder clearUniqueMacs() {
        bitField0_ = (bitField0_ & ~0x00000800);
        uniqueMacs_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 associationCount = 13;
      private int associationCount_ ;
      public boolean hasAssociationCount() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getAssociationCount() {
        return associationCount_;
      }
      public Builder setAssociationCount(int value) {
        bitField0_ |= 0x00001000;
        associationCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearAssociationCount() {
        bitField0_ = (bitField0_ & ~0x00001000);
        associationCount_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 sessionCount = 14;
      private int sessionCount_ ;
      public boolean hasSessionCount() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getSessionCount() {
        return sessionCount_;
      }
      public Builder setSessionCount(int value) {
        bitField0_ |= 0x00002000;
        sessionCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearSessionCount() {
        bitField0_ = (bitField0_ & ~0x00002000);
        sessionCount_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 minuteCount = 15;
      private int minuteCount_ ;
      public boolean hasMinuteCount() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public int getMinuteCount() {
        return minuteCount_;
      }
      public Builder setMinuteCount(int value) {
        bitField0_ |= 0x00004000;
        minuteCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearMinuteCount() {
        bitField0_ = (bitField0_ & ~0x00004000);
        minuteCount_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 chBusynessTot = 16;
      private int chBusynessTot_ ;
      public boolean hasChBusynessTot() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getChBusynessTot() {
        return chBusynessTot_;
      }
      public Builder setChBusynessTot(int value) {
        bitField0_ |= 0x00008000;
        chBusynessTot_ = value;
        onChanged();
        return this;
      }
      public Builder clearChBusynessTot() {
        bitField0_ = (bitField0_ & ~0x00008000);
        chBusynessTot_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 chBusynessNoise = 17;
      private int chBusynessNoise_ ;
      public boolean hasChBusynessNoise() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public int getChBusynessNoise() {
        return chBusynessNoise_;
      }
      public Builder setChBusynessNoise(int value) {
        bitField0_ |= 0x00010000;
        chBusynessNoise_ = value;
        onChanged();
        return this;
      }
      public Builder clearChBusynessNoise() {
        bitField0_ = (bitField0_ & ~0x00010000);
        chBusynessNoise_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 chBusynessNonLocal = 18;
      private int chBusynessNonLocal_ ;
      public boolean hasChBusynessNonLocal() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public int getChBusynessNonLocal() {
        return chBusynessNonLocal_;
      }
      public Builder setChBusynessNonLocal(int value) {
        bitField0_ |= 0x00020000;
        chBusynessNonLocal_ = value;
        onChanged();
        return this;
      }
      public Builder clearChBusynessNonLocal() {
        bitField0_ = (bitField0_ & ~0x00020000);
        chBusynessNonLocal_ = 0;
        onChanged();
        return this;
      }
      
      // optional float wmos = 19;
      private float wmos_ ;
      public boolean hasWmos() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public float getWmos() {
        return wmos_;
      }
      public Builder setWmos(float value) {
        bitField0_ |= 0x00040000;
        wmos_ = value;
        onChanged();
        return this;
      }
      public Builder clearWmos() {
        bitField0_ = (bitField0_ & ~0x00040000);
        wmos_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.ericsson.wifi.ewmnbi.WifiStats)
    }
    
    static {
      defaultInstance = new WifiStats(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.ericsson.wifi.ewmnbi.WifiStats)
  }
  
  public interface WlanStatsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 slot = 1;
    boolean hasSlot();
    int getSlot();
    
    // optional uint32 port = 2;
    boolean hasPort();
    int getPort();
    
    // optional uint32 wlanId = 3;
    boolean hasWlanId();
    int getWlanId();
    
    // optional uint32 rxMBytes = 4;
    boolean hasRxMBytes();
    int getRxMBytes();
    
    // optional uint32 txMBytes = 5;
    boolean hasTxMBytes();
    int getTxMBytes();
    
    // optional uint32 uniqueMacs = 6;
    boolean hasUniqueMacs();
    int getUniqueMacs();
    
    // optional uint32 associationCount = 7;
    boolean hasAssociationCount();
    int getAssociationCount();
    
    // optional uint32 sessionCount = 8;
    boolean hasSessionCount();
    int getSessionCount();
    
    // optional uint32 minuteCount = 9;
    boolean hasMinuteCount();
    int getMinuteCount();
  }
  public static final class WlanStats extends
      com.google.protobuf.GeneratedMessage
      implements WlanStatsOrBuilder {
    // Use WlanStats.newBuilder() to construct.
    private WlanStats(Builder builder) {
      super(builder);
    }
    private WlanStats(boolean noInit) {}
    
    private static final WlanStats defaultInstance;
    public static WlanStats getDefaultInstance() {
      return defaultInstance;
    }
    
    public WlanStats getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_WlanStats_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_WlanStats_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 slot = 1;
    public static final int SLOT_FIELD_NUMBER = 1;
    private int slot_;
    public boolean hasSlot() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSlot() {
      return slot_;
    }
    
    // optional uint32 port = 2;
    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    public boolean hasPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPort() {
      return port_;
    }
    
    // optional uint32 wlanId = 3;
    public static final int WLANID_FIELD_NUMBER = 3;
    private int wlanId_;
    public boolean hasWlanId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getWlanId() {
      return wlanId_;
    }
    
    // optional uint32 rxMBytes = 4;
    public static final int RXMBYTES_FIELD_NUMBER = 4;
    private int rxMBytes_;
    public boolean hasRxMBytes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getRxMBytes() {
      return rxMBytes_;
    }
    
    // optional uint32 txMBytes = 5;
    public static final int TXMBYTES_FIELD_NUMBER = 5;
    private int txMBytes_;
    public boolean hasTxMBytes() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getTxMBytes() {
      return txMBytes_;
    }
    
    // optional uint32 uniqueMacs = 6;
    public static final int UNIQUEMACS_FIELD_NUMBER = 6;
    private int uniqueMacs_;
    public boolean hasUniqueMacs() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getUniqueMacs() {
      return uniqueMacs_;
    }
    
    // optional uint32 associationCount = 7;
    public static final int ASSOCIATIONCOUNT_FIELD_NUMBER = 7;
    private int associationCount_;
    public boolean hasAssociationCount() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getAssociationCount() {
      return associationCount_;
    }
    
    // optional uint32 sessionCount = 8;
    public static final int SESSIONCOUNT_FIELD_NUMBER = 8;
    private int sessionCount_;
    public boolean hasSessionCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getSessionCount() {
      return sessionCount_;
    }
    
    // optional uint32 minuteCount = 9;
    public static final int MINUTECOUNT_FIELD_NUMBER = 9;
    private int minuteCount_;
    public boolean hasMinuteCount() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getMinuteCount() {
      return minuteCount_;
    }
    
    private void initFields() {
      slot_ = 0;
      port_ = 0;
      wlanId_ = 0;
      rxMBytes_ = 0;
      txMBytes_ = 0;
      uniqueMacs_ = 0;
      associationCount_ = 0;
      sessionCount_ = 0;
      minuteCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, slot_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, port_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, wlanId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, rxMBytes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, txMBytes_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, uniqueMacs_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, associationCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, sessionCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, minuteCount_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, slot_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, port_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, wlanId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, rxMBytes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, txMBytes_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, uniqueMacs_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, associationCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, sessionCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, minuteCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_WlanStats_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_WlanStats_fieldAccessorTable;
      }
      
      // Construct using com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        slot_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        wlanId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        rxMBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        txMBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        uniqueMacs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        associationCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        sessionCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        minuteCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.getDescriptor();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats getDefaultInstanceForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.getDefaultInstance();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats build() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats buildPartial() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats result = new com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.slot_ = slot_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.wlanId_ = wlanId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rxMBytes_ = rxMBytes_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.txMBytes_ = txMBytes_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.uniqueMacs_ = uniqueMacs_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.associationCount_ = associationCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.sessionCount_ = sessionCount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.minuteCount_ = minuteCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats) {
          return mergeFrom((com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats other) {
        if (other == com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.getDefaultInstance()) return this;
        if (other.hasSlot()) {
          setSlot(other.getSlot());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasWlanId()) {
          setWlanId(other.getWlanId());
        }
        if (other.hasRxMBytes()) {
          setRxMBytes(other.getRxMBytes());
        }
        if (other.hasTxMBytes()) {
          setTxMBytes(other.getTxMBytes());
        }
        if (other.hasUniqueMacs()) {
          setUniqueMacs(other.getUniqueMacs());
        }
        if (other.hasAssociationCount()) {
          setAssociationCount(other.getAssociationCount());
        }
        if (other.hasSessionCount()) {
          setSessionCount(other.getSessionCount());
        }
        if (other.hasMinuteCount()) {
          setMinuteCount(other.getMinuteCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              slot_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              port_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              wlanId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              rxMBytes_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              txMBytes_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              uniqueMacs_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              associationCount_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              sessionCount_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              minuteCount_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 slot = 1;
      private int slot_ ;
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSlot() {
        return slot_;
      }
      public Builder setSlot(int value) {
        bitField0_ |= 0x00000001;
        slot_ = value;
        onChanged();
        return this;
      }
      public Builder clearSlot() {
        bitField0_ = (bitField0_ & ~0x00000001);
        slot_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 port = 2;
      private int port_ ;
      public boolean hasPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPort() {
        return port_;
      }
      public Builder setPort(int value) {
        bitField0_ |= 0x00000002;
        port_ = value;
        onChanged();
        return this;
      }
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 wlanId = 3;
      private int wlanId_ ;
      public boolean hasWlanId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getWlanId() {
        return wlanId_;
      }
      public Builder setWlanId(int value) {
        bitField0_ |= 0x00000004;
        wlanId_ = value;
        onChanged();
        return this;
      }
      public Builder clearWlanId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wlanId_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 rxMBytes = 4;
      private int rxMBytes_ ;
      public boolean hasRxMBytes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getRxMBytes() {
        return rxMBytes_;
      }
      public Builder setRxMBytes(int value) {
        bitField0_ |= 0x00000008;
        rxMBytes_ = value;
        onChanged();
        return this;
      }
      public Builder clearRxMBytes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rxMBytes_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 txMBytes = 5;
      private int txMBytes_ ;
      public boolean hasTxMBytes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getTxMBytes() {
        return txMBytes_;
      }
      public Builder setTxMBytes(int value) {
        bitField0_ |= 0x00000010;
        txMBytes_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxMBytes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        txMBytes_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 uniqueMacs = 6;
      private int uniqueMacs_ ;
      public boolean hasUniqueMacs() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getUniqueMacs() {
        return uniqueMacs_;
      }
      public Builder setUniqueMacs(int value) {
        bitField0_ |= 0x00000020;
        uniqueMacs_ = value;
        onChanged();
        return this;
      }
      public Builder clearUniqueMacs() {
        bitField0_ = (bitField0_ & ~0x00000020);
        uniqueMacs_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 associationCount = 7;
      private int associationCount_ ;
      public boolean hasAssociationCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getAssociationCount() {
        return associationCount_;
      }
      public Builder setAssociationCount(int value) {
        bitField0_ |= 0x00000040;
        associationCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearAssociationCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        associationCount_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 sessionCount = 8;
      private int sessionCount_ ;
      public boolean hasSessionCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getSessionCount() {
        return sessionCount_;
      }
      public Builder setSessionCount(int value) {
        bitField0_ |= 0x00000080;
        sessionCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearSessionCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sessionCount_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 minuteCount = 9;
      private int minuteCount_ ;
      public boolean hasMinuteCount() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getMinuteCount() {
        return minuteCount_;
      }
      public Builder setMinuteCount(int value) {
        bitField0_ |= 0x00000100;
        minuteCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearMinuteCount() {
        bitField0_ = (bitField0_ & ~0x00000100);
        minuteCount_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.ericsson.wifi.ewmnbi.WlanStats)
    }
    
    static {
      defaultInstance = new WlanStats(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.ericsson.wifi.ewmnbi.WlanStats)
  }
  
  public interface MeshStatsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 slot = 1;
    boolean hasSlot();
    int getSlot();
    
    // optional uint32 port = 2;
    boolean hasPort();
    int getPort();
    
    // optional uint32 linkId = 3;
    boolean hasLinkId();
    int getLinkId();
    
    // optional float rssiMin = 4;
    boolean hasRssiMin();
    float getRssiMin();
    
    // optional float rssiMax = 5;
    boolean hasRssiMax();
    float getRssiMax();
    
    // optional float rssiAvg = 6;
    boolean hasRssiAvg();
    float getRssiAvg();
    
    // optional uint32 bhTxErrorRate = 7;
    boolean hasBhTxErrorRate();
    int getBhTxErrorRate();
  }
  public static final class MeshStats extends
      com.google.protobuf.GeneratedMessage
      implements MeshStatsOrBuilder {
    // Use MeshStats.newBuilder() to construct.
    private MeshStats(Builder builder) {
      super(builder);
    }
    private MeshStats(boolean noInit) {}
    
    private static final MeshStats defaultInstance;
    public static MeshStats getDefaultInstance() {
      return defaultInstance;
    }
    
    public MeshStats getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_MeshStats_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_MeshStats_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 slot = 1;
    public static final int SLOT_FIELD_NUMBER = 1;
    private int slot_;
    public boolean hasSlot() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSlot() {
      return slot_;
    }
    
    // optional uint32 port = 2;
    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    public boolean hasPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPort() {
      return port_;
    }
    
    // optional uint32 linkId = 3;
    public static final int LINKID_FIELD_NUMBER = 3;
    private int linkId_;
    public boolean hasLinkId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getLinkId() {
      return linkId_;
    }
    
    // optional float rssiMin = 4;
    public static final int RSSIMIN_FIELD_NUMBER = 4;
    private float rssiMin_;
    public boolean hasRssiMin() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getRssiMin() {
      return rssiMin_;
    }
    
    // optional float rssiMax = 5;
    public static final int RSSIMAX_FIELD_NUMBER = 5;
    private float rssiMax_;
    public boolean hasRssiMax() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public float getRssiMax() {
      return rssiMax_;
    }
    
    // optional float rssiAvg = 6;
    public static final int RSSIAVG_FIELD_NUMBER = 6;
    private float rssiAvg_;
    public boolean hasRssiAvg() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public float getRssiAvg() {
      return rssiAvg_;
    }
    
    // optional uint32 bhTxErrorRate = 7;
    public static final int BHTXERRORRATE_FIELD_NUMBER = 7;
    private int bhTxErrorRate_;
    public boolean hasBhTxErrorRate() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getBhTxErrorRate() {
      return bhTxErrorRate_;
    }
    
    private void initFields() {
      slot_ = 0;
      port_ = 0;
      linkId_ = 0;
      rssiMin_ = 0F;
      rssiMax_ = 0F;
      rssiAvg_ = 0F;
      bhTxErrorRate_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, slot_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, port_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, linkId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, rssiMin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, rssiMax_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, rssiAvg_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, bhTxErrorRate_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, slot_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, port_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, linkId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, rssiMin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, rssiMax_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, rssiAvg_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, bhTxErrorRate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_MeshStats_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_MeshStats_fieldAccessorTable;
      }
      
      // Construct using com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        slot_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        linkId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        rssiMin_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        rssiMax_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        rssiAvg_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        bhTxErrorRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.getDescriptor();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats getDefaultInstanceForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.getDefaultInstance();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats build() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats buildPartial() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats result = new com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.slot_ = slot_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.linkId_ = linkId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rssiMin_ = rssiMin_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rssiMax_ = rssiMax_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rssiAvg_ = rssiAvg_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bhTxErrorRate_ = bhTxErrorRate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats) {
          return mergeFrom((com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats other) {
        if (other == com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.getDefaultInstance()) return this;
        if (other.hasSlot()) {
          setSlot(other.getSlot());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasLinkId()) {
          setLinkId(other.getLinkId());
        }
        if (other.hasRssiMin()) {
          setRssiMin(other.getRssiMin());
        }
        if (other.hasRssiMax()) {
          setRssiMax(other.getRssiMax());
        }
        if (other.hasRssiAvg()) {
          setRssiAvg(other.getRssiAvg());
        }
        if (other.hasBhTxErrorRate()) {
          setBhTxErrorRate(other.getBhTxErrorRate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              slot_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              port_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              linkId_ = input.readUInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              rssiMin_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              rssiMax_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              rssiAvg_ = input.readFloat();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              bhTxErrorRate_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 slot = 1;
      private int slot_ ;
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSlot() {
        return slot_;
      }
      public Builder setSlot(int value) {
        bitField0_ |= 0x00000001;
        slot_ = value;
        onChanged();
        return this;
      }
      public Builder clearSlot() {
        bitField0_ = (bitField0_ & ~0x00000001);
        slot_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 port = 2;
      private int port_ ;
      public boolean hasPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPort() {
        return port_;
      }
      public Builder setPort(int value) {
        bitField0_ |= 0x00000002;
        port_ = value;
        onChanged();
        return this;
      }
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 linkId = 3;
      private int linkId_ ;
      public boolean hasLinkId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getLinkId() {
        return linkId_;
      }
      public Builder setLinkId(int value) {
        bitField0_ |= 0x00000004;
        linkId_ = value;
        onChanged();
        return this;
      }
      public Builder clearLinkId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        linkId_ = 0;
        onChanged();
        return this;
      }
      
      // optional float rssiMin = 4;
      private float rssiMin_ ;
      public boolean hasRssiMin() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getRssiMin() {
        return rssiMin_;
      }
      public Builder setRssiMin(float value) {
        bitField0_ |= 0x00000008;
        rssiMin_ = value;
        onChanged();
        return this;
      }
      public Builder clearRssiMin() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rssiMin_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float rssiMax = 5;
      private float rssiMax_ ;
      public boolean hasRssiMax() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getRssiMax() {
        return rssiMax_;
      }
      public Builder setRssiMax(float value) {
        bitField0_ |= 0x00000010;
        rssiMax_ = value;
        onChanged();
        return this;
      }
      public Builder clearRssiMax() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rssiMax_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float rssiAvg = 6;
      private float rssiAvg_ ;
      public boolean hasRssiAvg() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public float getRssiAvg() {
        return rssiAvg_;
      }
      public Builder setRssiAvg(float value) {
        bitField0_ |= 0x00000020;
        rssiAvg_ = value;
        onChanged();
        return this;
      }
      public Builder clearRssiAvg() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rssiAvg_ = 0F;
        onChanged();
        return this;
      }
      
      // optional uint32 bhTxErrorRate = 7;
      private int bhTxErrorRate_ ;
      public boolean hasBhTxErrorRate() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getBhTxErrorRate() {
        return bhTxErrorRate_;
      }
      public Builder setBhTxErrorRate(int value) {
        bitField0_ |= 0x00000040;
        bhTxErrorRate_ = value;
        onChanged();
        return this;
      }
      public Builder clearBhTxErrorRate() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bhTxErrorRate_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.ericsson.wifi.ewmnbi.MeshStats)
    }
    
    static {
      defaultInstance = new MeshStats(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.ericsson.wifi.ewmnbi.MeshStats)
  }
  
  public interface EthernetStatsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 slot = 1;
    boolean hasSlot();
    int getSlot();
    
    // optional uint32 port = 2;
    boolean hasPort();
    int getPort();
    
    // optional uint32 rxMBytes = 3;
    boolean hasRxMBytes();
    int getRxMBytes();
    
    // optional uint32 txMBytes = 4;
    boolean hasTxMBytes();
    int getTxMBytes();
  }
  public static final class EthernetStats extends
      com.google.protobuf.GeneratedMessage
      implements EthernetStatsOrBuilder {
    // Use EthernetStats.newBuilder() to construct.
    private EthernetStats(Builder builder) {
      super(builder);
    }
    private EthernetStats(boolean noInit) {}
    
    private static final EthernetStats defaultInstance;
    public static EthernetStats getDefaultInstance() {
      return defaultInstance;
    }
    
    public EthernetStats getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_EthernetStats_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_EthernetStats_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 slot = 1;
    public static final int SLOT_FIELD_NUMBER = 1;
    private int slot_;
    public boolean hasSlot() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSlot() {
      return slot_;
    }
    
    // optional uint32 port = 2;
    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    public boolean hasPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPort() {
      return port_;
    }
    
    // optional uint32 rxMBytes = 3;
    public static final int RXMBYTES_FIELD_NUMBER = 3;
    private int rxMBytes_;
    public boolean hasRxMBytes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getRxMBytes() {
      return rxMBytes_;
    }
    
    // optional uint32 txMBytes = 4;
    public static final int TXMBYTES_FIELD_NUMBER = 4;
    private int txMBytes_;
    public boolean hasTxMBytes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getTxMBytes() {
      return txMBytes_;
    }
    
    private void initFields() {
      slot_ = 0;
      port_ = 0;
      rxMBytes_ = 0;
      txMBytes_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, slot_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, port_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, rxMBytes_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, txMBytes_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, slot_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, port_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, rxMBytes_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, txMBytes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_EthernetStats_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_EthernetStats_fieldAccessorTable;
      }
      
      // Construct using com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        slot_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rxMBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        txMBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.getDescriptor();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats getDefaultInstanceForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.getDefaultInstance();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats build() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats buildPartial() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats result = new com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.slot_ = slot_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rxMBytes_ = rxMBytes_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.txMBytes_ = txMBytes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats) {
          return mergeFrom((com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats other) {
        if (other == com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.getDefaultInstance()) return this;
        if (other.hasSlot()) {
          setSlot(other.getSlot());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasRxMBytes()) {
          setRxMBytes(other.getRxMBytes());
        }
        if (other.hasTxMBytes()) {
          setTxMBytes(other.getTxMBytes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              slot_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              port_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rxMBytes_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              txMBytes_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 slot = 1;
      private int slot_ ;
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSlot() {
        return slot_;
      }
      public Builder setSlot(int value) {
        bitField0_ |= 0x00000001;
        slot_ = value;
        onChanged();
        return this;
      }
      public Builder clearSlot() {
        bitField0_ = (bitField0_ & ~0x00000001);
        slot_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 port = 2;
      private int port_ ;
      public boolean hasPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPort() {
        return port_;
      }
      public Builder setPort(int value) {
        bitField0_ |= 0x00000002;
        port_ = value;
        onChanged();
        return this;
      }
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 rxMBytes = 3;
      private int rxMBytes_ ;
      public boolean hasRxMBytes() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getRxMBytes() {
        return rxMBytes_;
      }
      public Builder setRxMBytes(int value) {
        bitField0_ |= 0x00000004;
        rxMBytes_ = value;
        onChanged();
        return this;
      }
      public Builder clearRxMBytes() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rxMBytes_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 txMBytes = 4;
      private int txMBytes_ ;
      public boolean hasTxMBytes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getTxMBytes() {
        return txMBytes_;
      }
      public Builder setTxMBytes(int value) {
        bitField0_ |= 0x00000008;
        txMBytes_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxMBytes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        txMBytes_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.ericsson.wifi.ewmnbi.EthernetStats)
    }
    
    static {
      defaultInstance = new EthernetStats(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.ericsson.wifi.ewmnbi.EthernetStats)
  }
  
  public interface UsbModemStatsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 slot = 1;
    boolean hasSlot();
    int getSlot();
    
    // optional uint32 port = 2;
    boolean hasPort();
    int getPort();
    
    // optional uint32 rxPkts = 3;
    boolean hasRxPkts();
    int getRxPkts();
    
    // optional uint32 txPkts = 4;
    boolean hasTxPkts();
    int getTxPkts();
    
    // optional uint32 rxMBytes = 5;
    boolean hasRxMBytes();
    int getRxMBytes();
    
    // optional uint32 txMBytes = 6;
    boolean hasTxMBytes();
    int getTxMBytes();
    
    // optional uint32 rx_dropped = 7;
    boolean hasRxDropped();
    int getRxDropped();
    
    // optional uint32 tx_dropped = 8;
    boolean hasTxDropped();
    int getTxDropped();
    
    // optional uint32 rx_errors = 9;
    boolean hasRxErrors();
    int getRxErrors();
    
    // optional uint32 tx_errors = 10;
    boolean hasTxErrors();
    int getTxErrors();
    
    // optional uint32 link_failures = 11;
    boolean hasLinkFailures();
    int getLinkFailures();
  }
  public static final class UsbModemStats extends
      com.google.protobuf.GeneratedMessage
      implements UsbModemStatsOrBuilder {
    // Use UsbModemStats.newBuilder() to construct.
    private UsbModemStats(Builder builder) {
      super(builder);
    }
    private UsbModemStats(boolean noInit) {}
    
    private static final UsbModemStats defaultInstance;
    public static UsbModemStats getDefaultInstance() {
      return defaultInstance;
    }
    
    public UsbModemStats getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_UsbModemStats_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_UsbModemStats_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 slot = 1;
    public static final int SLOT_FIELD_NUMBER = 1;
    private int slot_;
    public boolean hasSlot() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSlot() {
      return slot_;
    }
    
    // optional uint32 port = 2;
    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    public boolean hasPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPort() {
      return port_;
    }
    
    // optional uint32 rxPkts = 3;
    public static final int RXPKTS_FIELD_NUMBER = 3;
    private int rxPkts_;
    public boolean hasRxPkts() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getRxPkts() {
      return rxPkts_;
    }
    
    // optional uint32 txPkts = 4;
    public static final int TXPKTS_FIELD_NUMBER = 4;
    private int txPkts_;
    public boolean hasTxPkts() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getTxPkts() {
      return txPkts_;
    }
    
    // optional uint32 rxMBytes = 5;
    public static final int RXMBYTES_FIELD_NUMBER = 5;
    private int rxMBytes_;
    public boolean hasRxMBytes() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getRxMBytes() {
      return rxMBytes_;
    }
    
    // optional uint32 txMBytes = 6;
    public static final int TXMBYTES_FIELD_NUMBER = 6;
    private int txMBytes_;
    public boolean hasTxMBytes() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getTxMBytes() {
      return txMBytes_;
    }
    
    // optional uint32 rx_dropped = 7;
    public static final int RX_DROPPED_FIELD_NUMBER = 7;
    private int rxDropped_;
    public boolean hasRxDropped() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getRxDropped() {
      return rxDropped_;
    }
    
    // optional uint32 tx_dropped = 8;
    public static final int TX_DROPPED_FIELD_NUMBER = 8;
    private int txDropped_;
    public boolean hasTxDropped() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getTxDropped() {
      return txDropped_;
    }
    
    // optional uint32 rx_errors = 9;
    public static final int RX_ERRORS_FIELD_NUMBER = 9;
    private int rxErrors_;
    public boolean hasRxErrors() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getRxErrors() {
      return rxErrors_;
    }
    
    // optional uint32 tx_errors = 10;
    public static final int TX_ERRORS_FIELD_NUMBER = 10;
    private int txErrors_;
    public boolean hasTxErrors() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getTxErrors() {
      return txErrors_;
    }
    
    // optional uint32 link_failures = 11;
    public static final int LINK_FAILURES_FIELD_NUMBER = 11;
    private int linkFailures_;
    public boolean hasLinkFailures() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getLinkFailures() {
      return linkFailures_;
    }
    
    private void initFields() {
      slot_ = 0;
      port_ = 0;
      rxPkts_ = 0;
      txPkts_ = 0;
      rxMBytes_ = 0;
      txMBytes_ = 0;
      rxDropped_ = 0;
      txDropped_ = 0;
      rxErrors_ = 0;
      txErrors_ = 0;
      linkFailures_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, slot_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, port_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, rxPkts_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, txPkts_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, rxMBytes_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, txMBytes_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, rxDropped_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, txDropped_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, rxErrors_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, txErrors_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, linkFailures_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, slot_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, port_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, rxPkts_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, txPkts_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, rxMBytes_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, txMBytes_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, rxDropped_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, txDropped_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, rxErrors_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, txErrors_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, linkFailures_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_UsbModemStats_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.internal_static_com_ericsson_wifi_ewmnbi_UsbModemStats_fieldAccessorTable;
      }
      
      // Construct using com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        slot_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rxPkts_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        txPkts_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        rxMBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        txMBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        rxDropped_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        txDropped_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        rxErrors_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        txErrors_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        linkFailures_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.getDescriptor();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats getDefaultInstanceForType() {
        return com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.getDefaultInstance();
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats build() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats buildPartial() {
        com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats result = new com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.slot_ = slot_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rxPkts_ = rxPkts_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.txPkts_ = txPkts_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rxMBytes_ = rxMBytes_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.txMBytes_ = txMBytes_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.rxDropped_ = rxDropped_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.txDropped_ = txDropped_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.rxErrors_ = rxErrors_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.txErrors_ = txErrors_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.linkFailures_ = linkFailures_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats) {
          return mergeFrom((com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats other) {
        if (other == com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.getDefaultInstance()) return this;
        if (other.hasSlot()) {
          setSlot(other.getSlot());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasRxPkts()) {
          setRxPkts(other.getRxPkts());
        }
        if (other.hasTxPkts()) {
          setTxPkts(other.getTxPkts());
        }
        if (other.hasRxMBytes()) {
          setRxMBytes(other.getRxMBytes());
        }
        if (other.hasTxMBytes()) {
          setTxMBytes(other.getTxMBytes());
        }
        if (other.hasRxDropped()) {
          setRxDropped(other.getRxDropped());
        }
        if (other.hasTxDropped()) {
          setTxDropped(other.getTxDropped());
        }
        if (other.hasRxErrors()) {
          setRxErrors(other.getRxErrors());
        }
        if (other.hasTxErrors()) {
          setTxErrors(other.getTxErrors());
        }
        if (other.hasLinkFailures()) {
          setLinkFailures(other.getLinkFailures());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              slot_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              port_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rxPkts_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              txPkts_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              rxMBytes_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              txMBytes_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              rxDropped_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              txDropped_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              rxErrors_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              txErrors_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              linkFailures_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 slot = 1;
      private int slot_ ;
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSlot() {
        return slot_;
      }
      public Builder setSlot(int value) {
        bitField0_ |= 0x00000001;
        slot_ = value;
        onChanged();
        return this;
      }
      public Builder clearSlot() {
        bitField0_ = (bitField0_ & ~0x00000001);
        slot_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 port = 2;
      private int port_ ;
      public boolean hasPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPort() {
        return port_;
      }
      public Builder setPort(int value) {
        bitField0_ |= 0x00000002;
        port_ = value;
        onChanged();
        return this;
      }
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 rxPkts = 3;
      private int rxPkts_ ;
      public boolean hasRxPkts() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getRxPkts() {
        return rxPkts_;
      }
      public Builder setRxPkts(int value) {
        bitField0_ |= 0x00000004;
        rxPkts_ = value;
        onChanged();
        return this;
      }
      public Builder clearRxPkts() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rxPkts_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 txPkts = 4;
      private int txPkts_ ;
      public boolean hasTxPkts() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getTxPkts() {
        return txPkts_;
      }
      public Builder setTxPkts(int value) {
        bitField0_ |= 0x00000008;
        txPkts_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxPkts() {
        bitField0_ = (bitField0_ & ~0x00000008);
        txPkts_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 rxMBytes = 5;
      private int rxMBytes_ ;
      public boolean hasRxMBytes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getRxMBytes() {
        return rxMBytes_;
      }
      public Builder setRxMBytes(int value) {
        bitField0_ |= 0x00000010;
        rxMBytes_ = value;
        onChanged();
        return this;
      }
      public Builder clearRxMBytes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rxMBytes_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 txMBytes = 6;
      private int txMBytes_ ;
      public boolean hasTxMBytes() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getTxMBytes() {
        return txMBytes_;
      }
      public Builder setTxMBytes(int value) {
        bitField0_ |= 0x00000020;
        txMBytes_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxMBytes() {
        bitField0_ = (bitField0_ & ~0x00000020);
        txMBytes_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 rx_dropped = 7;
      private int rxDropped_ ;
      public boolean hasRxDropped() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getRxDropped() {
        return rxDropped_;
      }
      public Builder setRxDropped(int value) {
        bitField0_ |= 0x00000040;
        rxDropped_ = value;
        onChanged();
        return this;
      }
      public Builder clearRxDropped() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rxDropped_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 tx_dropped = 8;
      private int txDropped_ ;
      public boolean hasTxDropped() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getTxDropped() {
        return txDropped_;
      }
      public Builder setTxDropped(int value) {
        bitField0_ |= 0x00000080;
        txDropped_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxDropped() {
        bitField0_ = (bitField0_ & ~0x00000080);
        txDropped_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 rx_errors = 9;
      private int rxErrors_ ;
      public boolean hasRxErrors() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getRxErrors() {
        return rxErrors_;
      }
      public Builder setRxErrors(int value) {
        bitField0_ |= 0x00000100;
        rxErrors_ = value;
        onChanged();
        return this;
      }
      public Builder clearRxErrors() {
        bitField0_ = (bitField0_ & ~0x00000100);
        rxErrors_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 tx_errors = 10;
      private int txErrors_ ;
      public boolean hasTxErrors() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getTxErrors() {
        return txErrors_;
      }
      public Builder setTxErrors(int value) {
        bitField0_ |= 0x00000200;
        txErrors_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxErrors() {
        bitField0_ = (bitField0_ & ~0x00000200);
        txErrors_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 link_failures = 11;
      private int linkFailures_ ;
      public boolean hasLinkFailures() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getLinkFailures() {
        return linkFailures_;
      }
      public Builder setLinkFailures(int value) {
        bitField0_ |= 0x00000400;
        linkFailures_ = value;
        onChanged();
        return this;
      }
      public Builder clearLinkFailures() {
        bitField0_ = (bitField0_ & ~0x00000400);
        linkFailures_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.ericsson.wifi.ewmnbi.UsbModemStats)
    }
    
    static {
      defaultInstance = new UsbModemStats(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.ericsson.wifi.ewmnbi.UsbModemStats)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ericsson_wifi_ewmnbi_StatsBatch_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ericsson_wifi_ewmnbi_StatsBatch_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ericsson_wifi_ewmnbi_NodeStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ericsson_wifi_ewmnbi_NodeStats_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ericsson_wifi_ewmnbi_CableModemStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ericsson_wifi_ewmnbi_CableModemStats_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ericsson_wifi_ewmnbi_CableModemDsChStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ericsson_wifi_ewmnbi_CableModemDsChStats_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ericsson_wifi_ewmnbi_CableModemUsChStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ericsson_wifi_ewmnbi_CableModemUsChStats_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ericsson_wifi_ewmnbi_TunnelStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ericsson_wifi_ewmnbi_TunnelStats_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ericsson_wifi_ewmnbi_WifiStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ericsson_wifi_ewmnbi_WifiStats_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ericsson_wifi_ewmnbi_WlanStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ericsson_wifi_ewmnbi_WlanStats_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ericsson_wifi_ewmnbi_MeshStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ericsson_wifi_ewmnbi_MeshStats_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ericsson_wifi_ewmnbi_EthernetStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ericsson_wifi_ewmnbi_EthernetStats_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ericsson_wifi_ewmnbi_UsbModemStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ericsson_wifi_ewmnbi_UsbModemStats_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022ewmnbi_stats.proto\022\030com.ericsson.wifi." +
      "ewmnbi\032\023ewmnbi_common.proto\"\305\005\n\nStatsBat" +
      "ch\022\021\n\ttimestamp\030\001 \001(\004\022,\n\004moId\030\002 \001(\0132\036.co" +
      "m.ericsson.wifi.ewmnbi.MoId\0226\n\tnodeStats" +
      "\030\003 \001(\0132#.com.ericsson.wifi.ewmnbi.NodeSt" +
      "ats\022B\n\017cableModemStats\030\004 \001(\0132).com.erics" +
      "son.wifi.ewmnbi.CableModemStats\022J\n\023cable" +
      "ModemDsChStats\030\005 \003(\0132-.com.ericsson.wifi" +
      ".ewmnbi.CableModemDsChStats\022J\n\023cableMode" +
      "mUsChStats\030\006 \003(\0132-.com.ericsson.wifi.ewm",
      "nbi.CableModemUsChStats\022:\n\013tunnelStats\030\007" +
      " \003(\0132%.com.ericsson.wifi.ewmnbi.TunnelSt" +
      "ats\0226\n\twifiStats\030\010 \003(\0132#.com.ericsson.wi" +
      "fi.ewmnbi.WifiStats\0226\n\twlanStats\030\t \003(\0132#" +
      ".com.ericsson.wifi.ewmnbi.WlanStats\0226\n\tm" +
      "eshStats\030\n \003(\0132#.com.ericsson.wifi.ewmnb" +
      "i.MeshStats\022>\n\rethernetStats\030\013 \003(\0132\'.com" +
      ".ericsson.wifi.ewmnbi.EthernetStats\022>\n\ru" +
      "sbModemStats\030\014 \001(\0132\'.com.ericsson.wifi.e" +
      "wmnbi.UsbModemStats\"\231\002\n\tNodeStats\022\032\n\022cri",
      "ticalAlarmCount\030\001 \001(\r\022\027\n\017majorAlarmCount" +
      "\030\002 \001(\r\022\027\n\017minorAlarmCount\030\003 \001(\r\022\031\n\021warni" +
      "ngAlarmCount\030\004 \001(\r\022\031\n\021roundTripDelayMin\030" +
      "\005 \001(\r\022\031\n\021roundTripDelayMax\030\006 \001(\r\022\031\n\021roun" +
      "dTripDelayAvg\030\007 \001(\r\022\023\n\013cpuUsageMax\030\010 \001(\r" +
      "\022\023\n\013cpuUsageAvg\030\t \001(\r\022\023\n\013memUsageMax\030\n \001" +
      "(\r\022\023\n\013memUsageAvg\030\013 \001(\r\"S\n\017CableModemSta" +
      "ts\022\017\n\007cmIndex\030\001 \001(\r\022\013\n\003uas\030\002 \001(\r\022\016\n\006rese" +
      "ts\030\003 \001(\r\022\022\n\ndownEvents\030\004 \001(\r\"\314\001\n\023CableMo" +
      "demDsChStats\022\017\n\007cmIndex\030\001 \001(\r\022\017\n\007channel",
      "\030\002 \001(\r\022\022\n\nrxPowerMin\030\003 \001(\002\022\022\n\nrxPowerMax" +
      "\030\004 \001(\002\022\022\n\nrxPowerAvg\030\005 \001(\002\022\016\n\006snrMin\030\006 \001" +
      "(\002\022\016\n\006snrMax\030\007 \001(\002\022\016\n\006snrAvg\030\010 \001(\002\022\014\n\004uc" +
      "er\030\t \001(\002\022\014\n\004ccer\030\n \001(\002\022\013\n\003cer\030\013 \001(\002\"\233\001\n\023" +
      "CableModemUsChStats\022\017\n\007cmIndex\030\001 \001(\r\022\017\n\007" +
      "channel\030\002 \001(\r\022\022\n\ntxPowerMin\030\003 \001(\002\022\022\n\ntxP" +
      "owerMax\030\004 \001(\002\022\022\n\ntxPowerAvg\030\005 \001(\002\022\022\n\nt3T" +
      "imeouts\030\006 \001(\r\022\022\n\nt4Timeouts\030\007 \001(\r\"\355\001\n\013Tu" +
      "nnelStats\022\024\n\014tunnelEngine\030\001 \001(\r\022\016\n\006tunne" +
      "l\030\002 \001(\r\022\013\n\003uas\030\003 \001(\r\022\016\n\006rxPkts\030\004 \001(\r\022\016\n\006",
      "txPkts\030\005 \001(\r\022\020\n\010rxMBytes\030\006 \001(\r\022\020\n\010txMByt" +
      "es\030\007 \001(\r\022\023\n\013rxBcastPkts\030\010 \001(\r\022\023\n\013txBcast" +
      "Pkts\030\t \001(\r\022\023\n\013txOverLimit\030\n \001(\r\022\024\n\014echoL" +
      "ossRate\030\013 \001(\r\022\022\n\ndownEvents\030\014 \001(\r\"\300\003\n\tWi" +
      "fiStats\022\014\n\004slot\030\001 \001(\r\022\014\n\004port\030\002 \001(\r\022\020\n\010r" +
      "xMBytes\030\003 \001(\r\022\020\n\010txMBytes\030\004 \001(\r\022\031\n\021acces" +
      "sTxErrorRate\030\005 \001(\r\022\031\n\021accessRxErrorRate\030" +
      "\006 \001(\r\022\"\n\032accessRxDuplicateFrameRate\030\007 \001(" +
      "\r\022!\n\031accessRxLowModulationRate\030\010 \001(\r\022\025\n\r" +
      "noiseFloorMin\030\t \001(\002\022\025\n\rnoiseFloorMax\030\n \001",
      "(\002\022\025\n\rnoiseFloorAvg\030\013 \001(\002\022\022\n\nuniqueMacs\030" +
      "\014 \001(\r\022\030\n\020associationCount\030\r \001(\r\022\024\n\014sessi" +
      "onCount\030\016 \001(\r\022\023\n\013minuteCount\030\017 \001(\r\022\025\n\rch" +
      "BusynessTot\030\020 \001(\r\022\027\n\017chBusynessNoise\030\021 \001" +
      "(\r\022\032\n\022chBusynessNonLocal\030\022 \001(\r\022\014\n\004wmos\030\023" +
      " \001(\002\"\264\001\n\tWlanStats\022\014\n\004slot\030\001 \001(\r\022\014\n\004port" +
      "\030\002 \001(\r\022\016\n\006wlanId\030\003 \001(\r\022\020\n\010rxMBytes\030\004 \001(\r" +
      "\022\020\n\010txMBytes\030\005 \001(\r\022\022\n\nuniqueMacs\030\006 \001(\r\022\030" +
      "\n\020associationCount\030\007 \001(\r\022\024\n\014sessionCount" +
      "\030\010 \001(\r\022\023\n\013minuteCount\030\t \001(\r\"\201\001\n\tMeshStat",
      "s\022\014\n\004slot\030\001 \001(\r\022\014\n\004port\030\002 \001(\r\022\016\n\006linkId\030" +
      "\003 \001(\r\022\017\n\007rssiMin\030\004 \001(\002\022\017\n\007rssiMax\030\005 \001(\002\022" +
      "\017\n\007rssiAvg\030\006 \001(\002\022\025\n\rbhTxErrorRate\030\007 \001(\r\"" +
      "O\n\rEthernetStats\022\014\n\004slot\030\001 \001(\r\022\014\n\004port\030\002" +
      " \001(\r\022\020\n\010rxMBytes\030\003 \001(\r\022\020\n\010txMBytes\030\004 \001(\r" +
      "\"\324\001\n\rUsbModemStats\022\014\n\004slot\030\001 \001(\r\022\014\n\004port" +
      "\030\002 \001(\r\022\016\n\006rxPkts\030\003 \001(\r\022\016\n\006txPkts\030\004 \001(\r\022\020" +
      "\n\010rxMBytes\030\005 \001(\r\022\020\n\010txMBytes\030\006 \001(\r\022\022\n\nrx" +
      "_dropped\030\007 \001(\r\022\022\n\ntx_dropped\030\010 \001(\r\022\021\n\trx" +
      "_errors\030\t \001(\r\022\021\n\ttx_errors\030\n \001(\r\022\025\n\rlink",
      "_failures\030\013 \001(\r"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_ericsson_wifi_ewmnbi_StatsBatch_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_ericsson_wifi_ewmnbi_StatsBatch_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ericsson_wifi_ewmnbi_StatsBatch_descriptor,
              new java.lang.String[] { "Timestamp", "MoId", "NodeStats", "CableModemStats", "CableModemDsChStats", "CableModemUsChStats", "TunnelStats", "WifiStats", "WlanStats", "MeshStats", "EthernetStats", "UsbModemStats", },
              com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch.class,
              com.ericsson.wifi.ewmnbi.EwmnbiStats.StatsBatch.Builder.class);
          internal_static_com_ericsson_wifi_ewmnbi_NodeStats_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_ericsson_wifi_ewmnbi_NodeStats_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ericsson_wifi_ewmnbi_NodeStats_descriptor,
              new java.lang.String[] { "CriticalAlarmCount", "MajorAlarmCount", "MinorAlarmCount", "WarningAlarmCount", "RoundTripDelayMin", "RoundTripDelayMax", "RoundTripDelayAvg", "CpuUsageMax", "CpuUsageAvg", "MemUsageMax", "MemUsageAvg", },
              com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.class,
              com.ericsson.wifi.ewmnbi.EwmnbiStats.NodeStats.Builder.class);
          internal_static_com_ericsson_wifi_ewmnbi_CableModemStats_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_ericsson_wifi_ewmnbi_CableModemStats_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ericsson_wifi_ewmnbi_CableModemStats_descriptor,
              new java.lang.String[] { "CmIndex", "Uas", "Resets", "DownEvents", },
              com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.class,
              com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemStats.Builder.class);
          internal_static_com_ericsson_wifi_ewmnbi_CableModemDsChStats_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_ericsson_wifi_ewmnbi_CableModemDsChStats_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ericsson_wifi_ewmnbi_CableModemDsChStats_descriptor,
              new java.lang.String[] { "CmIndex", "Channel", "RxPowerMin", "RxPowerMax", "RxPowerAvg", "SnrMin", "SnrMax", "SnrAvg", "Ucer", "Ccer", "Cer", },
              com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.class,
              com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemDsChStats.Builder.class);
          internal_static_com_ericsson_wifi_ewmnbi_CableModemUsChStats_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_ericsson_wifi_ewmnbi_CableModemUsChStats_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ericsson_wifi_ewmnbi_CableModemUsChStats_descriptor,
              new java.lang.String[] { "CmIndex", "Channel", "TxPowerMin", "TxPowerMax", "TxPowerAvg", "T3Timeouts", "T4Timeouts", },
              com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.class,
              com.ericsson.wifi.ewmnbi.EwmnbiStats.CableModemUsChStats.Builder.class);
          internal_static_com_ericsson_wifi_ewmnbi_TunnelStats_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_ericsson_wifi_ewmnbi_TunnelStats_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ericsson_wifi_ewmnbi_TunnelStats_descriptor,
              new java.lang.String[] { "TunnelEngine", "Tunnel", "Uas", "RxPkts", "TxPkts", "RxMBytes", "TxMBytes", "RxBcastPkts", "TxBcastPkts", "TxOverLimit", "EchoLossRate", "DownEvents", },
              com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.class,
              com.ericsson.wifi.ewmnbi.EwmnbiStats.TunnelStats.Builder.class);
          internal_static_com_ericsson_wifi_ewmnbi_WifiStats_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_ericsson_wifi_ewmnbi_WifiStats_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ericsson_wifi_ewmnbi_WifiStats_descriptor,
              new java.lang.String[] { "Slot", "Port", "RxMBytes", "TxMBytes", "AccessTxErrorRate", "AccessRxErrorRate", "AccessRxDuplicateFrameRate", "AccessRxLowModulationRate", "NoiseFloorMin", "NoiseFloorMax", "NoiseFloorAvg", "UniqueMacs", "AssociationCount", "SessionCount", "MinuteCount", "ChBusynessTot", "ChBusynessNoise", "ChBusynessNonLocal", "Wmos", },
              com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.class,
              com.ericsson.wifi.ewmnbi.EwmnbiStats.WifiStats.Builder.class);
          internal_static_com_ericsson_wifi_ewmnbi_WlanStats_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_ericsson_wifi_ewmnbi_WlanStats_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ericsson_wifi_ewmnbi_WlanStats_descriptor,
              new java.lang.String[] { "Slot", "Port", "WlanId", "RxMBytes", "TxMBytes", "UniqueMacs", "AssociationCount", "SessionCount", "MinuteCount", },
              com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.class,
              com.ericsson.wifi.ewmnbi.EwmnbiStats.WlanStats.Builder.class);
          internal_static_com_ericsson_wifi_ewmnbi_MeshStats_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_ericsson_wifi_ewmnbi_MeshStats_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ericsson_wifi_ewmnbi_MeshStats_descriptor,
              new java.lang.String[] { "Slot", "Port", "LinkId", "RssiMin", "RssiMax", "RssiAvg", "BhTxErrorRate", },
              com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.class,
              com.ericsson.wifi.ewmnbi.EwmnbiStats.MeshStats.Builder.class);
          internal_static_com_ericsson_wifi_ewmnbi_EthernetStats_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_ericsson_wifi_ewmnbi_EthernetStats_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ericsson_wifi_ewmnbi_EthernetStats_descriptor,
              new java.lang.String[] { "Slot", "Port", "RxMBytes", "TxMBytes", },
              com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.class,
              com.ericsson.wifi.ewmnbi.EwmnbiStats.EthernetStats.Builder.class);
          internal_static_com_ericsson_wifi_ewmnbi_UsbModemStats_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_com_ericsson_wifi_ewmnbi_UsbModemStats_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ericsson_wifi_ewmnbi_UsbModemStats_descriptor,
              new java.lang.String[] { "Slot", "Port", "RxPkts", "TxPkts", "RxMBytes", "TxMBytes", "RxDropped", "TxDropped", "RxErrors", "TxErrors", "LinkFailures", },
              com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.class,
              com.ericsson.wifi.ewmnbi.EwmnbiStats.UsbModemStats.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.ericsson.wifi.ewmnbi.EwmnbiCommon.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
