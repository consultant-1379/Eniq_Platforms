//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.10.10 at 03:55:36 PM IST 
//


package com.ericsson.ims.mim;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.ericsson.ims.mim package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.ericsson.ims.mim
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DataType }
     * 
     */
    public DataType createDataType() {
        return new DataType();
    }

    /**
     * Create an instance of {@link AlarmType.Threshold }
     * 
     */
    public AlarmType.Threshold createAlarmTypeThreshold() {
        return new AlarmType.Threshold();
    }

    /**
     * Create an instance of {@link ScanFileType }
     * 
     */
    public ScanFileType createScanFileType() {
        return new ScanFileType();
    }

    /**
     * Create an instance of {@link AlarmType }
     * 
     */
    public AlarmType createAlarmType() {
        return new AlarmType();
    }

    /**
     * Create an instance of {@link MeasurementJobType.MeasurementJobReader }
     * 
     */
    public MeasurementJobType.MeasurementJobReader createMeasurementJobTypeMeasurementJobReader() {
        return new MeasurementJobType.MeasurementJobReader();
    }

    /**
     * Create an instance of {@link MeasurementJobReaderType }
     * 
     */
    public MeasurementJobReaderType createMeasurementJobReaderType() {
        return new MeasurementJobReaderType();
    }

    /**
     * Create an instance of {@link AlarmType.Identity }
     * 
     */
    public AlarmType.Identity createAlarmTypeIdentity() {
        return new AlarmType.Identity();
    }

    /**
     * Create an instance of {@link GroupType }
     * 
     */
    public GroupType createGroupType() {
        return new GroupType();
    }

    /**
     * Create an instance of {@link PmMimMetadataType }
     * 
     */
    public PmMimMetadataType createPmMimMetadataType() {
        return new PmMimMetadataType();
    }

    /**
     * Create an instance of {@link KeyTypesListType }
     * 
     */
    public KeyTypesListType createKeyTypesListType() {
        return new KeyTypesListType();
    }

    /**
     * Create an instance of {@link CapabilitiesType }
     * 
     */
    public CapabilitiesType createCapabilitiesType() {
        return new CapabilitiesType();
    }

    /**
     * Create an instance of {@link MocType }
     * 
     */
    public MocType createMocType() {
        return new MocType();
    }

    /**
     * Create an instance of {@link ArmDisarmlevelType }
     * 
     */
    public ArmDisarmlevelType createArmDisarmlevelType() {
        return new ArmDisarmlevelType();
    }

    /**
     * Create an instance of {@link PM.Data }
     * 
     */
    public PM.Data createPMData() {
        return new PM.Data();
    }

    /**
     * Create an instance of {@link AlarmType.Scan }
     * 
     */
    public AlarmType.Scan createAlarmTypeScan() {
        return new AlarmType.Scan();
    }

    /**
     * Create an instance of {@link ImsPmConfigType.NPMFConfig.PmApplication }
     * 
     */
    public ImsPmConfigType.NPMFConfig.PmApplication createImsPmConfigTypeNPMFConfigPmApplication() {
        return new ImsPmConfigType.NPMFConfig.PmApplication();
    }

    /**
     * Create an instance of {@link PM }
     * 
     */
    public PM createPM() {
        return new PM();
    }

    /**
     * Create an instance of {@link CapabilitiesType.CounterCapabilities }
     * 
     */
    public CapabilitiesType.CounterCapabilities createCapabilitiesTypeCounterCapabilities() {
        return new CapabilitiesType.CounterCapabilities();
    }

    /**
     * Create an instance of {@link CounterType.MeasurementResult }
     * 
     */
    public CounterType.MeasurementResult createCounterTypeMeasurementResult() {
        return new CounterType.MeasurementResult();
    }

    /**
     * Create an instance of {@link ImsPmConfigType.NPMFConfig }
     * 
     */
    public ImsPmConfigType.NPMFConfig createImsPmConfigTypeNPMFConfig() {
        return new ImsPmConfigType.NPMFConfig();
    }

    /**
     * Create an instance of {@link MeasurementJobType }
     * 
     */
    public MeasurementJobType createMeasurementJobType() {
        return new MeasurementJobType();
    }

    /**
     * Create an instance of {@link ThresholdMonitorReaderType }
     * 
     */
    public ThresholdMonitorReaderType createThresholdMonitorReaderType() {
        return new ThresholdMonitorReaderType();
    }

    /**
     * Create an instance of {@link CounterType.CollectionMethod }
     * 
     */
    public CounterType.CollectionMethod createCounterTypeCollectionMethod() {
        return new CounterType.CollectionMethod();
    }

    /**
     * Create an instance of {@link CounterType }
     * 
     */
    public CounterType createCounterType() {
        return new CounterType();
    }

    /**
     * Create an instance of {@link ImsPmConfigType }
     * 
     */
    public ImsPmConfigType createImsPmConfigType() {
        return new ImsPmConfigType();
    }

    /**
     * Create an instance of {@link ThresholdMonitorType }
     * 
     */
    public ThresholdMonitorType createThresholdMonitorType() {
        return new ThresholdMonitorType();
    }

    /**
     * Create an instance of {@link MonitorGroupType }
     * 
     */
    public MonitorGroupType createMonitorGroupType() {
        return new MonitorGroupType();
    }

}
