#!/usr/bin/bash 
# ********************************************************************
# Ericsson Radio Systems AB                                     SCRIPT
# ********************************************************************
#
# (c) Ericsson Radio Systems AB 2013 - All rights reserved.
#
# of Ericsson Radio Systems AB, Sweden. The programs may be used 
# and/or copied only with the written permission from Ericsson Radio 
# Systems AB or in accordance with the terms and conditions stipulated 
# in the agreement/contract under which the program(s) have been 
# supplied..
#
# ********************************************************************
# Name    : monitor_cache_usage.sh
# Revision: main/at_eniq/1
# Purpose : This script is used for monitoring Temp and Main Cache
# usage in the system.  
# The script will save data for each min.
#
# Usage   : monitor_cache_usage.sh
#
# ********************************************************************
# Anirudh Bhat (anirudh.bhat@wipro.com)
# ********************************************************************


# ***********************************************************************
#Global variable
# ***********************************************************************
_date_=`date '+%Y-%m-%d'`
_time_=`date '+%H:%M'`
set main=0.0
set temp=0
SYBASE=/eniq/sybase_iq
export SYBASE

SQLANY=/eniq/sql_anywhere
export SQLANY

. ${SYBASE}/IQ.sh

# Internal directory variable
CONF_DIR=/eniq/sw/conf
export CONF_DIR

BIN_DIR=/eniq/sw/bin
export BIN_DIR

RT_DIR=/eniq/sw/runtime
export RT_DIR

# ASN.1 library stuff
OSS_ASN1_JAVA="${RT_DIR}/nokalva/asn1pjav/solaris.tgt/3.0"
export OSS_ASN1_JAVA

OSSINFO=${OSS_ASN1_JAVA}
export OSSINFO

# Path extension
PATH=${PATH}:${OSS_ASN1_JAVA}:/usr/local/bin:${BIN_DIR}
export PATH

LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${OSS_ASN1_JAVA}/lib:${SQLANY}/lib64
export LD_LIBRARY_PATH

LOGSFILE=/eniq/log/sw_log/iq/dwhdb/logscheck.log
export LOGSFILE

if [ -s /eniq/admin/lib/common_functions.lib ]; then
    . /eniq/admin/lib/common_functions.lib
else
    $ECHO "Could not find /eniq/admin/lib/common_functions.lib"
    exit 1
fi


NAWK=/usr/bin/nawk
DATE=/usr/bin/date
FIND=/usr/bin/find
GREP=/usr/bin/grep
RM=/usr/bin/rm
ECHO=/usr/bin/echo

_date1_=`$DATE +%d`
_time1_=`$DATE '+%T'`
_time2_="01:00:00"


if [ -z "${CONF_DIR}" ] ; then
  echo "ERROR: CONF_DIR is not set"
  exit 1
fi

. ${CONF_DIR}/niq.rc

_dir_=`/usr/bin/dirname $0`
SCRIPTHOME=`cd $_dir_ 2>/dev/null && pwd || echo $_dir_`

DCPASSWORD=`inigetpassword DWH -v DCPassword -f ${CONF_DIR}/niq.ini`
DBAPASSWORD=`inigetpassword DB -f ${CONF_DIR}/niq.ini -v DBAPassword`


JAVA_HOME="/eniq/sw/runtime/java"

CPATH="${PLATFORM_DIR}"

DIRS=`ls ${PLATFORM_DIR}`

for file in ${DIRS}
do
  if [ -d ${PLATFORM_DIR}/${file}/dclib ]
  then
    JARS=`ls ${PLATFORM_DIR}/${file}/dclib/*.jar`

    for jar in ${JARS}
    do
      CPATH="${CPATH}:${jar}"
    done
  fi
done

#
# log file name
#
HOSTNAME=`hostname`
LOGFILE="Cache"$HOSTNAME".log"
touch /eniq/log/sw_log/iq/dwhdb/mainBuffer-$_date_.log
touch /eniq/log/sw_log/iq/dwhdb/tempBuffer-$_date_.log


#
# check sql out-put
#
check_sqlout() {

SQLOUTFILE=$1

ERRORMSG=`cat $SQLOUTFILE | $GREP -v "already exists" | egrep -i "command not found|SQL Anywhere Error|CT-LIBRARY error"`
ERRORCODE=`cat $SQLOUTFILE | $GREP -v "already exists" | egrep -i "command not found|SQL Anywhere Error|CT-LIBRARY error" | wc -l | $NAWK '{print $1}'`

if [ "$ERRORCODE" != 0 ]; then
   echo "Error ! $ERRORMSG"
   echo "For more error details please check the log file : $LOGFILE"
   cat "Error ! " >> ${LOGFILE}
   cat $SQLOUTFILE >> ${LOGFILE}
   exit 32
fi
}

# ********************************************************************
#
#   Main body of program
#
# ********************************************************************
#


# create temporary table to keep record 
# - if required table "DC.Monitor_db" already present it will not create again
# - if the table is not present but script is not able to create the table it will throw an error and exit
echo "creating table"
iqisql -Udc -P$DCPASSWORD -Sdwhdb -i /eniq/sw/bin/create_monitor_cache.sql > /tmp/Cachetablecreated.txt 
check_sqlout /tmp/Cachetablecreated.txt 

#Taking the values of "Temporary IQ Buffers" and "Main IQ Buffers" from the database.
main=`/eniq/sybase_iq/IQ-16_0/bin64/dbisql -c "UID=dba;PWD=$DBAPASSWORD" -host localhost -port 2640 -onerror exit -nogui sp_iqstatus |$GREP -i "Main IQ Buffers"|grep -i used|$NAWK '{print $5}'|$NAWK -F',' '{print $1}'`
temp=`/eniq/sybase_iq/IQ-16_0/bin64/dbisql -c "UID=dba;PWD=$DBAPASSWORD" -host localhost -port 2640 -onerror exit -nogui sp_iqstatus |$GREP -i "Temporary IQ Buffers"|grep -i used|$NAWK '{print $5}'|$NAWK -F',' '{print $1}'`

#HU77234
#Storing output into a file.
echo "Cache usage for $_time_:$main" >> /eniq/log/sw_log/iq/dwhdb/mainBuffer-$_date_.log
echo "Cache usage for $_time_:$temp" >> /eniq/log/sw_log/iq/dwhdb/tempBuffer-$_date_.log

#Storing into database.
command="INSERT INTO DC.Monitor_db(DATETIMEID, ROP,MAIN_BUFFER_USAGE,TEMP_BUFFER_USAGE)VALUES ('$_date_', '$_time_', $main, $temp)"
/eniq/sybase_iq/IQ-16_0/bin64/dbisql -c "UID=dc;PWD=$DCPASSWORD" -host localhost -port 2640 -onerror exit -nogui $command   
                                                                                      

#Deleting data older than 2 years from "DC.Monitor_db" 
if [ $_date1_ -eq 07 ] || [ $_date1_ -eq 14 ] || [ $_date1_ -eq 21 ] || [ $_date1_ -eq 28 ] && [ "$_time1_" == "$_time2_"];then
	/eniq/sybase_iq/IQ-16_0/bin64/dbisql -c "UID=dc;PWD=$DCPASSWORD" -host localhost -port 2640 -onerror exit -nogui "SELECT count(*) FROM DC.Monitor_db WHERE DATETIMEID<dateadd(year, -2, NOW());output to /eniq/log/sw_log/iq/dwhdb/count.txt"
	read count < /eniq/log/sw_log/iq/dwhdb/count.txt
	if [[ count > 0 ]];then
		$ECHO "`$DATE '+%Y_%m_%d_%H:%M:%S'` : Data older than 2 years are deleted from DC.Monitor_db" >> ${LOGSFILE}
	fi
	command1="DELETE FROM DC.Monitor_db WHERE DATETIMEID<dateadd(year, -2, NOW())"
	/eniq/sybase_iq/IQ-16_0/bin64/dbisql -c "UID=dc;PWD=$DCPASSWORD" -host localhost -port 2640 -onerror exit -nogui $command1
fi

$RM -rf /eniq/log/sw_log/iq/dwhdb/count.txt

$FIND /eniq/log/sw_log/iq/dwhdb -name 'mainBuffer*.log' -mtime +7  | xargs $RM
$FIND /eniq/log/sw_log/iq/dwhdb -name 'tempBuffer*.log' -mtime +7  | xargs $RM

if [ $? -ne 0 ] ; then
		echo "Could not delete logs of mainBuffer and tempbuffer which are older than 7days"
		exit 102
fi