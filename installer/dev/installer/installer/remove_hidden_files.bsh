#!/bin/bash
# *******************************************************************
# * COPYRIGHT (c)      Ericsson AB, Sweden                          *
# *                   All rights reserved                           *
# *                                                                 *
# * The copyright to the computer program(s) herein is the property *
# * of Ericsson Radio Systems AB, Sweden.                           *
# * The programs may be used or copied only with the written        *
# * permission of Ericsson Radio Systems AB, Sweden.                *
# *                                                                 *
# *******************************************************************
#
# Name    : remove_hidden_files.bsh
# Date    : 23/02/2015
# Revision: C
# Purpose : This script will remove all the .nfsXXXX files under, 
#			1./eniq/mediator
# 
# Note : Later we can add as required.
# ********************************************************************
#
#   Command Section
#
# ********************************************************************
NAWK=/usr/bin/nawk
ECHO=/usr/bin/echo
FIND=/usr/bin/find
GREP=/usr/bin/grep
KILL=/usr/bin/kill
LSOF=/usr/local/bin/lsof
RM=/usr/bin/rm
TAIL=/usr/bin/tail
TOUCH=/usr/bin/touch

# ********************************************************************
#
#       Configuration Section
#
# ********************************************************************
NOW=$(date +"%Y-%m-%d")
LOG_DIR=/eniq/log/sw_log
LOG_FILE=$LOG_DIR/engine/remove_hidden_files_$NOW.log


### Function: _echo ###
#
# Write the log into LOG_FILE
#
# Arguments:
#       $1 - Content write in the file.
# Return Values:
#       none
_echo(){
 	$ECHO "$1" >> $LOG_FILE
}

### Function: remove_hidden ###
#
# Remove the hidden files by getting process ID.
#
# Arguments:
#       $1 - File Name to delete
# Return Values:
#       none
remove_hidden(){
local _hidden_file_=$1
if [ -d $_hidden_file_ ]; then
	TIMENOW=$(date +"%T")
	_echo "$TIMENOW : $_hidden_file_ is a directory"
	$RM -rf $_hidden_file_ > /dev/null 2>&1
else
	PID=`$LSOF $_hidden_file_ | $GREP $_hidden_file_ | $GREP -v "grep" | $NAWK -F" " '{print $2}' | $TAIL -1`
	if [ -z $PID ]; then
		TIMENOW=$(date +"%T")
		_echo "$TIMENOW : No process associated with $_hidden_file_ file."
		$RM -f $_hidden_file_ > /dev/null 2>&1
	else
		TIMENOW=$(date +"%T")
		_echo "$TIMENOW : One process associated with $_hidden_file_ and PID is $PID"
		$KILL -9 $PID
		if [ -f $_hidden_file_ ]; then
			TIMENOW=$(date +"%T")
			_echo "$TIMENOW : Removing $_hidden_file_"
			$RM -f $_hidden_file_ > /dev/null 2>&1
		fi
	fi
fi
}

# ********************************************************************
#
#   Main body of program
#
# ********************************************************************

#Creating a list of directory to check
if [ ! -f /tmp/dir_list.txt ]; then
	$TOUCH /tmp/dir_list.txt 
fi

if [ $1 ]; then
	$ECHO $1 > /tmp/dir_list.txt
else
	$ECHO "/eniq/data/pmdata_soem" >> /tmp/dir_list.txt
fi

# For each directory, get all the hidden files
while read _is_hidden_
do
	if [ -d $_is_hidden_ ]; then
		$FIND $_is_hidden_ -name '.nfs*' >> /tmp/hidden.txt
	fi
done < /tmp/dir_list.txt

# Remove all the hidden files from above directories

if [ -f /tmp/hidden.txt ]; then
while read first_line
do
	remove_hidden $first_line
done < "/tmp/hidden.txt"
$RM -f /tmp/hidden.txt > /dev/null 2>&1
fi

# Cleanup
$RM -f /tmp/dir_list.txt > /dev/null 2>&1

TIMENOW=$(date +"%T")
_echo "$TIMENOW : Deletion completed."	

exit 0
