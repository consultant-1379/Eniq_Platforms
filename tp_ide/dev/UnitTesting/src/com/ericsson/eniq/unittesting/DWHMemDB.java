package com.ericsson.eniq.unittesting;

import java.io.File;

public class DWHMemDB extends UnitTestDatabase
{
	
	// DWH System Tables
	private String[] dwhSystemTableNames = {"SYSCOLUMNS", "SYSINDEXES", "SYSINDEX", "SYSTABLE"};
	
	private String [] dwhTableNames = {"DC_E_PT_BSS_APPLATFORM_DAY_01", "DC_E_PT_BSS_APPLATFORM_DAY_02", "DC_E_PT_BSS_APPLATFORM_DAY_03", "DC_E_PT_BSS_APPLATFORM_DAY_04", 
			"DC_E_PT_BSS_APPLATFORM_DAY_05", "DC_E_PT_BSS_APPLATFORM_DAY_06", "DC_E_PT_BSS_APPLATFORM_RAW_01", "DC_E_PT_BSS_APPLATFORM_RAW_02",
			"DC_E_PT_BSS_APPLATFORM_RAW_03", "DC_E_PT_BSS_APPLATFORM_RAW_04", "DC_E_PT_BSS_APPLATFORM_RAW_05", "DC_E_PT_BSS_APPLATFORM_RAW_06", 
			"DC_E_PT_BSS_BSC_DAY_01", "DC_E_PT_BSS_BSC_DAY_02", "DC_E_PT_BSS_BSC_DAY_03", "DC_E_PT_BSS_BSC_DAY_04",
			"DC_E_PT_BSS_BSC_DAY_05", "DC_E_PT_BSS_BSC_DAY_06", "DC_E_PT_BSS_BSC_RAW_01", "DC_E_PT_BSS_BSC_RAW_02",
			 "DC_E_PT_BSS_BSC_RAW_03", "DC_E_PT_BSS_BSC_RAW_04", "DC_E_PT_BSS_BSC_RAW_05", "DC_E_PT_BSS_BSC_RAW_06", 
			"DC_E_PT_CNAXE_AAL2PATH_DAY_01", "DC_E_PT_CNAXE_AAL2PATH_DAY_02", "DC_E_PT_CNAXE_AAL2PATH_DAY_03", "DC_E_PT_CNAXE_AAL2PATH_DAY_04", 
			"DC_E_PT_CNAXE_AAL2PATH_DAY_05", "DC_E_PT_CNAXE_AAL2PATH_DAY_06", "DC_E_PT_CNAXE_AAL2PATH_RAW_01", "DC_E_PT_CNAXE_AAL2PATH_RAW_02", 
			"DC_E_PT_CNAXE_AAL2PATH_RAW_03", "DC_E_PT_CNAXE_AAL2PATH_RAW_04", "DC_E_PT_CNAXE_AAL2PATH_RAW_05", "DC_E_PT_CNAXE_AAL2PATH_RAW_06", 
			"DC_E_PT_CNAXE_HLR_DAY_01", "DC_E_PT_CNAXE_HLR_DAY_02", "DC_E_PT_CNAXE_HLR_DAY_03", "DC_E_PT_CNAXE_HLR_DAY_04", 
			"DC_E_PT_CNAXE_HLR_DAY_05", "DC_E_PT_CNAXE_HLR_DAY_06", "DC_E_PT_CNAXE_HLR_PREV", "DC_E_PT_CNAXE_HLR_RAW_01", 
			"DC_E_PT_CNAXE_HLR_RAW_02", "DC_E_PT_CNAXE_HLR_RAW_03", "DC_E_PT_CNAXE_HLR_RAW_04", "DC_E_PT_CNAXE_HLR_RAW_05", "DC_E_PT_CNAXE_HLR_RAW_06",
			"DC_E_PT_CNAXE_MTRAFTYPE_DAY_01", "DC_E_PT_CNAXE_MTRAFTYPE_DAY_02", "DC_E_PT_CNAXE_MTRAFTYPE_DAY_03", "DC_E_PT_CNAXE_MTRAFTYPE_RAW_01", 
			"DC_E_PT_CNAXE_MTRAFTYPE_RAW_02","DC_E_PT_CNAXE_MTRAFTYPE_RAW_03", "DC_E_PT_CNAXE_VLR_DAY_01", "DC_E_PT_CNAXE_VLR_DAY_02", 
			"DC_E_PT_CNAXE_VLR_DAY_03", "DC_E_PT_CNAXE_VLR_DAY_04", "DC_E_PT_CNAXE_VLR_DAY_05", "DC_E_PT_CNAXE_VLR_DAY_06", "DC_E_PT_CNAXE_VLR_RAW_01",
			"DC_E_PT_CNAXE_VLR_RAW_02", "DC_E_PT_CNAXE_VLR_RAW_03", "DC_E_PT_CNAXE_VLR_RAW_04", "DC_E_PT_CNAXE_VLR_RAW_05", "DC_E_PT_CNAXE_VLR_RAW_06", 
			"DC_E_PT_ELEMBH_RANKBH_01", "DC_E_PT_ELEMBH_RANKBH_02", "DC_E_PT_ELEMBH_RANKBH_03", "DC_E_PT_ELEMBH_RANKBH_04", "DC_E_PT_ELEMBH_RANKBH_05", 
			"DC_E_PT_ELEMBH_RANKBH_06", "DC_E_PT_MGW_GIGABITETHERNET_COUNT_01", "DC_E_PT_MGW_GIGABITETHERNET_COUNT_02",
			"DC_E_PT_MGW_GIGABITETHERNET_COUNT_03", "DC_E_PT_MGW_GIGABITETHERNET_DAY_01", "DC_E_PT_MGW_GIGABITETHERNET_DAY_02",
			"DC_E_PT_MGW_GIGABITETHERNET_DAY_03", "DC_E_PT_MGW_GIGABITETHERNET_RAW_01", "DC_E_PT_MGW_GIGABITETHERNET_RAW_02",
			"DC_E_PT_MGW_GIGABITETHERNET_RAW_03", "DC_E_PT_MGW_VCLTP_COUNT_01", "DC_E_PT_MGW_VCLTP_COUNT_02", "DC_E_PT_MGW_VCLTP_COUNT_03",
			"DC_E_PT_MGW_VCLTP_COUNT_04", "DC_E_PT_MGW_VCLTP_COUNT_05", "DC_E_PT_MGW_VCLTP_COUNT_06", "DC_E_PT_MGW_VCLTP_DAY_01",
			"DC_E_PT_MGW_VCLTP_DAY_02", "DC_E_PT_MGW_VCLTP_DAY_03", "DC_E_PT_MGW_VCLTP_DAY_04", "DC_E_PT_MGW_VCLTP_DAY_05",
			"DC_E_PT_MGW_VCLTP_DAY_06", "DC_E_PT_MGW_VCLTP_DAYBH_01", "DC_E_PT_MGW_VCLTP_DAYBH_02", "DC_E_PT_MGW_VCLTP_DAYBH_03",
			"DC_E_PT_MGW_VCLTP_DAYBH_04", "DC_E_PT_MGW_VCLTP_DAYBH_05", "DC_E_PT_MGW_VCLTP_DAYBH_06", "DC_E_PT_MGW_VCLTP_RAW_01",
			"DC_E_PT_MGW_VCLTP_RAW_02", "DC_E_PT_MGW_VCLTP_RAW_03", "DC_E_PT_MGW_VCLTP_RAW_04", "DC_E_PT_MGW_VCLTP_RAW_05", "DC_E_PT_MGW_VCLTP_RAW_06",
			"DC_E_PT_MGW_VCLTP_V_DAY_01", "DC_E_PT_MGW_VCLTP_V_DAY_02", "DC_E_PT_MGW_VCLTP_V_DAY_03", "DC_E_PT_MGW_VCLTP_V_DAY_04", "DC_E_PT_MGW_VCLTP_V_DAYBH_01",
			"DC_E_PT_MGW_VCLTP_V_DAYBH_02", "DC_E_PT_MGW_VCLTP_V_DAYBH_03", "DC_E_PT_MGW_VCLTP_V_DAYBH_04", "DC_E_PT_MGW_VCLTP_V_RAW_01",
			"DC_E_PT_MGW_VCLTP_V_RAW_02", "DC_E_PT_MGW_VCLTP_V_RAW_03", "DC_E_PT_MGW_VCLTP_V_RAW_04", "DC_E_PT_MGW_VCLTP_V_RAW_05",
			"DC_E_PT_MGW_VCLTP_V_RAW_06", "DC_E_PT_MGW_VCLTP_V_RAW_07", "DC_E_PT_MGW_VCLTP_V_RAW_08", "DC_E_PT_MGW_VCLTP_V_RAW_09",
			"DC_E_PT_SASN_PROCESS_COUNT_01", "DC_E_PT_SASN_PROCESS_COUNT_02", "DC_E_PT_SASN_PROCESS_DAY_01", "DC_E_PT_SASN_PROCESS_DAY_02",
			"DC_E_PT_SASN_PROCESS_RAW_01", "DC_E_PT_SASN_PROCESS_RAW_02", "DC_E_PT_SASN_SERVER_DAY_01", "DC_E_PT_SASN_SERVER_DAY_02",
			"DC_E_PT_SASN_SERVER_RAW_01", "DC_E_PT_SASN_SERVER_RAW_02", "DC_E_PT_VCLTPBH_RANKBH_01", "DC_E_PT_VCLTPBH_RANKBH_02",
			"DC_E_PT_VCLTPBH_RANKBH_03", "DC_E_PT_VCLTPBH_RANKBH_04", "DC_E_PT_VCLTPBH_RANKBH_05", "DC_E_PT_VCLTPBH_RANKBH_06"};
	
	public DWHMemDB()
	{
		super("dwh");
	}
	
	
	/**
	 * This returns an array with the names of the DWH System Tables Names
	 * @return DWH System Table Names
	 */
	public String[] getDwhSystemTableNames()
	{
		return this.dwhSystemTableNames;
	}
		
	/**
	 * This returns an array with the names of the DWH Tables Names
	 * @return DWH Table Names
	 */
	public String[] getDwhTableNames()
	{
		return this.dwhTableNames;
	}
	
	/**
	 * This creates the Schema that will contain views of the system tables 
	 * that will simulate the SybaseIQ system tables 	 *
	 */
	public void createSystemTableSchema()
	{
		File createSchema = new File(sqlDir + "createSysSchema_dwh.sql");
		
		try
		{
			System.out.println("Creating the Schema");
			super.runSQLFile( createSchema );
			System.out.println("Schema Created");
		}
		
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public void createViews()
	{
		File createViews = new File (sqlDir + "createViews_dwh.sql");
		
		try
		{
			System.out.println("Creating Views");
			super.runSQLFile(createViews);
			System.out.println("Views Created");
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
}
